<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>afacode的博客</title>
  
  <subtitle>人懒，偶尔记录</subtitle>
  <link href="https://blog.afacode.top/atom.xml" rel="self"/>
  
  <link href="https://blog.afacode.top/"/>
  <updated>2023-07-14T03:37:52.036Z</updated>
  <id>https://blog.afacode.top/</id>
  
  <author>
    <name>afacode(阿发)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>虚拟列表（动态高度）</title>
    <link href="https://blog.afacode.top/2023/04/08/af-Virtual-Dynamic-Height/"/>
    <id>https://blog.afacode.top/2023/04/08/af-Virtual-Dynamic-Height/</id>
    <published>2023-04-08T14:19:30.000Z</published>
    <updated>2023-07-14T03:37:52.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="虚拟列表（动态高度）"><a href="#虚拟列表（动态高度）" class="headerlink" title="虚拟列表（动态高度）"></a>虚拟列表（动态高度）</h2><blockquote><p><code>afVirtualDynamicHeight.vue</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div ref&#x3D;&quot;virtualRefs&quot; @scroll&#x3D;&quot;_handleScroll&quot; :style&#x3D;&quot;virtualFixedHeight&quot; class&#x3D;&quot;af-virtual_fixed-height&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;af-virtual_scroll&quot; :style&#x3D;&quot;virtualScrollHeight&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;af-virtual_content&quot; :style&#x3D;&quot;virtualTranslate&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        ref&#x3D;&quot;virtualListRefs&quot;</span><br><span class="line">        class&#x3D;&quot;content-item&quot;</span><br><span class="line">        :data-index&#x3D;&quot;item.$index&quot;</span><br><span class="line">        v-for&#x3D;&quot;item in virtualList&quot;</span><br><span class="line">        :key&#x3D;&quot;&#96;$&#123;item[rowKey]&#125;_$&#123;item.$index&#125;&#96;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;slot :item&#x3D;&quot;item&quot; :index&#x3D;&quot;item.$index&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; unThrottle &#125; from &#39;@&#x2F;af3.0&#x2F;plugins&#x2F;utils&#x2F;index.js&#39;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;afVirtualDynamicHeight&#39;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    &#x2F;&#x2F; 列表数据</span><br><span class="line">    list: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 列表高度</span><br><span class="line">    virtualMaxHeight: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#39;250px&#39;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 数据总数量</span><br><span class="line">    virtualTotal: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 单个高度</span><br><span class="line">    itemHeight: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 40,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 默认展示条数</span><br><span class="line">    limit: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 15,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 唯一标识</span><br><span class="line">    rowKey: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 距离顶部缓冲区条数</span><br><span class="line">    bufferSize: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 5,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 是否开启分页</span><br><span class="line">    isPaging: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 距离滚动底部 多少px 触发分页</span><br><span class="line">    offsetBottom: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 100,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    this._virtualRefs &#x3D; null; &#x2F;&#x2F; 滚动实例</span><br><span class="line">    this._cacheListOption &#x3D; []; &#x2F;&#x2F; 缓存数据的高度</span><br><span class="line">    this._currentStartIndex &#x3D; 0; &#x2F;&#x2F; 当前滚动的位置</span><br><span class="line">    this._handleScroll &#x3D; () &#x3D;&gt; &#123;&#125;; &#x2F;&#x2F; 节流函数</span><br><span class="line">    return &#123;</span><br><span class="line">      isLoad: true, &#x2F;&#x2F; 分页节流触发</span><br><span class="line">      endIndex: 0,</span><br><span class="line">      scrollTop: 0,</span><br><span class="line">      startIndex: 0,</span><br><span class="line">      virtualList: [],</span><br><span class="line">      currentIndex: 0,</span><br><span class="line">      dynamicHeight: 0, &#x2F;&#x2F; 动态高度</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    &#x2F;&#x2F; 当前list长度</span><br><span class="line">    getListCount() &#123;</span><br><span class="line">      return (Array.isArray(this.list) &amp;&amp; this.list.length) || 0;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动可视区最大高度</span><br><span class="line">    virtualFixedHeight() &#123;</span><br><span class="line">      return &#96;max-height:$&#123;this.virtualMaxHeight&#125;;&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动的高度</span><br><span class="line">    virtualScrollHeight() &#123;</span><br><span class="line">      return &#96;height:$&#123;this.dynamicHeight&#125;px;&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 每一项高度样式</span><br><span class="line">    virtualItemHeight() &#123;</span><br><span class="line">      return &#96;height:$&#123;this.itemHeight&#125;px;&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 动画</span><br><span class="line">    virtualTranslate() &#123;</span><br><span class="line">      &#x2F;&#x2F; 每次滚动的Y</span><br><span class="line">      const y &#x3D; this.startIndex &gt;&#x3D; 1 ? this._cacheListOption[this.startIndex - 1].offset : 0;</span><br><span class="line">      return &#96;transform:translate3d(0,$&#123;y&#125;px,0); transform 0.01s cubic-bezier(0.25, 0.02, 0.35, 0.89) 0s&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    list(arr) &#123;</span><br><span class="line">      if (!this.startIndex) &#123;</span><br><span class="line">        if (!Array.isArray(arr) || arr.length &lt;&#x3D; 0) &#123;</span><br><span class="line">          this.virtualList &#x3D; [];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.init();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.isLoad &#x3D; true;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;**</span><br><span class="line">   * 不固定高度的虚拟列表逻辑</span><br><span class="line">   * 不必在意每一项的高度</span><br><span class="line">   * 只要在意这个滚动列表的高度，在滚动的时候，去计算每一项的高度 ，然后去加剪总高度即可</span><br><span class="line">   *&#x2F;</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    if (!this._virtualRefs) &#123;</span><br><span class="line">      this._virtualRefs &#x3D; this.$refs.virtualRefs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 有时候父级使用v-if 的时候，第一次watch 并不会执行</span><br><span class="line">    if (Array.isArray(this.list) &amp;&amp; this.list.length) &#123;</span><br><span class="line">      this.init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动防抖</span><br><span class="line">    this._handleScroll &#x3D; unThrottle(this.handleScroll, 180);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F; 初始化数据</span><br><span class="line">    init() &#123;</span><br><span class="line">      this.isLoad &#x3D; true;</span><br><span class="line">      this.startIndex &#x3D; 0;</span><br><span class="line">      this.endIndex &#x3D; this.limit + this.bufferSize;</span><br><span class="line">      this._cacheListOption &#x3D; this.cacheVirtualList();</span><br><span class="line">      this._virtualRefs &amp;&amp; (this._virtualRefs.scrollTop &#x3D; 0);</span><br><span class="line">      if (Array.isArray(this.list) &amp;&amp; this.list.length &gt; 0) &#123;</span><br><span class="line">        this.virtualList &#x3D; this.getVirtualList();</span><br><span class="line">        this.getDynamicHeight();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 判断数据是否相等</span><br><span class="line">      if (!this.isPaging &amp;&amp; this.list.length - this.virtualTotal &lt; 0) &#123;</span><br><span class="line">        console.error(</span><br><span class="line">          &#96;当前不是分页获取数据，传入数据【list：$&#123;this.list.length&#125;】与数据总数【virtualTotal：$&#123;this.virtualTotal&#125;】不相等，请注意查看数据是否正确&#96;</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 搜索初始化</span><br><span class="line">    initSearch() &#123;</span><br><span class="line">      this.scrollTop &#x3D; 0;</span><br><span class="line">      this.startIndex &#x3D; 0;</span><br><span class="line">      this.isLoad &#x3D; false;</span><br><span class="line">      this.endIndex &#x3D; this.limit + this.bufferSize;</span><br><span class="line">      this._virtualRefs &amp;&amp; (this._virtualRefs.scrollTop &#x3D; 0);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 缓存计算高度</span><br><span class="line">    cacheVirtualList() &#123;</span><br><span class="line">      const arr &#x3D; [];</span><br><span class="line">      &#x2F;&#x2F; 注意这块我们用了 &lt;&#x3D; 是为了渲染x+1个元素用来在让滚动变得连续（永远渲染在判断&amp;渲染x+2）</span><br><span class="line">      for (let i &#x3D; 0; i &lt; this.virtualTotal; i++) &#123;</span><br><span class="line">        arr.push(&#123;</span><br><span class="line">          currentIndex: i, &#x2F;&#x2F; 当前位置</span><br><span class="line">          isComputed: false, &#x2F;&#x2F; 是否计算过高度</span><br><span class="line">          height: this.itemHeight, &#x2F;&#x2F; 默认高度</span><br><span class="line">          offset: (i + 1) * this.itemHeight, &#x2F;&#x2F; 所在的位置</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      this.dynamicHeight &#x3D; arr[arr.length - 1].offset;</span><br><span class="line">      return arr;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 动态计算高度</span><br><span class="line">    getDynamicHeight() &#123;</span><br><span class="line">      this.clearTimeout();</span><br><span class="line">      this._timeout &#x3D; setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        const nodeList &#x3D; this.$refs.virtualListRefs;</span><br><span class="line">        let index &#x3D; 0;</span><br><span class="line">        let item &#x3D; null; &#x2F;&#x2F; 当前个</span><br><span class="line">        let prevItem &#x3D; null; &#x2F;&#x2F; 上一个</span><br><span class="line">        for (let i &#x3D; 0; i &lt; nodeList.length; i++) &#123;</span><br><span class="line">          if (!nodeList[i]) continue;</span><br><span class="line">          &#x2F;&#x2F; 当前下标</span><br><span class="line">          index &#x3D; nodeList[i].getAttribute(&#39;data-index&#39;);</span><br><span class="line">          &#x2F;&#x2F; 当前数据</span><br><span class="line">          item &#x3D; this._cacheListOption[index];</span><br><span class="line">          &#x2F;&#x2F; 如果计算过，就不计算</span><br><span class="line">          if (item.isComputed) continue;</span><br><span class="line">          &#x2F;&#x2F; 自身的高度</span><br><span class="line">          item.height &#x3D; nodeList[i].getBoundingClientRect().height;</span><br><span class="line">          &#x2F;&#x2F; 上一个</span><br><span class="line">          prevItem &#x3D; this._cacheListOption[index - 1];</span><br><span class="line">          &#x2F;&#x2F; 缓存 offset &#x3D; 当前个height + 上有给的offset</span><br><span class="line">          item.offset &#x3D; prevItem ? prevItem.offset + item.height : item.height;</span><br><span class="line">          &#x2F;&#x2F; 缓存起来</span><br><span class="line">          item.isComputed &#x3D; true;</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F; 计算高度</span><br><span class="line">          if (i &#x3D;&#x3D; nodeList.length - 1) &#123;</span><br><span class="line">            this.getComputedList(index);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        this.clearTimeout();</span><br><span class="line">      &#125;, 0);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 重新计算位置</span><br><span class="line">    getComputedList(endIndex &#x3D; 0) &#123;</span><br><span class="line">      let item &#x3D; null;</span><br><span class="line">      for (let i &#x3D; endIndex; i &lt; this._cacheListOption.length; i++) &#123;</span><br><span class="line">        if (!this._cacheListOption[i]) continue;</span><br><span class="line">        item &#x3D; this._cacheListOption[i];</span><br><span class="line">        item.offset &#x3D; this._cacheListOption[i - 1].offset + item.height;</span><br><span class="line">        this._isScrollBottom &#x3D; item.isComputed;</span><br><span class="line">      &#125;</span><br><span class="line">      this.dynamicHeight &#x3D; this._cacheListOption[this._cacheListOption.length - 1].offset;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动获取值</span><br><span class="line">    handleScroll(e) &#123;</span><br><span class="line">      if (e.target !&#x3D;&#x3D; this._virtualRefs) return false;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 是否开启分页</span><br><span class="line">      if (this.isPaging) &#123;</span><br><span class="line">        if (</span><br><span class="line">          this._cacheListOption[this.list.length - 1].offset - (e.target.scrollTop + e.target.offsetHeight) &lt;&#x3D;</span><br><span class="line">          this.offsetBottom</span><br><span class="line">        ) &#123;</span><br><span class="line">          &#x2F;&#x2F; 分页节流触发</span><br><span class="line">          if (this.isLoad &amp;&amp; this.list.length &lt; this.virtualTotal) &#123;</span><br><span class="line">            this.isLoad &#x3D; false;</span><br><span class="line">            this.$emit(&#39;load&#39;, e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 计算当前startIndex</span><br><span class="line">      this._currentStartIndex &#x3D; this.getStartIndex(e.target.scrollTop);</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 如果currentStartIndex 和 startIndex 不同（我们需要更新数据了）</span><br><span class="line">      if (this._currentStartIndex !&#x3D;&#x3D; this.currentIndex) &#123;</span><br><span class="line">        &#x2F;&#x2F; 保存当前第一位</span><br><span class="line">        this.currentIndex &#x3D; this._currentStartIndex;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 重新计算开始位置 - 头部缓冲区位置</span><br><span class="line">        this.startIndex &#x3D; Math.max(this._currentStartIndex - this.bufferSize, 0);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 结束位置 &#x3D; 当前位置  + 显示条数 + 缓冲区条数</span><br><span class="line">        this.endIndex &#x3D; Math.min(this._currentStartIndex + this.limit + this.bufferSize, this.getListCount - 1);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 获取数据</span><br><span class="line">        this.virtualList &#x3D; this.getVirtualList();</span><br><span class="line">        this.getDynamicHeight();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 获取startIndex位置</span><br><span class="line">    getStartIndex(scrollTop &#x3D; 0) &#123;</span><br><span class="line">      return this.handleBinarySearch(this._cacheListOption, scrollTop);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 获取当前展示区域的数据</span><br><span class="line">    getVirtualList() &#123;</span><br><span class="line">      const content &#x3D; [];</span><br><span class="line">      let item &#x3D; null;</span><br><span class="line">      &#x2F;&#x2F; 注意这块我们用了 &lt;&#x3D; 是为了渲染x+1个元素用来在让滚动变得连续（永远渲染在判断&amp;渲染x+2）</span><br><span class="line">      for (let i &#x3D; this.startIndex; i &lt;&#x3D; this.endIndex; ++i) &#123;</span><br><span class="line">        if (!this.list[i]) continue;</span><br><span class="line">        item &#x3D; this.list[i];</span><br><span class="line">        item.$index &#x3D; i;</span><br><span class="line">        content.push(item);</span><br><span class="line">      &#125;</span><br><span class="line">      item &#x3D; null;</span><br><span class="line">      return content;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 二分查找位置</span><br><span class="line">    handleBinarySearch(list &#x3D; [], offset &#x3D; 0) &#123;</span><br><span class="line">      let low &#x3D; 0;</span><br><span class="line">      let mid &#x3D; 0;</span><br><span class="line">      let _offset &#x3D; 0;</span><br><span class="line">      let high &#x3D; list.length - 1;</span><br><span class="line"></span><br><span class="line">      while (low &lt;&#x3D; high) &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取中间数</span><br><span class="line">        mid &#x3D; Math.floor((high - low) &#x2F; 2) + low;</span><br><span class="line">        &#x2F;&#x2F; 中间的位置</span><br><span class="line">        _offset &#x3D; list[mid].offset;</span><br><span class="line">        &#x2F;&#x2F; 如果当前滚动和某个位置相等，返回对应坐标</span><br><span class="line">        if (_offset &#x3D;&#x3D;&#x3D; offset) &#123;</span><br><span class="line">          return mid;</span><br><span class="line">        &#125; else if (_offset &lt; offset) &#123;</span><br><span class="line">          &#x2F;&#x2F; 如果当前位置小于滚动的位置，那就往后找</span><br><span class="line">          low &#x3D; mid + 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          &#x2F;&#x2F; 如果滚动小于当前位置，那就往前找</span><br><span class="line">          high &#x3D; mid - 1;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      &#x2F;&#x2F; 最后返回</span><br><span class="line">      return high &lt; 0 ? 0 : high;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    clearTimeout() &#123;</span><br><span class="line">      if (this._timeout) &#123;</span><br><span class="line">        clearTimeout(this._timeout);</span><br><span class="line">        this._timeout &#x3D; null;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy() &#123;</span><br><span class="line">    this._virtualRefs &#x3D; null; &#x2F;&#x2F; 滚动实例</span><br><span class="line">    this._handleScroll &#x3D; null; &#x2F;&#x2F; 节流函数</span><br><span class="line">    this._cacheListOption &#x3D; []; &#x2F;&#x2F; 缓存数据的高度</span><br><span class="line">    this._currentStartIndex &#x3D; 0; &#x2F;&#x2F; 当前滚动的位置</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.af-virtual_fixed-height &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  flex: 1;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line"></span><br><span class="line">  .af-virtual_scroll &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .af-virtual_content &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-content: flex-start;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    will-change: transform;</span><br><span class="line"></span><br><span class="line">    .content-item &#123;</span><br><span class="line">      box-sizing: border-box;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      background: transparent;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;虚拟列表（动态高度）&quot;&gt;&lt;a href=&quot;#虚拟列表（动态高度）&quot; class=&quot;headerlink&quot; title=&quot;虚拟列表（动态高度）&quot;&gt;&lt;/a&gt;虚拟列表（动态高度）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;afVirtualDynamicHei</summary>
      
    
    
    
    
    <category term="virtual" scheme="https://blog.afacode.top/tags/virtual/"/>
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>虚拟列表（固定高度）</title>
    <link href="https://blog.afacode.top/2023/03/28/af-Virtual-Fixed-Height/"/>
    <id>https://blog.afacode.top/2023/03/28/af-Virtual-Fixed-Height/</id>
    <published>2023-03-28T08:19:30.000Z</published>
    <updated>2023-07-14T03:37:58.707Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>afVirtualFixedHeight.vue</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div ref&#x3D;&quot;virtualRefs&quot; @scroll&#x3D;&quot;_handleScroll&quot; :style&#x3D;&quot;virtualFixedHeight&quot; class&#x3D;&quot;af-virtual_fixed-height&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;af-virtual_scroll&quot; :style&#x3D;&quot;virtualScrollHeight&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;af-virtual_content&quot; :style&#x3D;&quot;virtualTranslate&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class&#x3D;&quot;content-item&quot;</span><br><span class="line">        v-for&#x3D;&quot;item in virtualList&quot;</span><br><span class="line">        :style&#x3D;&quot;virtualItemHeight&quot;</span><br><span class="line">        :data-index&#x3D;&quot;item.$index&quot;</span><br><span class="line">        :key&#x3D;&quot;&#96;$&#123;item[rowKey]&#125;_$&#123;item.$index&#125;&#96;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;slot :item&#x3D;&quot;item&quot; :index&#x3D;&quot;item.$index&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; unThrottle &#125; from &#39;@&#x2F;**&#x2F;plugins&#x2F;utils&#x2F;index.js&#39;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;afVirtualFixedHeight&#39;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    &#x2F;&#x2F; 列表数据</span><br><span class="line">    list: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 列表高度</span><br><span class="line">    virtualMaxHeight: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#39;250px&#39;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 数据总数量</span><br><span class="line">    virtualTotal: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 单个高度</span><br><span class="line">    itemHeight: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 40,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 默认展示条数</span><br><span class="line">    limit: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 10,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 唯一标识</span><br><span class="line">    rowKey: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 距离顶部缓冲区条数</span><br><span class="line">    bufferSize: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 5,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 是否开启分页</span><br><span class="line">    isPaging: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 距离底部 多少 距离，触发分页</span><br><span class="line">    offsetBottom: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 100,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    this._virtualRefs &#x3D; null; &#x2F;&#x2F; 滚动实例</span><br><span class="line">    this._currentStartIndex &#x3D; 0; &#x2F;&#x2F; 当前滚动的位置</span><br><span class="line">    this._handleScroll &#x3D; () &#x3D;&gt; &#123;&#125;; &#x2F;&#x2F; 节流函数</span><br><span class="line">    return &#123;</span><br><span class="line">      endIndex: 0,</span><br><span class="line">      scrollTop: 0,</span><br><span class="line">      startIndex: 0,</span><br><span class="line">      virtualList: [],</span><br><span class="line">      currentIndex: 0,</span><br><span class="line">      isLoad: true, &#x2F;&#x2F; 分页节流触发</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    &#x2F;&#x2F; 当前list长度</span><br><span class="line">    getListCount() &#123;</span><br><span class="line">      return (Array.isArray(this.list) &amp;&amp; this.list.length) || 0;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动可视区最大高度</span><br><span class="line">    virtualFixedHeight() &#123;</span><br><span class="line">      return &#96;max-height:$&#123;this.virtualMaxHeight&#125;;&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动的高度</span><br><span class="line">    virtualScrollHeight() &#123;</span><br><span class="line">      if (this.isPaging) &#123;</span><br><span class="line">        return &#96;height:$&#123;this.list.length * this.itemHeight&#125;px;&#96;;</span><br><span class="line">      &#125;</span><br><span class="line">      return &#96;height:$&#123;this.virtualTotal * this.itemHeight&#125;px;&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 每一项高度样式</span><br><span class="line">    virtualItemHeight() &#123;</span><br><span class="line">      return &#96;height:$&#123;this.itemHeight&#125;px;&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 动画</span><br><span class="line">    virtualTranslate() &#123;</span><br><span class="line">      if (this.scrollTop &lt;&#x3D; 0) return &#39;transform:translate3d(0,0,0)&#39;;</span><br><span class="line">      const &#123; itemHeight, bufferSize, currentIndex, scrollTop &#125; &#x3D; this;</span><br><span class="line">      &#x2F;&#x2F; 当前滑动offset - 当前被截断的（没有完全消失的元素）距离 - 头部缓冲区距离</span><br><span class="line">      const y &#x3D; scrollTop - (scrollTop % itemHeight) - Math.min(currentIndex, bufferSize) * itemHeight;</span><br><span class="line">      return &#96;transform:translate3d(0,$&#123;y&#125;px,0); transform 0.01s cubic-bezier(0.25, 0.02, 0.35, 0.89) 0s&#96;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    list(arr) &#123;</span><br><span class="line">      if (!this.scrollTop &amp;&amp; !this.startIndex) &#123;</span><br><span class="line">        if (!Array.isArray(arr) || arr.length &lt;&#x3D; 0) &#123;</span><br><span class="line">          this.virtualList &#x3D; [];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.init();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.isLoad &#x3D; true;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    if (!this._virtualRefs) &#123;</span><br><span class="line">      this._virtualRefs &#x3D; this.$refs.virtualRefs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 有时候父级使用v-if 的时候，第一次watch 并不会执行</span><br><span class="line">    if (Array.isArray(this.list) &amp;&amp; this.list.length) &#123;</span><br><span class="line">      this.init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动防抖</span><br><span class="line">    this._handleScroll &#x3D; unThrottle(this.handleScroll, 150);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F; 初始化数据</span><br><span class="line">    init() &#123;</span><br><span class="line">      this.scrollTop &#x3D; 0;</span><br><span class="line">      this.startIndex &#x3D; 0;</span><br><span class="line">      this.isLoad &#x3D; true;</span><br><span class="line">      this.endIndex &#x3D; this.limit + this.bufferSize;</span><br><span class="line">      this._virtualRefs &amp;&amp; (this._virtualRefs.scrollTop &#x3D; 0);</span><br><span class="line">      if (Array.isArray(this.list) &amp;&amp; this.list.length &gt; 0) &#123;</span><br><span class="line">        this.virtualList &#x3D; this.getVirtualList();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 判断数据是否相等</span><br><span class="line">      if (!this.isPaging &amp;&amp; this.list.length - this.virtualTotal &lt; 0) &#123;</span><br><span class="line">        console.error(</span><br><span class="line">          &#96;当前不是分页获取数据，传入数据【list：$&#123;this.list.length&#125;】与数据总数【virtualTotal：$&#123;this.virtualTotal&#125;】不相等，请注意查看数据是否正确&#96;</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 搜索初始化</span><br><span class="line">    initSearch() &#123;</span><br><span class="line">      this.scrollTop &#x3D; 0;</span><br><span class="line">      this.startIndex &#x3D; 0;</span><br><span class="line">      this.isLoad &#x3D; false;</span><br><span class="line">      this.endIndex &#x3D; this.limit + this.bufferSize;</span><br><span class="line">      this._virtualRefs &amp;&amp; (this._virtualRefs.scrollTop &#x3D; 0);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 滚动获取值</span><br><span class="line">    handleScroll(e) &#123;</span><br><span class="line">      if (e.target !&#x3D;&#x3D; this._virtualRefs) return false;</span><br><span class="line">      this.scrollTop &#x3D; e.target.scrollTop || 0;</span><br><span class="line">      &#x2F;&#x2F; 是否开启分页</span><br><span class="line">      if (this.isPaging) &#123;</span><br><span class="line">        const contentLayout &#x3D; this.getListCount * this.itemHeight;</span><br><span class="line">        if (contentLayout - (e.target.scrollTop + e.target.offsetHeight) &lt;&#x3D; this.offsetBottom) &#123;</span><br><span class="line">          &#x2F;&#x2F; 分页节流触发</span><br><span class="line">          if (this.isLoad) &#123;</span><br><span class="line">            this.isLoad &#x3D; false;</span><br><span class="line">            this.$emit(&#39;load&#39;, e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 计算当前startIndex</span><br><span class="line">      this._currentStartIndex &#x3D; Math.floor(this.scrollTop &#x2F; this.itemHeight);</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F; 如果currentStartIndex 和 startIndex 不同（我们需要更新数据了）</span><br><span class="line">      if (this._currentStartIndex !&#x3D;&#x3D; this.currentIndex) &#123;</span><br><span class="line">        &#x2F;&#x2F; 保存当前第一位</span><br><span class="line">        this.currentIndex &#x3D; this._currentStartIndex;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 重新计算开始位置 - 头部缓冲区位置</span><br><span class="line">        this.startIndex &#x3D; Math.max(this._currentStartIndex - this.bufferSize, 0);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 结束位置 &#x3D; 当前位置  + 显示条数 + 缓冲区条数</span><br><span class="line">        this.endIndex &#x3D; Math.min(this._currentStartIndex + this.limit + this.bufferSize, this.getListCount - 1);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 获取数据</span><br><span class="line">        this.virtualList &#x3D; this.getVirtualList();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 获取当前展示区域的数据</span><br><span class="line">    getVirtualList() &#123;</span><br><span class="line">      const content &#x3D; [];</span><br><span class="line">      &#x2F;&#x2F; 注意这块我们用了 &lt;&#x3D; 是为了渲染x+1个元素用来在让滚动变得连续（永远渲染在判断&amp;渲染x+2）</span><br><span class="line">      for (let i &#x3D; this.startIndex; i &lt;&#x3D; this.endIndex; ++i) &#123;</span><br><span class="line">        if (!this.list[i]) continue;</span><br><span class="line">        this.list[i].$index &#x3D; i;</span><br><span class="line">        content.push(this.list[i]);</span><br><span class="line">      &#125;</span><br><span class="line">      return content;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy() &#123;</span><br><span class="line">    this._handleScroll &#x3D; null;</span><br><span class="line">    this._virtualRefs &#x3D; null;</span><br><span class="line">    this._currentStartIndex &#x3D; 0;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.af-virtual_fixed-height &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  flex: 1;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line">  will-change: transform;</span><br><span class="line"></span><br><span class="line">  .af-virtual_scroll &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .af-virtual_content &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line">    overflow: hidden;</span><br><span class="line"></span><br><span class="line">    .content-item &#123;</span><br><span class="line">      box-sizing: border-box;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      background: transparent;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;afVirtualFixedHeight.vue&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    
    <category term="virtual" scheme="https://blog.afacode.top/tags/virtual/"/>
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>基于qrcode给二维码上面加图片/icon等,并支持下载</title>
    <link href="https://blog.afacode.top/2022/10/22/qrcode-add-icon/"/>
    <id>https://blog.afacode.top/2022/10/22/qrcode-add-icon/</id>
    <published>2022-10-22T15:19:30.000Z</published>
    <updated>2023-07-14T03:31:47.979Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><blockquote><p><code>afQrcode.vue</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"-qrcode"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"qrcode-box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">:width</span>=<span class="string">"imgWidth"</span> <span class="attr">:height</span>=<span class="string">"imgWidth"</span> <span class="attr">ref</span>=<span class="string">"canvas"</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"dataUrl"</span> <span class="attr">:alt</span>=<span class="string">"downloadTitle"</span> <span class="attr">:title</span>=<span class="string">"downloadTitle"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> QRCode <span class="keyword">from</span> <span class="string">'qrcode'</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> TYPES = [<span class="string">'image/png'</span>, <span class="string">'image/jpeg'</span>, <span class="string">'image/webp'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'iccQrcode'</span>,</span></span><br><span class="line">  props: &#123;</span><br><span class="line">    imgMargin: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="number">2</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="comment">// 二维码实际大小</span></span></span><br><span class="line">    imgWidth: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="number">400</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line">    type: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">      validator: <span class="function"><span class="params">type</span> =&gt;</span> TYPES.includes(type),</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="string">'image/png'</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line">    url: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="string">''</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="comment">// 下载名称</span></span></span><br><span class="line">    downloadTitle: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="string">'二维码'</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="comment">// 显示中间logo url</span></span></span><br><span class="line">    logoUrl: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="string">''</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">      dataUrl: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">      qrLogoSize: <span class="number">80</span>, <span class="comment">//logo size</span></span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    url(val) &#123;</span><br><span class="line">      if (val) &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.toDataURL();</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.dataUrl = <span class="string">''</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.url &amp;&amp; <span class="keyword">this</span>.toDataURL();</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    downLoadImg() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (!<span class="keyword">this</span>.dataUrl) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.downloadFile(&#123;</span></span><br><span class="line"><span class="actionscript">        type: <span class="string">'link'</span>,</span></span><br><span class="line"><span class="actionscript">        fileType: <span class="string">'png'</span>,</span></span><br><span class="line"><span class="actionscript">        title: <span class="keyword">this</span>.downloadTitle,</span></span><br><span class="line"><span class="actionscript">        link: <span class="keyword">this</span>.dataUrl,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    toDataURL() &#123;</span><br><span class="line"><span class="actionscript">      QRCode.toDataURL(<span class="keyword">this</span>.url, &#123; width: <span class="keyword">this</span>.imgWidth, margin: <span class="keyword">this</span>.imgMargin &#125;)</span></span><br><span class="line"><span class="javascript">        .then(<span class="function"><span class="params">dataUrl</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.dataUrl = dataUrl;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (<span class="keyword">this</span>.logoUrl) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.makeCode(dataUrl);</span></span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        .catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="keyword">this</span>.$emit(<span class="string">'error'</span>, err));</span></span><br><span class="line">    &#125;,</span><br><span class="line">    makeCode(dataUrl) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> canvas = <span class="keyword">this</span>.$refs.canvas;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 生成二维码-img</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> qrCodeImg = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 生成logo-img</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> logoImg = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 画二维码里的logo 在canvas里进行拼接</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span></span><br><span class="line">      qrCodeImg.src = dataUrl;</span><br><span class="line"><span class="javascript">      qrCodeImg.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 绘制二维码</span></span></span><br><span class="line">        ctx.drawImage(qrCodeImg, 0, 0, that.imgWidth, that.imgWidth);</span><br><span class="line"><span class="actionscript">        <span class="comment">//设置logo大小 设置获取的logo将其变为圆角以及添加白色背景</span></span></span><br><span class="line"><span class="actionscript">        ctx.fillStyle = <span class="string">'#fff'</span>;</span></span><br><span class="line">        ctx.beginPath();</span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> logoPosition = (that.imgWidth - that.qrLogoSize) / <span class="number">2</span>; <span class="comment">//logo相对于canvas居中定位</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> h = that.qrLogoSize + <span class="number">10</span>; <span class="comment">//圆角高 10为基数(logo四周白色背景为10/2)</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> w = that.qrLogoSize + <span class="number">10</span>; <span class="comment">//圆角宽</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> x = logoPosition - <span class="number">5</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> y = logoPosition - <span class="number">5</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> r = <span class="number">5</span>; <span class="comment">//圆角半径</span></span></span><br><span class="line">        ctx.moveTo(x + r, y);</span><br><span class="line">        ctx.arcTo(x + w, y, x + w, y + h, r);</span><br><span class="line">        ctx.arcTo(x + w, y + h, x, y + h, r);</span><br><span class="line">        ctx.arcTo(x, y + h, x, y, r);</span><br><span class="line">        ctx.arcTo(x, y, x + w, y, r);</span><br><span class="line">        ctx.closePath();</span><br><span class="line">        ctx.fill();</span><br><span class="line"><span class="actionscript">        ctx.restore(); <span class="comment">//需要编辑canvas内容则需要写入</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.imgUrlToBase64(<span class="keyword">this</span>.logoUrl).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line">          logoImg.src = res;</span><br><span class="line"><span class="actionscript">          <span class="comment">// logoImg.src = this.logoUrl + '?time=' + new Date().valueOf();</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// logoImg.setAttribute('crossOrigin', 'anonymous');</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 绘制logo</span></span></span><br><span class="line"><span class="javascript">          logoImg.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">            ctx.drawImage(logoImg, logoPosition, logoPosition, that.qrLogoSize, that.qrLogoSize);</span><br><span class="line"><span class="actionscript">            <span class="comment">// 赋值链接</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.dataUrl = canvas.toDataURL();</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    imgUrlToBase64(url) &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line">        if (!url) &#123;</span><br><span class="line"><span class="actionscript">          reject(<span class="string">'请传入url内容'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="regexp">/\.(png|jpe?g|gif|svg)(\?.*)?$/</span>.test(url)) &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 图片地址</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">const</span> image = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 设置跨域问题</span></span></span><br><span class="line"><span class="actionscript">          image.setAttribute(<span class="string">'crossOrigin'</span>, <span class="string">'anonymous'</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 图片地址</span></span></span><br><span class="line"><span class="javascript">          image.src = url + <span class="string">'?time='</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().valueOf();</span></span><br><span class="line"><span class="javascript">          image.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span></span><br><span class="line">            canvas.width = image.width;</span><br><span class="line">            canvas.height = image.height;</span><br><span class="line">            ctx.drawImage(image, 0, 0, image.width, image.height);</span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取图片后缀</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> ext = url.substring(url.lastIndexOf(<span class="string">'.'</span>) + <span class="number">1</span>).toLowerCase();</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 转base64</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> dataUrl = canvas.toDataURL(<span class="string">`image/<span class="subst">$&#123;ext&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">            resolve(dataUrl || <span class="string">''</span>);</span></span><br><span class="line">          &#125;;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 非图片地址</span></span></span><br><span class="line"><span class="actionscript">          reject(<span class="string">'非(png/jpe?g/gif/svg等)图片地址'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"scss"</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.qrcode-box</span> &#123;</span></span><br><span class="line">  display: none;</span><br><span class="line">  img &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.qrcode</span>,</span></span><br><span class="line">img &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;af-qr-code</span><br><span class="line">   class&#x3D;&quot;code-info&quot;</span><br><span class="line">   :downloadTitle&#x3D;&quot;downloadTitle&quot;</span><br><span class="line">   ref&#x3D;&quot;qrCodeUrl&quot;</span><br><span class="line">   :url&#x3D;&quot;shareUrl&quot;</span><br><span class="line">   :isLogo&#x3D;&quot;true&quot;</span><br><span class="line">    :logoUrl&#x3D;&quot;activityLogo&quot;</span><br><span class="line">&#x2F;&gt;</span><br><span class="line">&#x2F;&#x2F; 下载二维码</span><br><span class="line">downloadFileFn() &#123;</span><br><span class="line">      this.$refs.qrCodeUrl.downLoadImg();</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;afQrcode.vue&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="qrcode" scheme="https://blog.afacode.top/tags/qrcode/"/>
    
  </entry>
  
  <entry>
    <title>确认弹窗 (调用方式跟element this.$message 类似)</title>
    <link href="https://blog.afacode.top/2022/08/04/af-confirm-use/"/>
    <id>https://blog.afacode.top/2022/08/04/af-confirm-use/</id>
    <published>2022-08-04T15:19:30.000Z</published>
    <updated>2023-07-14T03:28:09.322Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>比element确认弹框多了个特殊按钮<code>specialType</code>(底部可以有3个按钮)</p></blockquote><h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><p>​```javascript<br>// 调用方式1<br>this.$afConfirm(‘副标题’)<br>  .then(() =&gt; {})<br>  .catch(() =&gt; {});</p><p>// 调用方式2<br>this.$afConfirm({ title: ‘标题’, subTitle: ‘副标题’ })<br>  .then(() =&gt; {})<br>  .catch(() =&gt; {});</p><p>// 调用方式3  删除状态<br>this.$afConfirm<br>  .delete({ title: ‘标题’, subTitle: ‘副标题’ })<br>  .then(() =&gt; {})<br>  .catch(() =&gt; {});</p><p>// 调用方式4  删除状态<br>this.$afConfirm<br>  .delete({ title: ‘标题’, subTitle: ‘副标题’, submitType: ‘delete’ })<br>  .then(() =&gt; {})<br>  .catch(() =&gt; {});</p><p>// 调用方式5  成功状态, 跟方式1,2 一样<br>this.$afConfirm<br>  .success({ title: ‘标题’, subTitle: ‘副标题’ })<br>  .then(() =&gt; {})<br>  .catch(() =&gt; {});</p><p>// 标题和副标题 render 函数 参数参考文档<br>// <a href="https://v2.cn.vuejs.org/v2/guide/render-function.html#createElement-%E5%8F%82%E6%95%B0" target="_blank" rel="noopener">https://v2.cn.vuejs.org/v2/guide/render-function.html#createElement-%E5%8F%82%E6%95%B0</a><br>this.$afConfirm({<br>  title(h) {<br>    return h(‘span’, { style: { color: ‘red’ } }, ‘标题’);<br>  },<br>  subTitle(h) {<br>    return h(‘span’, { style: { color: ‘red’ } }, ‘副标题’);<br>  },<br>})<br>  .then(() =&gt; {})<br>  .catch(() =&gt; {});</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 实现</span><br><span class="line"></span><br><span class="line">&gt; `afConfirm/afConfirm.vue`</span><br><span class="line"></span><br><span class="line">```vue</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'afConfirm'</span>,</span><br><span class="line">  <span class="keyword">data</span>() &#123;</span><br><span class="line">    <span class="keyword">this</span>._submit = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>._cancel = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>._special = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isConfirm: <span class="literal">false</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        title: <span class="string">''</span>, <span class="comment">// 可以传字符串，可以传render函数</span></span><br><span class="line">        subTitle: <span class="string">''</span>, <span class="comment">// 可以传字符串，可以传render函数</span></span><br><span class="line">        cancelText: <span class="string">'取消'</span>,</span><br><span class="line">        specialText: <span class="string">''</span>,</span><br><span class="line">        submitText: <span class="string">'确定'</span>,</span><br><span class="line">        cancelType: <span class="string">'cancel'</span>,</span><br><span class="line">        specialType: <span class="string">'submit'</span>,</span><br><span class="line">        submitType: <span class="string">'submit'</span>,</span><br><span class="line">        showCloseIcon: <span class="literal">true</span>,</span><br><span class="line">        isCloseOnClickByModal: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    confirm(params = &#123;&#125;) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!params.title &amp;&amp; !params.subTitle) <span class="keyword">return</span> Promise.reject(&#123; message: <span class="string">'请输入要文案'</span> &#125;);</span><br><span class="line">      <span class="keyword">this</span>.params = Object.assign(</span><br><span class="line">        &#123;</span><br><span class="line">          title: <span class="string">''</span>,</span><br><span class="line">          subTitle: <span class="string">''</span>,</span><br><span class="line">          cancelText: <span class="string">'取消'</span>,</span><br><span class="line">          specialText: <span class="string">''</span>,</span><br><span class="line">          submitText: <span class="string">'确定'</span>,</span><br><span class="line">          cancelType: <span class="string">'cancel'</span>,</span><br><span class="line">          specialType: <span class="string">'submit'</span>,</span><br><span class="line">          submitType: <span class="string">'submit'</span>,</span><br><span class="line">          isCloseOnClickByModal: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        params</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">this</span>.isConfirm = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">return</span> new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        <span class="keyword">this</span>._submit = resolve;</span><br><span class="line">        <span class="keyword">this</span>._special = resolve;</span><br><span class="line">        <span class="keyword">this</span>._cancel = reject;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    handleCancel() &#123;</span><br><span class="line">      <span class="keyword">this</span>.isConfirm = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">this</span>._cancel();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    handleSpecial() &#123;</span><br><span class="line">      <span class="keyword">this</span>.isConfirm = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">this</span>._special(<span class="string">'special'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    handleSubmit() &#123;</span><br><span class="line">      <span class="keyword">this</span>.isConfirm = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">this</span>._submit(<span class="string">'submit'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 副标题</span></span><br><span class="line">    getSubTitleNode(createElement) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; params &#125; = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (!params.subTitle) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (typeof params.subTitle === <span class="string">'function'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">confirm</span>-<span class="title">subTitle</span>"&gt;</span>&#123;params.subTitle(createElement)&#125;&lt;/div&gt;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">confirm</span>-<span class="title">subTitle</span>"&gt;</span>&#123;params.subTitle&#125;&lt;/div&gt;;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 标题</span></span><br><span class="line">    getTitleNode(createElement) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; params &#125; = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (!params.title) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (typeof params.title === <span class="string">'function'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &lt;span <span class="class"><span class="keyword">class</span>="<span class="title">confirm</span>-<span class="title">title</span>"&gt;</span>&#123;params.title(createElement)&#125;&lt;/span&gt;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> &lt;span <span class="class"><span class="keyword">class</span>="<span class="title">confirm</span>-<span class="title">title</span>"&gt;</span>&#123;params.title&#125;&lt;/span&gt;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy() &#123;</span><br><span class="line">    <span class="keyword">this</span>._submit = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>._special = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>._cancel = <span class="literal">null</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  render(createElement) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; params &#125; = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;el-dialog</span><br><span class="line">        append-to-body</span><br><span class="line">        visible=&#123;<span class="keyword">this</span>.isConfirm&#125;</span><br><span class="line">        onClose=&#123;() =&gt; <span class="keyword">this</span>.handleCancel()&#125;</span><br><span class="line">        show-close=&#123;<span class="keyword">this</span>.params.showCloseIcon&#125;</span><br><span class="line">        onCloseOnClickModal=&#123;() =&gt; params.isCloseOnClickByModal()&#125;</span><br><span class="line">        onCloseOnPressEscape=&#123;() =&gt; params.isCloseOnClickByModal()&#125;</span><br><span class="line">        custom-<span class="class"><span class="keyword">class</span>="<span class="title">el</span>-<span class="title">dialog_custom</span> <span class="title">el</span>-<span class="title">dialog_custom</span>--<span class="title">confirm</span>"</span></span><br><span class="line">      &gt;</span><br><span class="line">        &#123;<span class="comment">/* 标题 */</span>&#125;</span><br><span class="line">        &#123;<span class="keyword">this</span>.getTitleNode(createElement)&#125;</span><br><span class="line">        &#123;<span class="comment">/* 副标题 */</span>&#125;</span><br><span class="line">        &#123;<span class="keyword">this</span>.getSubTitleNode(createElement)&#125;</span><br><span class="line">        &#123;<span class="comment">/* 按钮 */</span>&#125;</span><br><span class="line">        &lt;div slot=<span class="string">"footer"</span> <span class="class"><span class="keyword">class</span>="<span class="title">flex</span>"&gt;</span></span><br><span class="line">          &#123;params.cancelText ? (</span><br><span class="line">            &lt;el-button type=&#123;params.cancelType&#125; onClick=&#123;() =&gt; <span class="keyword">this</span>.handleCancel()&#125;&gt;</span><br><span class="line">              &#123;params.cancelText&#125;</span><br><span class="line">            &lt;/el-button&gt;</span><br><span class="line">          ) : <span class="literal">null</span>&#125;</span><br><span class="line">          &#123;params.specialText ? (</span><br><span class="line">            &lt;el-button <span class="class"><span class="keyword">class</span>="<span class="title">mr20</span>" <span class="title">type</span>=</span>&#123;params.specialType&#125; onClick=&#123;() =&gt; <span class="keyword">this</span>.handleSpecial()&#125;&gt;</span><br><span class="line">              &#123;params.specialText&#125;</span><br><span class="line">            &lt;/el-button&gt;</span><br><span class="line">          ) : <span class="literal">null</span>&#125;</span><br><span class="line">          &lt;el-button type=&#123;params.submitType&#125; onClick=&#123;() =&gt; <span class="keyword">this</span>.handleSubmit()&#125;&gt;</span><br><span class="line">            &#123;params.submitText&#125;</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-dialog&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=<span class="string">"scss"</span> scoped&gt;</span><br><span class="line">::v-deep .el-dialog_custom--confirm &#123;</span><br><span class="line">  top: <span class="number">25</span>%;</span><br><span class="line">  width: <span class="number">350</span>px;</span><br><span class="line">  min-height: <span class="number">0</span>;</span><br><span class="line">  max-height: <span class="number">100</span>%;</span><br><span class="line">  margin: <span class="number">0</span> auto;</span><br><span class="line">  box-shadow: <span class="number">0</span> <span class="number">20</span>px <span class="number">100</span>px <span class="number">1</span>px $main_text_black_color_7, <span class="number">0</span> -<span class="number">3</span>px <span class="number">50</span>px <span class="number">1</span>px $main_text_black_color_5;</span><br><span class="line">  border-radius: <span class="number">10</span>px;</span><br><span class="line">  .confirm-title &#123;</span><br><span class="line">    display: <span class="keyword">inline</span>-block;</span><br><span class="line">    padding: <span class="number">0</span>;</span><br><span class="line">    margin: <span class="number">0</span>;</span><br><span class="line">    color: $main_text_black_color;</span><br><span class="line">    font-family: Roboto-Bold, Roboto;</span><br><span class="line">    font-size: <span class="number">15</span>px;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    line-height: <span class="number">19</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-dialog__header &#123;</span><br><span class="line">    padding: <span class="number">35</span>px <span class="number">35</span>px <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    .el-dialog__headerbtn &#123;</span><br><span class="line">      padding: <span class="number">10</span>px <span class="number">13</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .el-dialog__body &#123;</span><br><span class="line">    flex: none;</span><br><span class="line">    padding: <span class="number">0</span> <span class="number">35</span>px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line"></span><br><span class="line">    .confirm-subTitle &#123;</span><br><span class="line">      padding-top: <span class="number">6</span>px;</span><br><span class="line">      color: $main_text_black_color_50;</span><br><span class="line">      font-family: Roboto-Regular, Roboto;</span><br><span class="line">      font-size: <span class="number">13</span>px;</span><br><span class="line">      font-weight: <span class="number">400</span>;</span><br><span class="line">      line-height: <span class="number">16</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .el-dialog__footer &#123;</span><br><span class="line">    padding: <span class="number">25</span>px <span class="number">35</span>px <span class="number">30</span>px;</span><br><span class="line"></span><br><span class="line">    .el-button &#123;</span><br><span class="line">      <span class="comment">// width: 90px;</span></span><br><span class="line">      margin: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .el-button--cancel &#123;</span><br><span class="line">      color: $main_text_black_color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .el-button--delete &#123;</span><br><span class="line">      color: $main_white_color;</span><br><span class="line">      box-shadow: <span class="number">0</span> <span class="number">5</span>px <span class="number">30</span>px <span class="number">1</span>px rgba(<span class="number">247</span>, <span class="number">51</span>, <span class="number">147</span>, <span class="number">0.05</span>);</span><br><span class="line">      border-color: $main_pink_color;</span><br><span class="line">      background: $main_pink_color;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        background: $main_pink_color;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p><code>afConfirm/index.js</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> afConfirm <span class="keyword">from</span> <span class="string">'./afConfirm.vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(Vue) &#123;</span><br><span class="line">    <span class="comment">// extend 是构造一个组件的语法器.传入参数，返回一个组件</span></span><br><span class="line">    <span class="keyword">const</span> InstanceConfirm = Vue.extend(afConfirm);</span><br><span class="line">    <span class="keyword">let</span> instanceConfirm = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化InstanceWxAuth组件</span></span><br><span class="line">    <span class="keyword">const</span> instance = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      instanceConfirm = <span class="keyword">new</span> InstanceConfirm();</span><br><span class="line">      <span class="comment">// 挂载</span></span><br><span class="line">      <span class="built_in">document</span>.body.appendChild(instanceConfirm.$mount().$el);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 成功</span></span><br><span class="line">    <span class="keyword">const</span> afConfirm = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!instanceConfirm) instance();</span><br><span class="line">      <span class="comment">// 如果直接传入字符串</span></span><br><span class="line">      <span class="keyword">if</span> (params &amp;&amp; <span class="keyword">typeof</span> params === <span class="string">'string'</span>) &#123;</span><br><span class="line">        params = &#123; <span class="attr">title</span>: params, <span class="attr">submitType</span>: <span class="string">'submit'</span> &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 返回Promise</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        instanceConfirm</span><br><span class="line">          .confirm(params)</span><br><span class="line">          .then(<span class="function"><span class="params">confirmType</span> =&gt;</span> &#123;</span><br><span class="line">            resolve(confirmType);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(reject);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    afConfirm[<span class="string">'delete'</span>] = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 如果直接传入字符串</span></span><br><span class="line">      <span class="keyword">if</span> (params &amp;&amp; <span class="keyword">typeof</span> params === <span class="string">'string'</span>) params = &#123; <span class="attr">title</span>: params &#125;;</span><br><span class="line">      params.submitType = params.submitType || <span class="string">'delete'</span>;</span><br><span class="line">      params.isCloseOnClickByModal = params.isCloseOnClickByModal || <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">return</span> afConfirm(params);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 成功</span></span><br><span class="line">    afConfirm[<span class="string">'success'</span>] = <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 如果直接传入字符串</span></span><br><span class="line">      <span class="keyword">if</span> (params &amp;&amp; <span class="keyword">typeof</span> params === <span class="string">'string'</span>) params = &#123; <span class="attr">title</span>: params &#125;;</span><br><span class="line">      params.submitType = params.submitType || <span class="string">'submit'</span>;</span><br><span class="line">      <span class="keyword">return</span> afConfirm(params);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Vue.prototype.$afConfirm = afConfirm;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>注册</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AfConfirm <span class="string">'@/***/afConfirm/index.js'</span>;</span><br><span class="line">Vue.use(AfConfirm);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;比element确认弹框多了个特殊按钮&lt;code&gt;specialType&lt;/code&gt;(底部可以有3个按钮)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;使用方式&quot;&gt;&lt;a href=&quot;#使用方式&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="element" scheme="https://blog.afacode.top/tags/element/"/>
    
  </entry>
  
  <entry>
    <title>基于el-table前端存储选中行一起提交数据</title>
    <link href="https://blog.afacode.top/2022/06/22/table-fe-choose-store/"/>
    <id>https://blog.afacode.top/2022/06/22/table-fe-choose-store/</id>
    <published>2022-06-22T15:21:45.000Z</published>
    <updated>2023-07-13T15:06:15.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><blockquote><p>el-table选中数据😓分页切换，改变搜索条件等操作原有的选项不会保存。需满足原油选中数据能够记录保存。</p></blockquote><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><blockquote><p>前端自己维护选中数据，分装一个</p></blockquote><p>tableSelection.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Loading &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; uniDebounce &#125; <span class="keyword">from</span> <span class="string">'@/components/plugins/utils/index.js'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TableSelection</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(options) &#123;</span><br><span class="line">    <span class="comment">// 记录选中的参数</span></span><br><span class="line">    <span class="keyword">this</span>.cacheSelection = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 记录选中的数量</span></span><br><span class="line">    <span class="keyword">this</span>.cacheSelectionTotal = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 数据的唯一key</span></span><br><span class="line">    <span class="keyword">this</span>.rowKey = options.rowKey || <span class="string">'storeId'</span>;</span><br><span class="line">    <span class="comment">// 接口返回的唯一key 例如： res.data.list 如果没有默认给''</span></span><br><span class="line">    <span class="keyword">this</span>.dataKey = options.dataKey || <span class="string">''</span>;</span><br><span class="line">    <span class="comment">// 接口请求</span></span><br><span class="line">    <span class="keyword">this</span>.getTableList = options.getTableList || <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 总条数</span></span><br><span class="line">    <span class="keyword">this</span>.pageTotal = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 表格数据</span></span><br><span class="line">    <span class="keyword">this</span>.tableData = [];</span><br><span class="line">    <span class="comment">// table实例</span></span><br><span class="line">    <span class="keyword">this</span>.tableRefs = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 接口参数</span></span><br><span class="line">    <span class="keyword">this</span>.tableSearch = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 是否全选</span></span><br><span class="line">    <span class="keyword">this</span>.isCheckAll = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 是否半选</span></span><br><span class="line">    <span class="keyword">this</span>.isIndeterminate = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 记录反选</span></span><br><span class="line">    <span class="keyword">this</span>.invertSelection = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 是否是搜索</span></span><br><span class="line">    <span class="keyword">this</span>.isSearch = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 定时器</span></span><br><span class="line">    <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 记录搜索的全选状态</span></span><br><span class="line">    <span class="keyword">this</span>.invertSearchTotal = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 记录当前分页</span></span><br><span class="line">    <span class="keyword">this</span>.invertPage = [];</span><br><span class="line">    <span class="comment">// 记录当前是否初始化过</span></span><br><span class="line">    <span class="keyword">this</span>.isInvertInit = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 记录搜索的全选</span></span><br><span class="line">    <span class="keyword">this</span>.invertSearchList = [];</span><br><span class="line">    <span class="comment">// loading 实例</span></span><br><span class="line">    <span class="keyword">this</span>.loading = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// loading DOM</span></span><br><span class="line">    <span class="keyword">this</span>.loadTarget = options.loadTarget || <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 初始化数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;*&#125;</span> <span class="variable">params</span></span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  init(&#123; isFirst, tableData, echoList, tableRefs, params, pageTotal, callback &#125;) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.tableData = tableData;</span><br><span class="line">      <span class="keyword">this</span>.tableRefs = tableRefs;</span><br><span class="line">      <span class="keyword">this</span>.tableSearch = &#123; ...params &#125;;</span><br><span class="line">      !<span class="keyword">this</span>.pageTotal &amp;&amp; (<span class="keyword">this</span>.pageTotal = pageTotal);</span><br><span class="line">      <span class="comment">// 第一次初始化,需要回显数据，如果不需要不需要走下面初始化</span></span><br><span class="line">      <span class="keyword">if</span> (isFirst) &#123;</span><br><span class="line">        <span class="keyword">this</span>._initFirstSelection(echoList, callback);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>._initSelection(params, pageTotal, callback);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'初始化失败-init'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 全选事件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>isCheck 是否全选</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>fn 回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  handleCheckAll = uniDebounce(<span class="function"><span class="keyword">function</span> (<span class="params">isCheck = false, fn = null</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.isCheckAll = isCheck;</span><br><span class="line">      <span class="comment">// 修改状态</span></span><br><span class="line">      <span class="keyword">if</span> (isCheck) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isIndeterminate = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果是全选</span></span><br><span class="line">      <span class="keyword">if</span> (isCheck &amp;&amp; !<span class="keyword">this</span>.isIndeterminate) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'----------全选--------'</span>);</span><br><span class="line">        <span class="keyword">this</span>._handleCacheSearchList(fn);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 全选后反选</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isIndeterminate) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'----------反选--------'</span>);</span><br><span class="line">        <span class="keyword">this</span>._handleCheckAllTable(fn);</span><br><span class="line">        fn &amp;&amp; fn(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果是搜索全选，反选</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isSearch &amp;&amp; <span class="keyword">this</span>.cacheSelectionTotal &gt;= <span class="keyword">this</span>.pageTotal &amp;&amp; !isCheck) &#123;</span><br><span class="line">        <span class="keyword">this</span>._getSearchNoSelection(fn);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 取消全选</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'取消全选'</span>);</span><br><span class="line">      <span class="keyword">this</span>._handleNoCheckAllTable(fn);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'全选事件报错：handleCheckAll'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 单选事件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Array&#125;</span> </span>selection 选中的数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>row 选中的单个</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>fn 回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  handleCheckSingle = uniDebounce(<span class="function"><span class="keyword">function</span> (<span class="params">selection, row, fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]]) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.invertSelection[row[<span class="keyword">this</span>.rowKey]] = row;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelectionTotal -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.isSearch &amp;&amp; (<span class="keyword">this</span>.invertSearchTotal += <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]] = row;</span><br><span class="line">        <span class="keyword">this</span>.invertSelection[row[<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelectionTotal += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.isSearch &amp;&amp; (<span class="keyword">this</span>.invertSearchTotal -= <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>._handleCheckStatus(<span class="keyword">this</span>.cacheSelectionTotal, fn);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'单选事件报错：handleCheckSingle'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 当前页选中事件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Array&#125;</span> </span>selection 选中的数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>fn 回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  handleCheckPageAll = uniDebounce(<span class="keyword">async</span> (selection, fn) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (selection.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        selection.forEach(<span class="function"><span class="params">row</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (!<span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]] = row;</span><br><span class="line">            <span class="keyword">this</span>.isSearch &amp;&amp; (<span class="keyword">this</span>.invertSearchTotal -= <span class="number">1</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">this</span>.invertSelection[row[<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.tableData.forEach(<span class="function"><span class="params">row</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.cacheSelection[row[<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">this</span>.isSearch &amp;&amp; (<span class="keyword">this</span>.invertSearchTotal += <span class="number">1</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">this</span>.invertSelection[row[<span class="keyword">this</span>.rowKey]] = row;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>._toCalculateSelectionTotal().then(<span class="function"><span class="params">total</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>._handleCheckStatus(total, fn);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'当前页选中事件报错：handleCheckPageAll'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 确定返回</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;*&#125;</span> <span class="variable">fn</span></span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  handleSubmit(fn, isReset = <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelectionTotal &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        fn &amp;&amp; fn([]);</span><br><span class="line">        <span class="keyword">this</span>._handleNoCheckAllTable();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> list = [];</span><br><span class="line">      <span class="built_in">Object</span>.keys(<span class="keyword">this</span>.cacheSelection).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelection[key] &amp;&amp; !<span class="keyword">this</span>.invertSelection[key]) &#123;</span><br><span class="line">          list.push(<span class="keyword">this</span>.cacheSelection[key]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      fn &amp;&amp; fn(list);</span><br><span class="line">      <span class="keyword">if</span> (isReset) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">this</span>._handleNoCheckAllTable();</span><br><span class="line">      <span class="keyword">this</span>.invertPage = [];</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'数据保存失败'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 下拉返回</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  handleSelect(fn) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelectionTotal &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        fn &amp;&amp; fn([]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> list = [];</span><br><span class="line">      <span class="built_in">Object</span>.keys(<span class="keyword">this</span>.cacheSelection).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelection[key] &amp;&amp; !<span class="keyword">this</span>.invertSelection[key]) &#123;</span><br><span class="line">          list.push(<span class="keyword">this</span>.cacheSelection[key]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      fn &amp;&amp; fn(list);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'数据保存失败'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 销毁数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  destroy() &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">'销毁数据'</span>);</span><br><span class="line">    <span class="keyword">this</span>.reset();</span><br><span class="line">    <span class="keyword">this</span>.loading = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.tableRefs = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.loadTarget = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.tableSearch = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 重置数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  reset() &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">'重置数据'</span>);</span><br><span class="line">    <span class="keyword">this</span>.cacheSelection = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.cacheSelectionTotal = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.pageTotal = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.tableData = [];</span><br><span class="line">    <span class="keyword">this</span>.isCheckAll = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.isIndeterminate = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.invertSelection = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.isSearch = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.invertSearchTotal = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.invertPage = [];</span><br><span class="line">    <span class="keyword">this</span>.isInvertInit = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">this</span>._clearTimeout();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 函数带_ 全都是私有方法</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 需要回显数据，第一次初始化</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">async</span> _initFirstSelection(echoList, callback) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.invertSearchList = [];</span><br><span class="line">      <span class="keyword">this</span>.cacheSelection = <span class="keyword">await</span> <span class="keyword">this</span>._formatArrayToObject(<span class="keyword">this</span>.rowKey, echoList);</span><br><span class="line">      <span class="keyword">this</span>.cacheSelectionTotal = (<span class="built_in">Array</span>.isArray(echoList) &amp;&amp; echoList.length) || <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">this</span>.isCheckAll = <span class="keyword">this</span>.cacheSelectionTotal === <span class="keyword">this</span>.pageTotal &amp;&amp; <span class="keyword">this</span>.pageTotal &gt; <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">this</span>.isIndeterminate = <span class="keyword">this</span>.cacheSelectionTotal &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.cacheSelectionTotal &lt; <span class="keyword">this</span>.pageTotal;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(echoList) &amp;&amp; echoList.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>._handleInitCheck();</span><br><span class="line">      &#125;</span><br><span class="line">      callback &amp;&amp; callback(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'第一次初始化：_initFirstData'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 初始化数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _initSelection(params, pageTotal, callback) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 判断</span></span><br><span class="line">      <span class="keyword">this</span>.isSearch = !(<span class="keyword">this</span>.pageTotal === pageTotal);</span><br><span class="line">      <span class="comment">// 搜索条件</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isSearch) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isCheckAll = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.isIndeterminate = !!<span class="keyword">this</span>.cacheSelectionTotal;</span><br><span class="line">        <span class="comment">// console.log('-------------',this.cacheSelectionTotal);</span></span><br><span class="line">        <span class="keyword">this</span>.isInvertInit = <span class="keyword">this</span>.invertPage.indexOf(params.pageIndex) !== <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">this</span>.invertPage.push(params.pageIndex);</span><br><span class="line">        <span class="keyword">this</span>.isInvertInit &amp;&amp; pageTotal &amp;&amp; <span class="keyword">this</span>._handleCheckStatus(<span class="keyword">this</span>.cacheSelectionTotal, callback);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录搜索的数据总数</span></span><br><span class="line">        <span class="keyword">if</span> (params.pageIndex === <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.invertSearchTotal = pageTotal;</span><br><span class="line">          <span class="keyword">this</span>.invertPage = [];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 非搜索条件</span></span><br><span class="line">        <span class="keyword">this</span>.invertPage = [];</span><br><span class="line">        <span class="keyword">this</span>.isInvertInit = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.invertSearchTotal = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.isCheckAll = <span class="keyword">this</span>.cacheSelectionTotal &gt;= <span class="keyword">this</span>.pageTotal &amp;&amp; <span class="keyword">this</span>.cacheSelectionTotal &gt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.isIndeterminate = <span class="keyword">this</span>.pageTotal &gt; <span class="keyword">this</span>.cacheSelectionTotal &amp;&amp; <span class="keyword">this</span>.cacheSelectionTotal &gt; <span class="number">0</span>;</span><br><span class="line">        callback &amp;&amp; callback(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 选中</span></span><br><span class="line">      <span class="keyword">this</span>._handleInitCheck();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'初始化：_initSelection'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 判断是全选还是单个选择</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _handleInitCheck() &#123;</span><br><span class="line">    <span class="keyword">this</span>._clearTimeout();</span><br><span class="line">    <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// console.log(this.isCheckAll, '全选还是单选');</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isCheckAll) &#123;</span><br><span class="line">        <span class="keyword">this</span>._handleCheckAllTable();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>._handleCheckSingleTable();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>._clearTimeout();</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 清除定时器</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _clearTimeout() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.timer) &#123;</span><br><span class="line">      clearTimeout(<span class="keyword">this</span>.timer);</span><br><span class="line">      <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 全选</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _handleCheckAllTable(fn) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> selection = <span class="keyword">this</span>.tableData;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">Array</span>.isArray(selection) || selection.length &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.isCheckAll) &#123;</span><br><span class="line">        <span class="keyword">this</span>._getSearchNoSelection(fn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; selection.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.cacheSelection[selection[i][<span class="keyword">this</span>.rowKey]]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelection[selection[i][<span class="keyword">this</span>.rowKey]] = selection[i];</span><br><span class="line">        <span class="keyword">this</span>.tableRefs &amp;&amp; <span class="keyword">this</span>.tableRefs.toggleRowSelection(selection[i], <span class="literal">true</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      alert(error.message || <span class="string">'全选报错：_handleCheckAllTable'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 单个选中</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _handleCheckSingleTable() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> selection = <span class="keyword">this</span>.tableData;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">Array</span>.isArray(selection) || selection.length &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; selection.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.cacheSelection[selection[i][<span class="keyword">this</span>.rowKey]]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">this</span>.tableRefs &amp;&amp; <span class="keyword">this</span>.tableRefs.toggleRowSelection(selection[i], <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 搜索记录当前 选中</span></span><br><span class="line">        !<span class="keyword">this</span>.isInvertInit &amp;&amp; (<span class="keyword">this</span>.invertSearchTotal -= <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'单选报错：_handleCheckSingleTable'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 取消全选</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _handleNoCheckAllTable(fn) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isSearch) &#123;</span><br><span class="line">        <span class="comment">// console.log(this.invertSearchList.length, '---------取消搜索全选----------');</span></span><br><span class="line">        <span class="keyword">this</span>.isCheckAll = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.isIndeterminate = <span class="keyword">this</span>.cacheSelectionTotal &gt; <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 如果当前是搜素全选，然后反选</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelectionTotal - <span class="keyword">this</span>.invertSearchTotal &lt;= <span class="number">0</span> &amp;&amp; !<span class="keyword">this</span>.invertSearchList.length) &#123;</span><br><span class="line">          <span class="keyword">this</span>.isIndeterminate = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">this</span>.cacheSelection = &#123;&#125;;</span><br><span class="line">          <span class="keyword">this</span>.cacheSelectionTotal = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.cacheSelectionTotal = <span class="keyword">this</span>.cacheSelectionTotal - <span class="keyword">this</span>.invertSearchList.length;</span><br><span class="line">          <span class="keyword">this</span>.invertSearchList.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.cacheSelection[item[<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="keyword">this</span>.invertSearchList = [];</span><br><span class="line">          <span class="keyword">this</span>.isIndeterminate = <span class="keyword">this</span>.cacheSelectionTotal &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// console.log('---------取消全选----------');</span></span><br><span class="line">        <span class="keyword">this</span>.isCheckAll = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.isIndeterminate = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelection = &#123;&#125;;</span><br><span class="line">        <span class="keyword">this</span>.invertSelection = &#123;&#125;;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelectionTotal = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.tableRefs &amp;&amp; <span class="keyword">this</span>.tableRefs.clearSelection();</span><br><span class="line">      fn &amp;&amp; fn(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'取消全选报错：_handleNoCheckAllTable'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 搜索如果是全选，就请求所有搜索数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>fn 回调更新</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">async</span> _handleCacheSearchList(fn) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> selection = [];</span><br><span class="line">      <span class="comment">// 搜索全选不缓存</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.isSearch &amp;&amp; <span class="keyword">this</span>.isCheckAll &amp;&amp; <span class="keyword">this</span>.invertSearchList.length &gt;= <span class="keyword">this</span>.pageTotal &amp;&amp; <span class="keyword">this</span>.pageTotal) &#123;</span><br><span class="line">        selection = <span class="keyword">this</span>.invertSearchList;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        selection = <span class="keyword">await</span> <span class="keyword">this</span>._getTableList();</span><br><span class="line">        <span class="comment">// if (this.tableRefs) &#123;</span></span><br><span class="line">        <span class="comment">//   this.invertSearchList = this.isSearch ? [] : selection;</span></span><br><span class="line">        <span class="comment">//   // /!this.tableRefs &amp;&amp;</span></span><br><span class="line">        <span class="comment">// &#125; else</span></span><br><span class="line">        <span class="comment">// 如果是全选,还是搜索,缓存</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isCheckAll &amp;&amp; <span class="keyword">this</span>.isSearch) &#123;</span><br><span class="line">          <span class="keyword">this</span>.invertSearchList = selection;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(this.invertSearchList.length, '----------------');</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// console.log(selection);</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; selection.length; i++) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cacheSelection[selection[i][<span class="keyword">this</span>.rowKey]] = selection[i];</span><br><span class="line">        <span class="comment">// 清除</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.invertSelection[selection[i][<span class="keyword">this</span>.rowKey]]) &#123;</span><br><span class="line">          <span class="keyword">this</span>.invertSelection[selection[i][<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>._handleCheckAllTable();</span><br><span class="line">      <span class="keyword">this</span>._toCalculateSelectionTotal().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        fn &amp;&amp; fn(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'搜索全选报错：_handleCacheSearchList'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 全选后，搜索反选</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _getSearchNoSelection(fn) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>._getTableList().then(<span class="function"><span class="params">selection</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; selection.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.cacheSelection[selection[i][<span class="keyword">this</span>.rowKey]]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.cacheSelectionTotal -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.cacheSelection[selection[i][<span class="keyword">this</span>.rowKey]] = <span class="literal">null</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.isCheckAll = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.isIndeterminate = <span class="keyword">this</span>.cacheSelectionTotal &gt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.invertSearchTotal = selection.length;</span><br><span class="line">        <span class="keyword">this</span>.tableRefs &amp;&amp; <span class="keyword">this</span>.tableRefs.clearSelection();</span><br><span class="line">        fn &amp;&amp; fn(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">        <span class="comment">// this._handleNoCheckAllTable(fn);</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error);</span><br><span class="line">      alert(error.message || <span class="string">'搜索全选报错：_getSearchNoSelection'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理全选单选状态</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _handleCheckStatus(total, fn) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.isSearch) &#123;</span><br><span class="line">      <span class="comment">// 记录当前搜索总共多少条，然后点击勾上或取消，就加减，当这个搜索总数为0，那就说明是全选</span></span><br><span class="line">      <span class="keyword">this</span>.isCheckAll = !!(<span class="keyword">this</span>.invertSearchTotal &lt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.tableData.length);</span><br><span class="line">      <span class="keyword">this</span>.isIndeterminate = !!(</span><br><span class="line">        (<span class="keyword">this</span>.invertSearchTotal &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.tableData.length) ||</span><br><span class="line">        (<span class="keyword">this</span>.tableData.length &lt;= <span class="number">0</span> &amp;&amp; total)</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.isCheckAll = total &gt;= <span class="keyword">this</span>.pageTotal &amp;&amp; total &gt; <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">this</span>.isIndeterminate = total &lt; <span class="keyword">this</span>.pageTotal &amp;&amp; total &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fn &amp;&amp; fn(<span class="keyword">this</span>._handleCallBack());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 回调函数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _handleCallBack() &#123;</span><br><span class="line">    <span class="comment">//把this.cacheSelection转换为array</span></span><br><span class="line">    <span class="keyword">let</span> cacheSelection = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> <span class="keyword">this</span>.cacheSelection) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.hasOwnProperty.call(<span class="keyword">this</span>.cacheSelection, key) &amp;&amp; <span class="keyword">this</span>.cacheSelection[key]) &#123;</span><br><span class="line">        cacheSelection.push(<span class="keyword">this</span>.cacheSelection[key]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isCheckAll: <span class="keyword">this</span>.isCheckAll,</span><br><span class="line">      isIndeterminate: <span class="keyword">this</span>.isIndeterminate,</span><br><span class="line">      selectionTotal: <span class="keyword">this</span>.cacheSelectionTotal,</span><br><span class="line">      selectionTable: cacheSelection,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 动态计算选中的数量</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _toCalculateSelectionTotal() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> <span class="keyword">this</span>.cacheSelection) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.hasOwnProperty.call(<span class="keyword">this</span>.cacheSelection, key) &amp;&amp; <span class="keyword">this</span>.cacheSelection[key]) &#123;</span><br><span class="line">          total += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.cacheSelectionTotal = <span class="built_in">Math</span>.max(<span class="number">0</span>, total);</span><br><span class="line">      resolve(total);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 请求接口</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _getTableList() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.showLoad();</span><br><span class="line">      <span class="keyword">const</span> search = <span class="built_in">Object</span>.assign(<span class="keyword">this</span>.tableSearch, &#123; <span class="attr">pageSize</span>: <span class="number">100000</span>, <span class="attr">pageIndex</span>: <span class="number">1</span> &#125;);</span><br><span class="line">      <span class="keyword">this</span>.getTableList(search)</span><br><span class="line">        .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// console.log(this.dataKey);</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.dataKey) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!res.data || !<span class="built_in">Array</span>.isArray(res.data[<span class="keyword">this</span>.dataKey]) || !res.data[<span class="keyword">this</span>.dataKey]) &#123;</span><br><span class="line">              res.data = &#123; [<span class="keyword">this</span>.dataKey]: [], <span class="attr">total</span>: <span class="number">0</span> &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(res.data[<span class="keyword">this</span>.dataKey]);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!res.data || !<span class="built_in">Array</span>.isArray(res.data)) res.data = [];</span><br><span class="line">            resolve(res.data);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">this</span>.hideLoad();</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">          <span class="keyword">this</span>.hideLoad();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 数组转化对象</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>field 字段</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>list 数组</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  _formatArrayToObject(field, selection) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!field) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请传入转化的【key】'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Array</span>.isArray(selection) || selection.length &lt;= <span class="number">0</span>) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> selection.reduce(<span class="function">(<span class="params">prev, next</span>) =&gt;</span> &#123;</span><br><span class="line">      prev[next[field]] = next;</span><br><span class="line">      <span class="keyword">return</span> prev;</span><br><span class="line">    &#125;, &#123;&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 显示load</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  showLoad() &#123;</span><br><span class="line">    <span class="keyword">this</span>.loading &amp;&amp; <span class="keyword">this</span>.hideLoad();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.loadTarget) &#123;</span><br><span class="line">      <span class="keyword">this</span>.loading = Loading.service(&#123;</span><br><span class="line">        target: <span class="keyword">this</span>.loadTarget,</span><br><span class="line">        text: <span class="string">'数据加载中...'</span>,</span><br><span class="line">        background: <span class="string">'rgba(0,0,0,0.2)'</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 隐藏load</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  hideLoad() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.loading) &#123;</span><br><span class="line">      <span class="keyword">let</span> timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.loading.close();</span><br><span class="line">        <span class="keyword">this</span>.loading = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">          clearTimeout(timer);</span><br><span class="line">          timer = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, <span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> TableSelection;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> TableSelection <span class="keyword">from</span> <span class="string">'XXXX/tableSelection.js'</span></span><br><span class="line"><span class="keyword">const</span> tableSelection = <span class="keyword">new</span> TableSelection(&#123;</span><br><span class="line">  dataKey: <span class="string">'list'</span>,</span><br><span class="line">  rowKey: <span class="string">'id'</span>,</span><br><span class="line">  loadTarget: <span class="string">'#ID'</span>,</span><br><span class="line">  getTableList: API,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 数据请求</span></span><br><span class="line">getAPI(isFirst = <span class="literal">false</span>) &#123;</span><br><span class="line">    API().then(</span><br><span class="line">        <span class="comment">// 获取到数据</span></span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.initMultiple(isFirst);</span><br><span class="line">        &#125;);</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除选中的数据</span></span><br><span class="line">tableSelection.reset();</span><br><span class="line"><span class="comment">// 选中的数据提交</span></span><br><span class="line">tableSelection.handleSubmit(<span class="function"><span class="params">list</span> =&gt;</span> &#123;&#125;)</span><br><span class="line"><span class="comment">// 更新数据</span></span><br><span class="line">updateParameter(res) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isCheckAll = res.isCheckAll; <span class="comment">// 全选状态</span></span><br><span class="line">    <span class="keyword">this</span>.selectionTotal = res.selectionTotal; <span class="comment">// 选中几条</span></span><br><span class="line">    <span class="keyword">this</span>.isIndeterminate = res.isIndeterminate; <span class="comment">// 半选状态</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 当前页面-全选、反选</span></span><br><span class="line">handleSelectAll(selection) &#123;</span><br><span class="line">    tableSelection.handleCheckPageAll(selection, <span class="keyword">this</span>.updateParameter);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 单选选中</span></span><br><span class="line">handleSelect(selection, row) &#123;</span><br><span class="line">    tableSelection.handleCheckSingle(selection, row, <span class="keyword">this</span>.updateParameter);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 全选</span></span><br><span class="line">handleChangeAll(isCheckAll) &#123;</span><br><span class="line">    tableSelection.handleCheckAll(isCheckAll, <span class="keyword">this</span>.updateParameter);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 全选初始化</span></span><br><span class="line">initMultiple(isFirst) &#123;</span><br><span class="line">    tableSelection.init(&#123;</span><br><span class="line">    isFirst,</span><br><span class="line">    params: <span class="keyword">this</span>.search,</span><br><span class="line">    echoList: <span class="keyword">this</span>.echoId,</span><br><span class="line">    pageTotal: <span class="keyword">this</span>.pageTotal,</span><br><span class="line">    tableData: <span class="keyword">this</span>.tableData,</span><br><span class="line">    callback: <span class="keyword">this</span>.updateParameter,</span><br><span class="line">    tableRefs: <span class="keyword">this</span>.$refs.tableRef.tableRefs,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;el-table选中数据😓分页切换，改变搜索条件等操作原有的选项不会保存。需满足原油选中数据能够记录保存。&lt;/p</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="el-table" scheme="https://blog.afacode.top/tags/el-table/"/>
    
    <category term="javascript" scheme="https://blog.afacode.top/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>fatal &#39;XXX&#39; is not a commit and a branch &#39;XXX&#39; cannot be created from it</title>
    <link href="https://blog.afacode.top/2022/05/16/git%20not%20a%20commit%20and%20a%20branch/"/>
    <id>https://blog.afacode.top/2022/05/16/git%20not%20a%20commit%20and%20a%20branch/</id>
    <published>2022-05-16T15:21:45.000Z</published>
    <updated>2023-07-13T15:06:15.412Z</updated>
    
    <content type="html"><![CDATA[<p>在git新建分支并拉去上线分支代码时，出现报错 fatal: ‘XXX’ is not a commit and a branch ‘XXX’ cannot be created from it</p><p>原因是因为未将本地代码更行，检测不到git新建的线上的分支</p><p>解决方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line">git pull </span><br><span class="line"></span><br><span class="line">git checkout -b 分支名 origin/分支名</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在git新建分支并拉去上线分支代码时，出现报错 fatal: ‘XXX’ is not a commit and a branch ‘XXX’ cannot be created from it&lt;/p&gt;
&lt;p&gt;原因是因为未将本地代码更行，检测不到git新建的线上的分支&lt;/p</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="git" scheme="https://blog.afacode.top/tags/git/"/>
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>goland配置goland.vmoptions后不能启动问题解决</title>
    <link href="https://blog.afacode.top/2022/04/21/goland-load-error/"/>
    <id>https://blog.afacode.top/2022/04/21/goland-load-error/</id>
    <published>2022-04-21T15:55:42.000Z</published>
    <updated>2023-07-13T15:06:15.413Z</updated>
    
    <content type="html"><![CDATA[<p>安装的版本有一些残留的配置项</p><p>打开 Finder(访达) –&gt; Applications(应用程序) –&gt; Goland(idea) –&gt; Show Package Contents(显示包内容)</p><p>Contents–&gt;MacOS–&gt;goland， 双击运行<br>显示错误 </p><p>一些文件路径找不到 jetbrains-agent.jar</p><p><code>-javaagent:/Applications/GoLand.app/Contents/bin/jetbrains_agent.rar</code></p><p>打开 bin 下面的 goland.vmoptions 把这行注释或者直接删除</p><p>如果还是不行</p><p>还有可能有多个goland版本残存</p><p>到这个路径 <code>~/Library/Application Support/JetBrains/</code> 下 </p><p>查看每个版本goland的goland.vmoptions配置 删除</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装的版本有一些残留的配置项&lt;/p&gt;
&lt;p&gt;打开 Finder(访达) –&amp;gt; Applications(应用程序) –&amp;gt; Goland(idea) –&amp;gt; Show Package Contents(显示包内容)&lt;/p&gt;
&lt;p&gt;Contents–&amp;gt;Ma</summary>
      
    
    
    
    
    <category term="goland" scheme="https://blog.afacode.top/tags/goland/"/>
    
    <category term="go" scheme="https://blog.afacode.top/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 将成为新的默认版本(转)</title>
    <link href="https://blog.afacode.top/2022/01/21/vue-news-00/"/>
    <id>https://blog.afacode.top/2022/01/21/vue-news-00/</id>
    <published>2022-01-21T14:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.435Z</updated>
    
    <content type="html"><![CDATA[<p>作者：尤雨溪<br>链接：<a href="https://zhuanlan.zhihu.com/p/460055155" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/460055155</a><br>来源：知乎 </p><p>划重点：Vue 3 将在 <strong>2022 年 2 月 7 日</strong> 成为新的默认版本！  </p><p>请务必阅读文末的 <strong>可能需要采取的措施</strong> 部分，来确认你是否需要在默认版本切换之前做相应改动以避免发生异常。</p><p>本文章开放授权，在注明原文地址，内容不做修改的前提下可以随意转载。</p><p><a href="https://link.zhihu.com/?target=https://gist.github.com/yyx990803/bf9a625eeff8b471bf0701afb8e3fe75">Markdown 源文件</a> | <a href="https://link.zhihu.com/?target=https://blog.vuejs.org/posts/vue-3-as-the-new-default.html">英文原文</a></p><hr><h3 id="从库到框架"><a href="#从库到框架" class="headerlink" title="从库到框架"></a>从库到框架</h3><p>在最开始的时候，Vue 仅仅是一个运行时库。但这些年来，它已经逐步发展成了一个包含许多子项目的框架：</p><ul><li>  核心库，即 <code>vue</code> npm 包</li><li>  内容足够当作一本书的文档</li><li>  构建工具链（Vue CLI、Vue Loader 和其他支持包）</li><li>  用于构建单页应用的路由 Vue Router</li><li>  用于状态管理的 Vuex</li><li>  用于调试和分析的浏览器开发者工具扩展</li><li>  用于支持开发单文件组件的 VSCode 扩展 Vetur</li><li>  用于进行静态风格/错误检查的 ESLint 插件</li><li>  用于组件测试的 Vue Test Utils</li><li>  利用 Vue 运行时功能的定制 JSX Babel 插件</li><li>  用于静态网站生成的 VuePress</li></ul><p>正因为 Vue 是一个社区驱动的项目，才让这一切成为可能。这些项目中的许多都是由社区成员发起，他们后来成为了 Vue 团队的成员。其余的项目最初由我发起，但现在除了核心库之外，几乎都完全由团队维护。</p><h3 id="Vue-3-的-“软发布”"><a href="#Vue-3-的-“软发布”" class="headerlink" title="Vue 3 的 “软发布”"></a>Vue 3 的 “软发布”</h3><p>随着核心库发布新的大版本，框架的所有其他部分也需要一起同步更新。我们还需要为 Vue 2 用户提供一个升级方案。对于 Vue 这样一个社区驱动的团队来说，这是一个巨大的工程。在 Vue 3 的核心库完成的时候，框架的其他部分要么还在 beta 状态，要么还没有开始适配 Vue 3。当时我们的决定是先发布核心库，这样早期用户可以先用起来，库和上层框架的开发者也可以先适配起来，而我们则继续更新框架的其余部分。</p><p>在这个过程中，我们依然将 Vue 2 保留为文档和 npm 安装时的默认版本。这是因为我们知道对于大部分用户来说，在 Vue 3 的其余部分完善以前，Vue 2 仍然提供了更一致且完整的体验。</p><h3 id="崭新的-Vue"><a href="#崭新的-Vue" class="headerlink" title="崭新的 Vue"></a>崭新的 Vue</h3><p>“软发布” 的过程比预期要长，但这个时刻终于到了：我们很高兴地宣布，Vue 3 将在 <strong>2022 年 2 月 7 日</strong> 成为新的默认版本。  </p><p>除了 Vue 核心库以外，我们还几乎改进了框架的每个方面。</p><ul><li>  基于 <a href="https://link.zhihu.com/?target=https://vitejs.dev/">Vite</a> 的极速构建工具链</li><li>  <code>&lt;script setup&gt;</code> 带来的开发体验更丝滑的组合式 API 语法</li><li>  <a href="https://link.zhihu.com/?target=https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar">Volar</a> 提供的单文件组件 TypeScript IDE 支持</li><li>  <a href="https://link.zhihu.com/?target=https://github.com/johnsoncodehk/volar/tree/master/packages/vue-tsc">vue-tsc</a> 提供的针对单文件组件的命令行类型检查和生成</li><li>  <a href="https://link.zhihu.com/?target=https://pinia.vuejs.org/">Pinia</a> 提供的更简洁的状态管理</li><li>新的开发者工具扩展，同时支持 Vue 2/Vue 3，并且提供一个<a href="https://link.zhihu.com/?target=https://devtools.vuejs.org/plugin/plugins-guide.html">插件系统</a>来允许社区库自行扩展开发者工具面板。    我们还彻底重写了主文档。<a href="https://link.zhihu.com/?target=https://staging.vuejs.org/">全新的 vuejs.org</a> (目前处于待发布状态，<a href="https://link.zhihu.com/?target=https://staging-cn.vuejs.org/">中文版</a>的翻译还在进行中) 将提供最新的框架概述与开发建议、针对不同背景的用户的灵活的学习路径，在整个指南与示例中都能够在选项式 API 和组合式 API 之间进行切换，以及许多新的深入章节。新文档本身的网站性能也非常优秀——我们将在不久后的另一篇博文中详细探讨一下。</li></ul><h3 id="版本切换细节"><a href="#版本切换细节" class="headerlink" title="版本切换细节"></a>版本切换细节</h3><p>下面是我们所说的“新的默认版本”的具体细节。此外，请务必阅读文末的 <strong>可能需要采取的措施</strong> 部分，来确认你是否需要在默认版本切换之前做相应改动以避免发生异常。</p><h3 id="npm-发布标签"><a href="#npm-发布标签" class="headerlink" title="npm 发布标签"></a>npm 发布标签</h3><ul><li>  <code>npm install vue</code> 将默认安装 Vue 3。</li><li>  所有其他官方 npm 包的 <code>latest</code> 发布标签将指向其 Vue 3 的兼容版本，包括 <code>vue-router</code>、<code>vuex</code>、<code>vue-loader</code> 和 <code>@vue/test-utils</code>。</li></ul><h3 id="官方文档与站点"><a href="#官方文档与站点" class="headerlink" title="官方文档与站点"></a>官方文档与站点</h3><p>所有的文档和官方站点将默认切换到 Vue 3 版本。包括：  </p><ul><li><a href="https://link.zhihu.com/?target=http://vuejs.org">http://vuejs.org</a>  </li><li><a href="https://link.zhihu.com/?target=http://router.vuejs.org">http://router.vuejs.org</a>  </li><li><a href="https://link.zhihu.com/?target=http://vuex.vuejs.org">http://vuex.vuejs.org</a>  </li><li><a href="https://link.zhihu.com/?target=http://vue-test-utils.vuejs.org">http://vue-test-utils.vuejs.org</a> (将迁移到 <a href="https://link.zhihu.com/?target=http://test-utils.vuejs.org">http://test-utils.vuejs.org</a>)  </li><li><a href="https://link.zhihu.com/?target=http://template-explorer.vuejs.org">http://template-explorer.vuejs.org</a>  </li></ul><p>请注意，新的 <a href="https://link.zhihu.com/?target=http://vuejs.org">http://vuejs.org</a> 将是<a href="https://link.zhihu.com/?target=https://staging.vuejs.org/">完全重写的版本</a>，而不是目前部署在 v3.vuejs.org 的版本。  </p><p>这些站点当前的 Vue 2 版本将被迁移到新地址 (版本前缀表示库的各自版本，而非 Vue 核心库的版本)：  </p><ul><li><a href="https://link.zhihu.com/?target=http://vuejs.org">http://vuejs.org</a> -&gt; <a href="https://link.zhihu.com/?target=http://v2.vuejs.org">http://v2.vuejs.org</a> (旧的 v2 网址将自动重定向到新地址上)  </li><li><a href="https://link.zhihu.com/?target=http://router.vuejs.org">http://router.vuejs.org</a> -&gt; <a href="https://link.zhihu.com/?target=http://v3.router.vuejs.org">http://v3.router.vuejs.org</a>  </li><li><a href="https://link.zhihu.com/?target=http://vuex.vuejs.org">http://vuex.vuejs.org</a> -&gt; <a href="https://link.zhihu.com/?target=http://v3.vuex.vuejs.org">http://v3.vuex.vuejs.org</a>  </li><li><a href="https://link.zhihu.com/?target=http://vue-test-utils.vuejs.org">http://vue-test-utils.vuejs.org</a> -&gt; <a href="https://link.zhihu.com/?target=http://v1.test-utils.vuejs.org">http://v1.test-utils.vuejs.org</a>  </li><li><a href="https://link.zhihu.com/?target=http://template-explorer.vuejs.org">http://template-explorer.vuejs.org</a> -&gt; <a href="https://link.zhihu.com/?target=http://v2.template-explorer.vuejs.org">http://v2.template-explorer.vuejs.org</a></li></ul><h3 id="GitHub-仓库"><a href="#GitHub-仓库" class="headerlink" title="GitHub 仓库"></a>GitHub 仓库</h3><p><em>在写这篇文章时，仓库相关的变化已经生效了。</em>  </p><p><code>vuejs</code> 组织下的所有 GitHub 仓库将把默认分支切换到 Vue 3 对应的版本。此外，以下仓库将被重命名，以删除其名称中的 <code>next</code>：  </p><ul><li>vuejs/vue-next -&gt; <a href="https://link.zhihu.com/?target=https://github.com/vuejs/core">vuejs/core</a>  </li><li>vuejs/vue-router-next -&gt; <a href="https://link.zhihu.com/?target=https://github.com/vuejs/router">vuejs/router</a>  </li><li>vuejs/docs-next -&gt; <a href="https://link.zhihu.com/?target=https://github.com/vuejs/docs">vuejs/docs</a>  </li><li>vuejs/vue-test-utils-next -&gt; <a href="https://link.zhihu.com/?target=https://github.com/vuejs/test-utils">vuejs/test-utils</a>  </li><li>vuejs/jsx-next -&gt; <a href="https://link.zhihu.com/?target=https://github.com/vuejs/babel-plugin-jsx">vuejs/babel-plugin-jsx</a>  </li></ul><p>此外，主文档的翻译仓库将被移至 <a href="https://link.zhihu.com/?target=https://github.com/vuejs-translations">vuejs-translations 组织</a>下。  </p><p>GitHub 会自动处理仓库的重定向，所以之前的源码与 issue 问题的链接应该仍然有效。</p><h3 id="开发者工具扩展"><a href="#开发者工具扩展" class="headerlink" title="开发者工具扩展"></a>开发者工具扩展</h3><p>开发者工具 v6 目前是发布到 Chrome Web Store 的 <a href="https://link.zhihu.com/?target=https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg">beta 频道</a>下的，在版本切换后，将移至<a href="https://link.zhihu.com/?target=https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd">稳定频道</a>。  </p><p>目前的稳定频道仍然可用。它将被迁移到<a href="https://link.zhihu.com/?target=https://chrome.google.com/webstore/detail/vuejs-devtools/iaajmlceplecbljialhhkmedjlpdblhp">遗留频道</a>。</p><h3 id="可能需要采取的措施"><a href="#可能需要采取的措施" class="headerlink" title="可能需要采取的措施"></a>可能需要采取的措施</h3><h3 id="未指定版本的-CDN-链接"><a href="#未指定版本的-CDN-链接" class="headerlink" title="未指定版本的 CDN 链接"></a>未指定版本的 CDN 链接</h3><p>如果你通过 CDN 链接使用 Vue 2 而没有指定版本，请确保通过 <code>@2</code> 来指定一个版本范围：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- &lt;script src="https://unpkg.com/vue"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+ &lt;script src="https://unpkg.com/vue@2"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">- &lt;script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+ &lt;script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.min.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>注意：即使使用 Vue 3，你也应该始终在生产环境指定一个版本范围，以避免意外地加载到未来的大版本。</p><h3 id="npm-latest-标签"><a href="#npm-latest-标签" class="headerlink" title="npm latest 标签"></a>npm <code>latest</code> 标签</h3><p>如果你使用 <code>latest</code> 标签或 <code>*</code> 来从 npm 安装 Vue 或其他官方库，请更新为明确使用兼容 Vue 2 的版本：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "dependencies": &#123;</span><br><span class="line"><span class="deletion">-   "vue": "latest",</span></span><br><span class="line"><span class="addition">+   "vue": "^2.6.14",</span></span><br><span class="line"><span class="deletion">-   "vue-router": "latest",</span></span><br><span class="line"><span class="addition">+   "vue-router": "^3.5.3",</span></span><br><span class="line"><span class="deletion">-   "vuex": "latest"</span></span><br><span class="line"><span class="addition">+   "vuex": "^3.6.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  "devDependencies": &#123;</span><br><span class="line"><span class="deletion">-   "vue-loader": "latest",</span></span><br><span class="line"><span class="addition">+   "vue-loader": "^15.9.8",</span></span><br><span class="line"><span class="deletion">-   "@vue/test-utils": "latest"</span></span><br><span class="line"><span class="addition">+   "@vue/test-utils": "^1.3.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;作者：尤雨溪&lt;br&gt;链接：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/460055155&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/460055155&lt;/a&gt;&lt;b</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue-router 使用需要添加多余参数(默认params 参数) 会有ts提示</title>
    <link href="https://blog.afacode.top/2022/01/04/vue-router-ts/"/>
    <id>https://blog.afacode.top/2022/01/04/vue-router-ts/</id>
    <published>2022-01-04T15:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.437Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>vue-router 使用需要添加多余参数(默认params 参数) 会有ts提示</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不能将类型“&#123; <span class="attr">name</span>: string; path: string; params: &#123; <span class="attr">type</span>: number; &#125;; meta: &#123; <span class="attr">title</span>: string; hidden: <span class="literal">false</span>; keepAlive: <span class="literal">true</span>; &#125;; component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Promise</span>&lt;<span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">"*.vue"</span>)&gt;; &#125;”分配给类型“RouteRecordRaw”。</span><br><span class="line">  对象文字可以只指定已知属性，并且“params”不在类型“RouteRecordSingleView”中。ts(<span class="number">2322</span>)</span><br></pre></td></tr></table></figure><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><blockquote><p>在src下新建vue-router.d.ts</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; _RouteRecordBase &#125; <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line">declare <span class="built_in">module</span> <span class="string">'vue-router'</span> &#123;</span><br><span class="line"> interface _RouteRecordBase &#123;</span><br><span class="line"> params?: <span class="built_in">Object</span>, <span class="comment">// router配置的多余字段</span></span><br><span class="line"> query?: <span class="built_in">Object</span>,</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h3&gt;&lt;p&gt;vue-router 使用需要添加多余参数(默认params 参数) 会有ts提示&lt;/p&gt;
&lt;figure clas</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="vue router" scheme="https://blog.afacode.top/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>Enter one-time password from your authenticator app 解决</title>
    <link href="https://blog.afacode.top/2022/01/02/npm-login-opt/"/>
    <id>https://blog.afacode.top/2022/01/02/npm-login-opt/</id>
    <published>2022-01-02T14:28:15.000Z</published>
    <updated>2023-07-13T15:06:15.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Enter-one-time-password-from-your-authenticator-app-解决"><a href="#Enter-one-time-password-from-your-authenticator-app-解决" class="headerlink" title="Enter one-time password from your authenticator app 解决"></a>Enter one-time password from your authenticator app 解决</h2><p>npm 安全规则</p><p>npm login 登录需要 OTP authenticator</p><p><a href="https://docs.npmjs.com/configuring-two-factor-authentication" target="_blank" rel="noopener">操作文档</a></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">登录  npmjs.com 后在我的 account </span><br><span class="line"></span><br><span class="line">enable <span class="number">2</span>FA</span><br><span class="line"></span><br><span class="line">选择</span><br><span class="line"></span><br><span class="line">Two-Factor Authentication</span><br><span class="line"></span><br><span class="line">扫描 二维码 使用 身份验证器 </span><br><span class="line"></span><br><span class="line">我是用 识别二维码 https:<span class="comment">//chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai/related?hl=zh-CN</span></span><br><span class="line"></span><br><span class="line">获得<span class="number">6</span>位code验证</span><br><span class="line">填写到下面</span><br><span class="line"></span><br><span class="line">通过后 会有 <span class="number">5</span>个 字符串 保存好</span><br><span class="line"></span><br><span class="line">在以后需要 otp 的地方使用</span><br></pre></td></tr></table></figure><p><a href="https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai/related?hl=zh-CN" target="_blank" rel="noopener">身份验证器 </a></p><h3 id="发布-npm-包流程-捎带"><a href="#发布-npm-包流程-捎带" class="headerlink" title="发布 npm 包流程(捎带)"></a>发布 npm 包流程(捎带)</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">login</span></span><br><span class="line"></span><br><span class="line">需要 one-<span class="type">time</span> <span class="keyword">password</span></span><br><span class="line">按照上面获取 otp</span><br><span class="line"></span><br><span class="line">npm publish</span><br><span class="line">再次输入 otp</span><br><span class="line"></span><br><span class="line">一般就行</span><br></pre></td></tr></table></figure><blockquote><p>发布带@开头公共包<br><code>npm publish --access public</code></p></blockquote><h4 id="npm-源问题"><a href="#npm-源问题" class="headerlink" title="npm 源问题"></a>npm 源问题</h4><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">config <span class="keyword">set</span> <span class="keyword">registry</span> https://<span class="keyword">registry</span>.npmjs.org</span><br><span class="line"></span><br><span class="line">或者发布登录用</span><br><span class="line"></span><br><span class="line">npm login  --<span class="keyword">registry</span> https://<span class="keyword">registry</span>.npmjs.org/</span><br><span class="line"></span><br><span class="line">npm publish  --<span class="keyword">registry</span> https://<span class="keyword">registry</span>.npmjs.org/</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Enter-one-time-password-from-your-authenticator-app-解决&quot;&gt;&lt;a href=&quot;#Enter-one-time-password-from-your-authenticator-app-解决&quot; class=&quot;hea</summary>
      
    
    
    
    
    <category term="npm" scheme="https://blog.afacode.top/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>element-plus 更新 1.2.0版本后 @element-plus/icons 的使用</title>
    <link href="https://blog.afacode.top/2021/12/10/elementplus-update1.2/"/>
    <id>https://blog.afacode.top/2021/12/10/elementplus-update1.2/</id>
    <published>2021-12-10T14:07:39.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<h3 id="element-plus-更新-1-2-0版本后-element-plus-icons-的使用"><a href="#element-plus-更新-1-2-0版本后-element-plus-icons-的使用" class="headerlink" title="element-plus 更新 1.2.0版本后 @element-plus/icons 的使用"></a>element-plus 更新 1.2.0版本后 @element-plus/icons 的使用</h3><blockquote><p>element-plus1.2.0 组件内的 Font Icon 向 SVG Icon 迁移，正式版本Font Icon将被弃用<br>@element-plus/icons 的使用<br>element-plus 升级后 需要对应的更改</p></blockquote><blockquote><p>安装|更新</p></blockquote><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="built_in">add</span> <span class="keyword">element</span>-plus @<span class="keyword">element</span>-plus/icons-vue</span><br></pre></td></tr></table></figure><blockquote><p>plugins/elementPlus.ts</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementPlus <span class="keyword">from</span> <span class="string">'element-plus'</span></span><br><span class="line"><span class="keyword">import</span> locale <span class="keyword">from</span> <span class="string">'element-plus/lib/locale/lang/zh-cn.js'</span></span><br><span class="line"><span class="comment">// 样式修改</span></span><br><span class="line"><span class="comment">// import 'element-plus/lib/theme-chalk/index.css'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-plus/dist/index.css'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'dayjs/locale/zh-cn'</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> icons <span class="keyword">from</span> <span class="string">'@element-plus/icons-vue'</span></span><br><span class="line"><span class="comment">// 组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">app</span>) </span>&#123;</span><br><span class="line">  app.use(ElementPlus, &#123; locale &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ICON</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">installIcon</span> (<span class="params">app</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">Object</span>.keys(icons).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">    app.component(key, icons[key])</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>main.ts</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementPlus, &#123;installIcon&#125; <span class="keyword">from</span> <span class="string">'./plugins/elementPlus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加</span></span><br><span class="line">installIcon(app)</span><br></pre></td></tr></table></figure><blockquote><p>ICON的使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-icon&gt;</span><br><span class="line">   &lt;add-location /&gt;</span><br><span class="line"> &lt;<span class="regexp">/el-icon&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;element-plus-更新-1-2-0版本后-element-plus-icons-的使用&quot;&gt;&lt;a href=&quot;#element-plus-更新-1-2-0版本后-element-plus-icons-的使用&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue3.0自身升级</title>
    <link href="https://blog.afacode.top/2021/11/20/vue3-self-update/"/>
    <id>https://blog.afacode.top/2021/11/20/vue3-self-update/</id>
    <published>2021-11-20T13:48:12.000Z</published>
    <updated>2023-07-13T15:06:15.438Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>vue3.0自身升级</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add -S vue@next</span><br><span class="line">yarn add -D @vue/compiler-sfc</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;vue3.0自身升级&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>关于[vuejs](https://github.com/vuejs)/**vue-next** 中使用 for 填充数组 关于代码执行速度讨论</title>
    <link href="https://blog.afacode.top/2021/11/20/fill-for-array/"/>
    <id>https://blog.afacode.top/2021/11/20/fill-for-array/</id>
    <published>2021-11-20T10:38:22.000Z</published>
    <updated>2023-07-13T15:06:15.412Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于vuejs-vue-next-中使用-for-填充数组的讨论"><a href="#关于vuejs-vue-next-中使用-for-填充数组的讨论" class="headerlink" title="关于vuejs/vue-next 中使用 for 填充数组的讨论"></a>关于<a href="https://github.com/vuejs" target="_blank" rel="noopener">vuejs</a>/<strong>vue-next</strong> 中使用 for 填充数组的讨论</h3><blockquote><p>fill for  new Array(len) 初始化赋值</p></blockquote><blockquote><p>packages/runtime-core/src/createRenderer.ts</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// toBePatched 数组长度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 原有</span></span><br><span class="line"><span class="keyword">const</span> newIndexToOldIndexMap = []</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; toBePatched; i++) newIndexToOldIndexMap.push(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// pr 代码</span></span><br><span class="line"><span class="keyword">const</span> newIndexToOldIndexMap = <span class="keyword">new</span> <span class="built_in">Array</span>(toBePatched).fill(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 现有优化</span></span><br><span class="line"><span class="comment">// This is even faster (and won't require a polyfill when we do IE11 support):</span></span><br><span class="line"><span class="keyword">const</span> newIndexToOldIndexMap = <span class="keyword">new</span> <span class="built_in">Array</span>(toBePatched)</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; toBePatched; i++) newIndexToOldIndexMap[i] = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>讨论地址 <a href="https://github.com/vuejs/vue-next/pull/319" target="_blank" rel="noopener">https://github.com/vuejs/vue-next/pull/319</a></p><p>执行测试结果 <a href="https://jsperf.com/array-fill-vs-loop" target="_blank" rel="noopener">https://jsperf.com/array-fill-vs-loop</a></p><p>new Array(toBePatched) 数组可开辟固定大小, 不需计算扩容</p><h2 id="Array-prototype-fill-基础"><a href="#Array-prototype-fill-基础" class="headerlink" title="Array.prototype.fill() 基础"></a>Array.prototype.fill() 基础</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">fill(value, start, end)</span><br><span class="line"></span><br><span class="line">arr.fill(value[, start[, end]])</span><br><span class="line"></span><br><span class="line">value</span><br><span class="line">Value to fill the array <span class="keyword">with</span>. (Note all elements <span class="keyword">in</span> the array will be <span class="keyword">this</span> exact value.)</span><br><span class="line"></span><br><span class="line">start Optional</span><br><span class="line">Start index (inclusive), <span class="keyword">default</span> <span class="number">0.</span></span><br><span class="line"></span><br><span class="line">end Optional</span><br><span class="line">End index (exclusive), <span class="keyword">default</span> arr.length.</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;关于vuejs-vue-next-中使用-for-填充数组的讨论&quot;&gt;&lt;a href=&quot;#关于vuejs-vue-next-中使用-for-填充数组的讨论&quot; class=&quot;headerlink&quot; title=&quot;关于vuejs/vue-next 中使用 for 填充数</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="fill" scheme="https://blog.afacode.top/tags/fill/"/>
    
  </entry>
  
  <entry>
    <title>vue3.0使用vue-i18n国际化支持简单使用</title>
    <link href="https://blog.afacode.top/2021/09/19/vue-i18n-use/"/>
    <id>https://blog.afacode.top/2021/09/19/vue-i18n-use/</id>
    <published>2021-09-19T15:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://vue-i18n.intlify.dev/" target="_blank" rel="noopener">官网</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vue-i18n@next   版本 <span class="number">9.0</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><p>src/main.ts</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; i18n &#125; <span class="keyword">from</span> <span class="string">'./local/index'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line"></span><br><span class="line">app.use(i18n)</span><br></pre></td></tr></table></figure><blockquote><p>src/local/index.ts</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createI18n &#125; <span class="keyword">from</span> <span class="string">'vue-i18n'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> messages <span class="keyword">from</span> <span class="string">'./language'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> i18n = createI18n(&#123;</span><br><span class="line"> locale: <span class="string">'ja'</span>,</span><br><span class="line"> fallbackLocale: <span class="string">'zh'</span>,</span><br><span class="line"> globalInjection: <span class="literal">true</span>,</span><br><span class="line"> legacy: <span class="literal">false</span>,</span><br><span class="line"> messages</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>src/local/language/index.ts</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import en <span class="keyword">from</span> <span class="string">'./en'</span></span><br><span class="line">import zh <span class="keyword">from</span> <span class="string">'./zh'</span></span><br><span class="line">import ja <span class="keyword">from</span> <span class="string">'./ja'</span></span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line">可以有更多的语言文件</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">export</span><span class="built_in"> default </span>&#123;</span><br><span class="line"> en,</span><br><span class="line"> zh,</span><br><span class="line"> ja,</span><br><span class="line"> <span class="built_in">..</span>.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>src/local/language/ja.ts     demo其他语言类似</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"> message: &#123;</span><br><span class="line">   word: <span class="string">'こんにちは、世界'</span>,</span><br><span class="line"> &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>src/local/language/en.ts </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"> message: &#123;</span><br><span class="line">   word: <span class="string">'hello world'</span>,</span><br><span class="line"> &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>src/local/language/zh.ts </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"> message: &#123;</span><br><span class="line">   word: <span class="string">'你好世界'</span>,</span><br><span class="line"> &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在template及-script-中使用"><a href="#在template及-script-中使用" class="headerlink" title="在template及 script 中使用"></a>在template及 script 中使用</h3><blockquote><p>切换语言</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">template</span><br><span class="line"></span><br><span class="line">&#123;&#123;$t(<span class="string">"message.word"</span>)&#125;&#125;</span><br><span class="line">&lt;el-button @click=<span class="string">"change('zh')"</span>&gt;中文&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">&lt;el-button @click="change('en')"&gt;英文&lt;/</span>el-button&gt;</span><br><span class="line">&lt;el-button @click=<span class="string">"change('ja')"</span>&gt;日文&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">更改 语言</span></span><br><span class="line"><span class="regexp">script</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">import &#123; useI18n &#125; from 'vue-i18n'</span></span><br><span class="line"><span class="regexp">import &#123; getCurrentInstance &#125; from 'vue'</span></span><br><span class="line"><span class="regexp">setup() &#123;</span></span><br><span class="line"><span class="regexp">const &#123; proxy &#125; = getCurrentInstance()</span></span><br><span class="line"><span class="regexp">const &#123; locale &#125; = useI18n()</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">const change = (lang) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">locale.value = lang</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 或者  二选一</span></span><br><span class="line"><span class="regexp">proxy.$i18n.locale = lang</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">return &#123;change&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vue-i18n.intlify.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="vue-i18n" scheme="https://blog.afacode.top/tags/vue-i18n/"/>
    
  </entry>
  
  <entry>
    <title>通过给定的选择器来获取对象中的值(js)</title>
    <link href="https://blog.afacode.top/2021/08/08/js-day-learn-0/"/>
    <id>https://blog.afacode.top/2021/08/08/js-day-learn-0/</id>
    <published>2021-08-08T15:28:15.000Z</published>
    <updated>2023-07-13T15:06:15.414Z</updated>
    
    <content type="html"><![CDATA[<h3 id="通过给定的选择器来获取对象中的值"><a href="#通过给定的选择器来获取对象中的值" class="headerlink" title="通过给定的选择器来获取对象中的值"></a>通过给定的选择器来获取对象中的值</h3><blockquote><p>需求</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入一个</span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">selector: &#123;<span class="attr">to</span>: &#123;<span class="attr">val</span>: <span class="string">"asdasd"</span>&#125;&#125;,</span><br><span class="line">user: &#123;<span class="attr">name</span>: <span class="string">"afacode"</span>&#125;,</span><br><span class="line">target: [<span class="number">1</span>, <span class="number">2</span>, &#123;<span class="attr">a</span>: <span class="string">"demo"</span>&#125;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">get</span>(obj, "selector.to.val", "target[0]", "user.name")</span><br><span class="line">输出 [ 'asdasd', 1, 'afacode' ]</span><br><span class="line">实现 <span class="keyword">get</span>()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">selector: &#123;<span class="attr">to</span>: &#123;<span class="attr">val</span>: <span class="string">"asdasd"</span>&#125;&#125;,</span><br><span class="line">user: &#123;<span class="attr">name</span>: <span class="string">"afacode"</span>&#125;,</span><br><span class="line">target: [<span class="number">1</span>, <span class="number">2</span>, &#123;<span class="attr">a</span>: <span class="string">"demo"</span>&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">from, ...selectors</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> n = selectors.map(<span class="function"><span class="params">s</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line">.replace(<span class="regexp">/\[(\w+)\]/g</span>, <span class="string">".$1"</span>)</span><br><span class="line">.split(<span class="string">"."</span>)</span><br><span class="line">.reduce(<span class="function">(<span class="params">prev, cur</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> prev &amp;&amp; prev[cur]</span><br><span class="line">&#125;, <span class="keyword">from</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> c = <span class="keyword">get</span>(obj, "selector.to.val", "target[0]", "user.name")</span><br><span class="line"></span><br><span class="line">console.log(c)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;通过给定的选择器来获取对象中的值&quot;&gt;&lt;a href=&quot;#通过给定的选择器来获取对象中的值&quot; class=&quot;headerlink&quot; title=&quot;通过给定的选择器来获取对象中的值&quot;&gt;&lt;/a&gt;通过给定的选择器来获取对象中的值&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;需</summary>
      
    
    
    
    
    <category term="js" scheme="https://blog.afacode.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>git常见操作</title>
    <link href="https://blog.afacode.top/2021/08/03/git-issue/"/>
    <id>https://blog.afacode.top/2021/08/03/git-issue/</id>
    <published>2021-08-03T15:06:39.000Z</published>
    <updated>2023-07-13T15:06:15.413Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>git remote 远程仓库关联 更改远程仓库地址</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">远程仓库关联</span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">add </span><span class="string">origin </span><span class="string">git@</span>****.<span class="string">git</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">更</span>改远程仓库地址</span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="built_in">set-url</span> <span class="string">gitee </span><span class="string">git@</span>****.<span class="string">git</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">关</span>联多个远程仓库</span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">add </span>新名字 <span class="string">git@</span>****.<span class="string">git</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span>-v</span><br><span class="line"></span><br><span class="line">远程分支信息</span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">show </span><span class="string">git@</span>****.<span class="string">git</span></span><br><span class="line"><span class="string">git </span><span class="string">ls-remote </span><span class="string">git@</span>****.<span class="string">git</span></span><br></pre></td></tr></table></figure></li><li><p>撤销</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>git 配置</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">config</span> <span class="comment">--list --show-origin</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">config</span> <span class="comment">--list</span></span><br><span class="line"></span><br><span class="line">全局配置用户信息</span><br><span class="line">git <span class="built_in">config</span> <span class="comment">--global user.name ****</span></span><br><span class="line">git <span class="built_in">config</span> <span class="comment">--global user.emial ****@**.com</span></span><br><span class="line"></span><br><span class="line">// 查看特定一项</span><br><span class="line">git <span class="built_in">config</span> user.name</span><br></pre></td></tr></table></figure></li><li><p>git branch 分支</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">新建</span> <span class="string">test</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">切换</span></span><br><span class="line"><span class="attr">git</span> <span class="string">checkout test</span></span><br><span class="line"></span><br><span class="line"><span class="meta">新建并切换到</span> <span class="string">issus</span></span><br><span class="line"><span class="attr">git</span> <span class="string">checkout -b issus</span></span><br><span class="line"></span><br><span class="line"><span class="attr">删除分支</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch -d issue54</span></span><br><span class="line"></span><br><span class="line"><span class="attr">删除远程分支</span></span><br><span class="line"><span class="attr">git</span> <span class="string">push origin --delete issue55</span></span><br><span class="line"></span><br><span class="line"><span class="attr">查看分支</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch </span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch -a</span></span><br><span class="line"><span class="attr">分支的最后一次提交</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch -v </span></span><br><span class="line"></span><br><span class="line"><span class="meta">已经合并了的分支</span> <span class="string">未合并分支</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch --merged</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch --no-merged</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">重命名分支</span> <span class="string">将 test-&gt;dev  在test分支下</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch -m dev</span></span><br></pre></td></tr></table></figure></li><li><p>git merge 合并</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将 issue52 分支合并到 <span class="keyword">test</span></span><br><span class="line">在<span class="keyword">test</span>分支下执行</span><br><span class="line">git <span class="keyword">merge</span> issue52</span><br></pre></td></tr></table></figure></li><li><p>git tag</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> v0.<span class="number">0.1</span> -m 'add <span class="keyword">tag</span> <span class="title">v0</span>.<span class="number">0.1</span>'</span><br><span class="line"></span><br><span class="line">git push origin v0.<span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">删除<span class="keyword">tag</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-d</span> v0.<span class="number">0.1</span></span><br><span class="line">线上</span><br><span class="line">git push origin --delete <span class="keyword">tag</span> <span class="title">v0</span>.<span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">git <span class="keyword">tag</span></span><br></pre></td></tr></table></figure></li><li><p>git fetch 与 git pull 区别</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">fetch</span> 将远程代码 拉去 并不会自动 合并代码</span><br><span class="line"></span><br><span class="line">git pull 是  git <span class="keyword">fetch</span> &amp;&amp; git merge 又可以会合并失败，需要手动处理</span><br></pre></td></tr></table></figure></li><li><p>git强制推送远程<br><code>git push -f origin issue44</code></p></li><li><p>git 清空历史 commit</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git checkout --<span class="keyword">orphan </span>tmp</span><br><span class="line"></span><br><span class="line">git <span class="keyword">add </span>.   或者 git <span class="keyword">add </span>-A</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">"reset init"</span></span><br><span class="line"></span><br><span class="line">git <span class="keyword">branch </span>-D master</span><br><span class="line"></span><br><span class="line">git <span class="keyword">branch </span>-m master</span><br></pre></td></tr></table></figure></li><li><p>清除要忽略文件的提交记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">删除暂存区的文件</span><br><span class="line">本地文件也会删除</span><br><span class="line">git rm filename</span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">'del'</span></span><br><span class="line"></span><br><span class="line">git push origin <span class="keyword">master</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">提交删除记录</span><br><span class="line">git <span class="keyword">add</span> -A</span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">'del'</span></span><br><span class="line"></span><br><span class="line">git push origin <span class="keyword">master</span></span><br></pre></td></tr></table></figure></li><li><p>将push到远程的文件删除，但本地不删除 (如环境配置文件)</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -r <span class="params">--cache</span> <span class="string">.dev</span> <span class="string">//</span> <span class="string">.dev</span> 文件</span><br><span class="line">git comit -m <span class="string">"del origin config"</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li><li><p>代码回滚</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">log</span></span><br><span class="line"></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard commitid</span></span><br></pre></td></tr></table></figure></li><li><p>rebase 与 merge区别</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">效果相同，历史记录不同</span><br><span class="line"><span class="built_in">merge</span>会有三方合并记录</span><br><span class="line">rebase没有， 相当于融合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rebase提供解决冲突的方法：</span><br><span class="line"><span class="number">1.</span>跟<span class="built_in">merge</span>一样解决，然后git <span class="built_in">add</span> 标示已解决冲突</span><br><span class="line"><span class="number">2.</span>git rebase <span class="comment">--continue 标示继续变基，解决完成</span></span><br><span class="line"><span class="number">3.</span>如果不想要这次rabase，可以使用git rebase <span class="comment">--abort 放弃这次变基操作，回到rebase之前</span></span><br></pre></td></tr></table></figure></li><li><p>暂停当前分支工作，去完成其他工作</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">git stash <span class="keyword">save</span> <span class="string">"暂停保存"</span>  </span><br><span class="line">git stash <span class="keyword">save</span> -<span class="keyword">m</span> <span class="string">"暂停保存"</span>  </span><br><span class="line">git stash <span class="keyword">save</span> -<span class="keyword">u</span> <span class="string">"暂停保存"</span>  </span><br><span class="line">git stash <span class="keyword">save</span> -a <span class="string">"暂停保存"</span>  </span><br><span class="line"></span><br><span class="line">-a表示all，是不仅仅把新加入的代码文件放入暂存区，还会把用.gitignore忽略的文件放入暂存区。如果想不影响被忽略的文件，那就要用-<span class="keyword">u</span>，表示untracked files</span><br><span class="line"></span><br><span class="line">git stash <span class="keyword">list</span></span><br><span class="line"></span><br><span class="line">恢复的是最近的一次改动</span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line">git stash pop stash@&#123;id&#125;  <span class="comment">// 0 1 2  </span></span><br><span class="line"></span><br><span class="line">删除</span><br><span class="line">git stash <span class="keyword">drop</span> stash@&#123;id&#125;</span><br><span class="line"></span><br><span class="line">所有清除</span><br><span class="line">git  stash <span class="keyword">clear</span></span><br></pre></td></tr></table></figure></li><li><p>git commit 撤销 commit</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">写的代码仍然保留，撤销<span class="keyword">commit</span>，并且撤销git <span class="keyword">add</span></span><br><span class="line">默认参数</span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--mixed HEAD^ ====== git reset HEAD^</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">仅仅是撤回<span class="keyword">commit</span>操作，代码仍然保留 不撤销git <span class="keyword">add</span></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--soft HEAD^</span></span><br><span class="line"></span><br><span class="line">撤销<span class="keyword">commit</span>，撤销git <span class="keyword">add</span> </span><br><span class="line">注意完成这个操作后，就恢复到了上一次的<span class="keyword">commit</span>状态 自己写的代码没了</span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard HEAD^</span></span><br></pre></td></tr></table></figure></li><li><p>刚才提交完commit,发现commit写的有问题，修改本次commit<br><code>git commit -amend</code></p></li><li><p> 或者刚更改的文件又需要小的修改而不增加多余的commit数量</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br><span class="line">git commit -amend</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;git remote 远程仓库关联 更改远程仓库地址&lt;/p&gt;
&lt;figure class=&quot;highlight dsconfig&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    
    <category term="git" scheme="https://blog.afacode.top/tags/git/"/>
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>解决el-table大数据加载优化</title>
    <link href="https://blog.afacode.top/2021/07/28/el-table-bigdata-virtual/"/>
    <id>https://blog.afacode.top/2021/07/28/el-table-bigdata-virtual/</id>
    <published>2021-07-28T15:46:57.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue3下element-plus解决el-table大数据加载优化"><a href="#vue3下element-plus解决el-table大数据加载优化" class="headerlink" title="vue3下element-plus解决el-table大数据加载优化"></a>vue3下element-plus解决el-table大数据加载优化</h2><blockquote><p>vue 3.0.5</p></blockquote><blockquote><p>element-plus 1.0.2-beta.40</p></blockquote><p><a href="https://v3.cn.vuejs.org/guide/migration/custom-directives.html#_2-x-%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener">vue自定义指令版本差异</a></p><p>使用自定义指令 局部，也可这是全局 loadmore</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;el-table </span><br><span class="line">      height&#x3D;&quot;300&quot; </span><br><span class="line">      :data&#x3D;&quot;filteredData&quot; </span><br><span class="line">      v-loadmore&#x3D;&quot;handelLoadmore&quot;</span><br><span class="line">      :data-size&#x3D;&quot;table?.tableData.length&quot;</span><br><span class="line">      style&#x3D;&quot;width: 100%; border: 2px solid blue&quot; fit border row-key&#x3D;&quot;id&quot;</span><br><span class="line">      stripe :highlight-current-row&#x3D;&quot;true&quot; </span><br><span class="line">      empty-text&#x3D;&quot;暂无数据&quot;&gt;</span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;name&quot; label&#x3D;&quot;姓名&quot;&gt;&lt;&#x2F;el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;age&quot; label&#x3D;&quot;年龄&quot;&gt;&lt;&#x2F;el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;sex&quot; label&#x3D;&quot;性别&quot;&gt;&lt;&#x2F;el-table-column&gt;</span><br><span class="line">    &lt;&#x2F;el-table&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang&#x3D;&quot;ts&quot;&gt;</span><br><span class="line">  import &#123;</span><br><span class="line">    computed,</span><br><span class="line">    defineComponent,</span><br><span class="line">    reactive,</span><br><span class="line">    ref</span><br><span class="line">  &#125; from &#39;vue&#39;</span><br><span class="line">  const selfDirectives &#x3D; &#123;</span><br><span class="line">    loadmore: &#123;</span><br><span class="line">      created(el, binding, vnode, prevVnode) &#123;&#125;, &#x2F;&#x2F; 新增</span><br><span class="line">      beforeMount(el, binding, vnode) &#123;</span><br><span class="line">        console.log(&#39;loadmore beforeMount&#39;)</span><br><span class="line">      &#125;,</span><br><span class="line">      mounted() &#123;&#125;,</span><br><span class="line">      beforeUnmount() &#123;&#125;, &#x2F;&#x2F; 新增</span><br><span class="line">      unmounted() &#123;&#125;,</span><br><span class="line">      &#x2F;&#x2F; componentUpdated → updated</span><br><span class="line">      updated(el, binding, vnode, oldVnode) &#123;</span><br><span class="line">        &#x2F;&#x2F; 设置默认溢出显示数量</span><br><span class="line">          var spillDataNum &#x3D; 30</span><br><span class="line">          &#x2F;&#x2F; 设置隐藏函数</span><br><span class="line">          var timeout &#x3D; false</span><br><span class="line">          let setRowDisableNone &#x3D; function (topNum, showRowNum, binding) &#123;</span><br><span class="line">            if (timeout) &#123;</span><br><span class="line">              clearTimeout(timeout);</span><br><span class="line">            &#125;</span><br><span class="line">            timeout &#x3D; setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">              binding.value.call(</span><br><span class="line">                null,</span><br><span class="line">                topNum,</span><br><span class="line">                topNum + showRowNum + spillDataNum</span><br><span class="line">              )</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">          setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F; 其他UI框架关注 修改 获取 attr data属性</span><br><span class="line">            const dataSize &#x3D; vnode.props[&quot;data-size&quot;]</span><br><span class="line">            const oldDataSize &#x3D; oldVnode.props[&quot;data-size&quot;]</span><br><span class="line">            if (dataSize &#x3D;&#x3D;&#x3D; oldDataSize) return;</span><br><span class="line">            const selectWrap &#x3D; el.querySelector(&quot;.el-table__body-wrapper&quot;);</span><br><span class="line">            const selectTbody &#x3D; selectWrap.querySelector(&quot;table tbody&quot;);</span><br><span class="line">            const selectRow &#x3D; selectWrap.querySelector(&quot;table tr&quot;);</span><br><span class="line">            if (!selectRow) &#123;</span><br><span class="line">              return;</span><br><span class="line">            &#125;</span><br><span class="line">            const rowHeight &#x3D; selectRow.clientHeight</span><br><span class="line">            let showRowNum &#x3D; Math.round(selectWrap.clientHeight &#x2F; rowHeight);</span><br><span class="line">            const createElementTR &#x3D; document.createElement(&quot;tr&quot;);</span><br><span class="line">            let createElementTRHeight &#x3D;</span><br><span class="line">              (dataSize - showRowNum - spillDataNum) * rowHeight;</span><br><span class="line">            createElementTR.setAttribute(</span><br><span class="line">              &quot;style&quot;,</span><br><span class="line">              &#96;height: $&#123;createElementTRHeight&#125;px;&#96;</span><br><span class="line">            );</span><br><span class="line">            selectTbody.append(createElementTR);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 监听滚动后事件</span><br><span class="line">            selectWrap.addEventListener(&quot;scroll&quot;, function () &#123;</span><br><span class="line">              let topPx &#x3D; this.scrollTop - spillDataNum * rowHeight;</span><br><span class="line">              let topNum &#x3D; Math.round(topPx &#x2F; rowHeight);</span><br><span class="line">              let minTopNum &#x3D; dataSize - spillDataNum - showRowNum;</span><br><span class="line">              if (topNum &gt; minTopNum) &#123;</span><br><span class="line">                topNum &#x3D; minTopNum;</span><br><span class="line">              &#125;</span><br><span class="line">              if (topNum &lt; 0) &#123;</span><br><span class="line">                topNum &#x3D; 0;</span><br><span class="line">                topPx &#x3D; 0;</span><br><span class="line">              &#125;</span><br><span class="line">              selectTbody.setAttribute(</span><br><span class="line">                &quot;style&quot;,</span><br><span class="line">                &#96;transform: translateY($&#123;topPx&#125;px)&#96;</span><br><span class="line">              );</span><br><span class="line">              createElementTR.setAttribute(</span><br><span class="line">                &quot;style&quot;,</span><br><span class="line">                &#96;height: $&#123;</span><br><span class="line">                createElementTRHeight - topPx &gt; 0</span><br><span class="line">                  ? createElementTRHeight - topPx</span><br><span class="line">                  : 0</span><br><span class="line">                &#125;px;&#96;</span><br><span class="line">              )</span><br><span class="line">              setRowDisableNone(topNum, showRowNum, binding);</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  export default defineComponent(&#123;</span><br><span class="line">    directives: selfDirectives,</span><br><span class="line">    setup() &#123;</span><br><span class="line">      const table &#x3D; reactive(&#123;</span><br><span class="line">        tableData: [],</span><br><span class="line">        currentStartIndex: 0,</span><br><span class="line">        currentEndIndex: 30,</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      const getList &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">        let cont &#x3D; 0;</span><br><span class="line">        let tableData &#x3D; [];</span><br><span class="line">        while (cont &lt; 100000) &#123;</span><br><span class="line">          cont &#x3D; cont + 1;</span><br><span class="line">          let object &#x3D; &#123;</span><br><span class="line">            name: &quot;阿发&quot; + cont,</span><br><span class="line">            age: cont,</span><br><span class="line">            sex: &#39;男&#39;</span><br><span class="line">          &#125;;</span><br><span class="line">          tableData.push(object);</span><br><span class="line">        &#125;</span><br><span class="line">        setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">          table.tableData &#x3D; tableData</span><br><span class="line">        &#125;, 0)</span><br><span class="line">      &#125;</span><br><span class="line">      getList()</span><br><span class="line"></span><br><span class="line">      const handelLoadmore &#x3D; (currentStartIndex, currentEndIndex) &#x3D;&gt; &#123;</span><br><span class="line">        table.currentStartIndex &#x3D; currentStartIndex;</span><br><span class="line">        table.currentEndIndex &#x3D; currentEndIndex;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      const filteredData &#x3D; computed(() &#x3D;&gt; &#123;</span><br><span class="line">        let list &#x3D; table.tableData.filter((item, index) &#x3D;&gt; &#123;</span><br><span class="line">          if (index &lt; table.currentStartIndex) &#123;</span><br><span class="line">            return false</span><br><span class="line">          &#125; else if (index &gt; table.currentEndIndex) &#123;</span><br><span class="line">            return false</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            return true;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        return list</span><br><span class="line">      &#125;)</span><br><span class="line">      return &#123;</span><br><span class="line">        table,</span><br><span class="line">        filteredData,</span><br><span class="line">        handelLoadmore,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vue3下element-plus解决el-table大数据加载优化&quot;&gt;&lt;a href=&quot;#vue3下element-plus解决el-table大数据加载优化&quot; class=&quot;headerlink&quot; title=&quot;vue3下element-plus解决el-ta</summary>
      
    
    
    
    
    <category term="vue3" scheme="https://blog.afacode.top/tags/vue3/"/>
    
    <category term="element-plus" scheme="https://blog.afacode.top/tags/element-plus/"/>
    
  </entry>
  
  <entry>
    <title>git commit 规范校验</title>
    <link href="https://blog.afacode.top/2021/07/12/git-commit-check/"/>
    <id>https://blog.afacode.top/2021/07/12/git-commit-check/</id>
    <published>2021-07-12T14:22:34.000Z</published>
    <updated>2023-07-13T15:06:15.412Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用yorkie <code>yarn add yorkie -D</code></p></blockquote><p>This is a fork of <code>husky</code> with a few changes<br><a href="https://github.com/yyx990803/yorkie" target="_blank" rel="noopener">https://github.com/yyx990803/yorkie</a> 尤大婶的</p><p>增加钩子 package.json</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "gitHooks": &#123;</span><br><span class="line">    "commit-msg": "node scripts/verifyCommit.js"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加验证规则 scripts/verifyCommit.js<br>下载chalk <code>yarn add chalk@4.0.0 -D</code><br>chalk5.0 后 只支持ESM  <a href="https://github.com/chalk/chalk/releases/tag/v5.0.0" target="_blank" rel="noopener">https://github.com/chalk/chalk/releases/tag/v5.0.0</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> chalk = <span class="built_in">require</span>(<span class="string">'chalk'</span>)</span><br><span class="line"><span class="keyword">const</span> msgPath = process.env.GIT_PARAMS <span class="comment">// 获取 git msg path</span></span><br><span class="line"><span class="keyword">const</span> msg = <span class="built_in">require</span>(<span class="string">'fs'</span>).readFileSync(msgPath, <span class="string">'utf-8'</span>).trim()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> commitRE = <span class="regexp">/^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\(.+\))?(.&#123;1,10&#125;)?: .&#123;1,50&#125;/</span></span><br><span class="line"><span class="keyword">const</span> mergeRe = <span class="regexp">/^(Merge pull request|Merge branch)/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!commitRE.test(msg)) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!mergeRe.test(msg)) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(</span><br><span class="line">      <span class="string">`  <span class="subst">$&#123;chalk.bgRed.white(<span class="string">' ERROR '</span>)&#125;</span> <span class="subst">$&#123;chalk.red(</span></span></span><br><span class="line"><span class="string"><span class="subst">        <span class="string">`无效的commit格式.`</span>,</span></span></span><br><span class="line"><span class="string"><span class="subst">      )&#125;</span>\n\n`</span> +</span><br><span class="line">        chalk.red(</span><br><span class="line">          <span class="string">`  commit需要正确的格式. 例如:\n\n`</span>,</span><br><span class="line">        ) +</span><br><span class="line">        <span class="string">`    <span class="subst">$&#123;chalk.green(<span class="string">`feat(compiler): add 'comments' option`</span>)&#125;</span>\n`</span> +</span><br><span class="line">        <span class="string">`    <span class="subst">$&#123;chalk.green(</span></span></span><br><span class="line"><span class="string"><span class="subst">          <span class="string">`fix(v-model): handle events on blur (close #28)`</span>,</span></span></span><br><span class="line"><span class="string"><span class="subst">        )&#125;</span>\n\n`</span> +</span><br><span class="line">        chalk.red(</span><br><span class="line">          <span class="string">`  查看 https://github.com/vuejs/vue-next/blob/master/.github/commit-convention.md 更多细节.\n`</span>,</span><br><span class="line">        ),</span><br><span class="line">    )</span><br><span class="line">    process.exit(<span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;使用yorkie &lt;code&gt;yarn add yorkie -D&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a fork of &lt;code&gt;husky&lt;/code&gt; with a few changes&lt;br&gt;&lt;a </summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="yorkie" scheme="https://blog.afacode.top/tags/yorkie/"/>
    
  </entry>
  
  <entry>
    <title>vue3-ts支持jest测试</title>
    <link href="https://blog.afacode.top/2021/06/29/vue-jest-base/"/>
    <id>https://blog.afacode.top/2021/06/29/vue-jest-base/</id>
    <published>2021-06-29T15:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.434Z</updated>
    
    <content type="html"><![CDATA[<p>接上一篇文章</p><blockquote><p>需要依赖的库</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">jest  </span><br><span class="line">@types/jest  </span><br><span class="line">babel-jest</span><br><span class="line"></span><br><span class="line"><span class="comment">// 支持ES6</span></span><br><span class="line">@babel/preset-env</span><br><span class="line"></span><br><span class="line">ts支持</span><br><span class="line">ts-jest</span><br><span class="line">@babel/preset-typescript</span><br><span class="line"></span><br><span class="line">vue3支持 vue-jest 版本问题</span><br><span class="line">@vue/vue3-jest  <span class="comment">// 注意对应版本 https://github.com/vuejs/vue-jest</span></span><br><span class="line">@vue/test-utils</span><br><span class="line"></span><br><span class="line">特殊 需要next</span><br><span class="line">@vue/test-utils@next</span><br><span class="line"></span><br><span class="line">我的版本</span><br><span class="line"><span class="string">"@babel/preset-env"</span>: <span class="string">"^7.16.7"</span>,</span><br><span class="line">    <span class="string">"@babel/preset-typescript"</span>: <span class="string">"^7.16.7"</span>,</span><br><span class="line">    <span class="string">"@types/jest"</span>: <span class="string">"^27.4.0"</span>,</span><br><span class="line">    <span class="string">"@vue/test-utils"</span>: <span class="string">"^2.0.0-rc.18"</span>,</span><br><span class="line">    <span class="string">"@vue/vue3-jest"</span>: <span class="string">"^27.0.0-alpha.4"</span>,</span><br><span class="line">    <span class="string">"babel-jest"</span>: <span class="string">"^27.4.5"</span>,</span><br><span class="line">    <span class="string">"jest"</span>: <span class="string">"^27.4.5"</span>,</span><br><span class="line">    <span class="string">"ts-jest"</span>: <span class="string">"^27.1.2"</span>,</span><br></pre></td></tr></table></figure><blockquote><p>script <code>&quot;test:unit&quot;: &quot;jest&quot;</code></p></blockquote><p><a href="https://github.com/vuejs/vue-jest" target="_blank" rel="noopener">https://github.com/vuejs/vue-jest</a></p><table><thead><tr><th>Vue version</th><th>Jest Version</th><th>Package</th></tr></thead><tbody><tr><td>Vue 2</td><td>Jest 26 and below</td><td><code>vue-jest@4</code></td></tr><tr><td>Vue 3</td><td>Jest 26 and below</td><td><code>vue-jest@5</code></td></tr><tr><td>Vue 2</td><td>Jest 27</td><td><code>@vue/vue2-jest</code></td></tr><tr><td>Vue 3</td><td>Jest 27</td><td><code>@vue/vue3-jest</code></td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">babel.config.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  presets: [</span><br><span class="line">    [<span class="string">"@babel/preset-env"</span>, &#123; <span class="string">"targets"</span>: &#123; <span class="string">"node"</span>: <span class="string">"current"</span> &#125; &#125;],</span><br><span class="line">    <span class="string">"@babel/preset-typescript"</span>,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">jest.config.js</span><br><span class="line">对不同文件进行处理</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  transform: &#123;</span><br><span class="line">    <span class="string">'^.+\\.js$'</span>: <span class="string">'babel-jest'</span>,</span><br><span class="line">    <span class="string">'^.+\\.vue$'</span>: <span class="string">'@vue/vue3-jest'</span>,</span><br><span class="line">    <span class="string">"^.+\\.(t|j)sx?$"</span>: <span class="string">"ts-jest"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tsconfig.json</span><br><span class="line">新增 jest</span><br><span class="line"><span class="string">"types"</span>: [<span class="string">"vite/client"</span>, <span class="string">"jest"</span>]</span><br><span class="line"></span><br><span class="line">新增 tests</span><br><span class="line"><span class="string">"include"</span>: [<span class="string">"src/**/*.ts"</span>, <span class="string">"src/**/*.d.ts"</span>, <span class="string">"src/**/*.tsx"</span>, <span class="string">"src/**/*.vue"</span>, <span class="string">"tests"</span>],</span><br></pre></td></tr></table></figure><p>测试 tests/index.spec.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; add &#125; <span class="keyword">from</span> <span class="string">'./index'</span></span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">'../src/views/About/index.vue'</span></span><br><span class="line">test(<span class="string">'1+1=2'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(add()) <span class="comment">// 普通函数</span></span><br><span class="line">  <span class="built_in">console</span>.log(About) <span class="comment">// 普通组件</span></span><br><span class="line">  expect(<span class="number">1</span> + <span class="number">1</span>).toBe(<span class="number">2</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;接上一篇文章&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要依赖的库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="jest" scheme="https://blog.afacode.top/tags/jest/"/>
    
  </entry>
  
  <entry>
    <title>搭建基于vite支持typescript/jsx的vue3.0环境</title>
    <link href="https://blog.afacode.top/2021/06/22/vue3-tsx-vite-demo/"/>
    <id>https://blog.afacode.top/2021/06/22/vue3-tsx-vite-demo/</id>
    <published>2021-06-22T15:22:12.000Z</published>
    <updated>2023-07-13T15:06:15.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础模板"><a href="#基础模板" class="headerlink" title="基础模板"></a>基础模板</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">yarn</span> <span class="string">create vite vite-tsx-demo --template vue-ts</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cd</span> <span class="string">vite-tsx-demo</span></span><br><span class="line"><span class="attr">yarn</span></span><br><span class="line"><span class="attr">yarn</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><h2 id="引入sass"><a href="#引入sass" class="headerlink" title="引入sass"></a>引入sass</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="keyword">add</span><span class="bash"> -D sass</span></span><br></pre></td></tr></table></figure><h2 id="引入jsx-tsx"><a href="#引入jsx-tsx" class="headerlink" title="引入jsx/tsx"></a>引入jsx/tsx</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D @vitejs/plugin-vue-jsx</span><br></pre></td></tr></table></figure><blockquote><p>vite.config.ts</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import &#123; defineConfig &#125; from &#39;vite&#39;</span><br><span class="line">import vue from &#39;@vitejs&#x2F;plugin-vue&#39;</span><br><span class="line">import vueJsx from &#39;@vitejs&#x2F;plugin-vue-jsx&#39; &#x2F;&#x2F; 新增</span><br><span class="line"></span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    vue(),</span><br><span class="line">    vueJsx() &#x2F;&#x2F; 新增</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><p>简单组件 Demo.tsx</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> Demo = <span class="function"><span class="params">()</span> =&gt;</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>123<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>需要修改组件 tree.tsx</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import &#123; defineComponent, PropType, ExtractPropTypes &#125; from &#39;vue&#39;</span><br><span class="line"></span><br><span class="line">interface TreeItem &#123;</span><br><span class="line">  label: string</span><br><span class="line">  children?: TreeData</span><br><span class="line">&#125;</span><br><span class="line">type TreeData &#x3D; Array&lt;TreeItem&gt;</span><br><span class="line"></span><br><span class="line">const treeProps &#x3D; &#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    type: Array as PropType&lt;TreeData&gt;,</span><br><span class="line">    default: () &#x3D;&gt; [],</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type TreeProps &#x3D; ExtractPropTypes&lt;typeof treeProps&gt;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  name: &#39;OTree&#39;,</span><br><span class="line">  props: treeProps,</span><br><span class="line">  setup(props: TreeProps) &#123;</span><br><span class="line">    return () &#x3D;&gt; &#123;</span><br><span class="line">      return &lt;div class&#x3D;&quot;tree&quot;&gt;</span><br><span class="line">        &#123;props.data.map(item &#x3D;&gt; &lt;div&gt;&#123;item.label&#125;&lt;&#x2F;div&gt;)&#125;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础模板&quot;&gt;&lt;a href=&quot;#基础模板&quot; class=&quot;headerlink&quot; title=&quot;基础模板&quot;&gt;&lt;/a&gt;基础模板&lt;/h2&gt;&lt;figure class=&quot;highlight properties&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue3 Composition项目打包上生产后 ctx, refs 无法获取DOM节点</title>
    <link href="https://blog.afacode.top/2021/06/20/vue3-build-ctx-err/"/>
    <id>https://blog.afacode.top/2021/06/20/vue3-build-ctx-err/</id>
    <published>2021-06-20T15:48:12.000Z</published>
    <updated>2023-07-13T15:06:15.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue3-Composition项目打包上生产后-ctx-refs-无法获取DOM节点"><a href="#Vue3-Composition项目打包上生产后-ctx-refs-无法获取DOM节点" class="headerlink" title="Vue3 Composition项目打包上生产后 ctx, refs 无法获取DOM节点"></a>Vue3 Composition项目打包上生产后 ctx, refs 无法获取DOM节点</h2><p>Vue3项目打包上生产后，<code>const { ctx } = getCurrentInstance()</code>无法获取路由/全局挂载对象问题, 导致getCurrentInstance代表上下文，即当前实例。</p><p>ctx相当于Vue2的this, 但是需要特别注意的是ctx代替this只适用于<strong>开发</strong>阶段，如果将项目打包放到生产服务器上运行，就会出错，ctx无法获取路由和全局挂载对象的。此问题的解决方案就是使用<strong>proxy替代ctx</strong></p><p>**</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- <span class="keyword">const</span> &#123; ctx &#125; = getCurrentInstance()</span><br><span class="line">+ <span class="keyword">const</span> &#123; proxy &#125; = getCurrentInstance()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> enterDialog = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 获取dom节点</span></span><br><span class="line">    proxy.$refs.roleForm.validate(<span class="keyword">async</span> (valid) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">    <span class="keyword">let</span> res</span><br><span class="line">        <span class="keyword">if</span> (isEdit.value) &#123;</span><br><span class="line">        res = <span class="keyword">await</span> EditRole(form)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res = <span class="keyword">await</span> addRole(form)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.meta.success) &#123;</span><br><span class="line">        getList()</span><br><span class="line">        dialogFormVisible.value = <span class="literal">false</span></span><br><span class="line">        initForm()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>或者 不使用 getCurrentInstance</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form</span><br><span class="line">:model=<span class="string">"form"</span></span><br><span class="line">:rules=<span class="string">"rules"</span></span><br><span class="line">    label-position=<span class="string">"top"</span></span><br><span class="line">    ref=<span class="string">"menuFormRef"</span></span><br><span class="line">    &gt;</span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> menuFormRef = ref&lt;<span class="literal">null</span> | HTMLInputElement&gt;(<span class="literal">null</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> enterDialog = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> menuForm = unref(menuFormRef)</span><br><span class="line">    <span class="keyword">if</span> (!menuForm) <span class="keyword">return</span></span><br><span class="line">    menuForm.validate(<span class="keyword">async</span> valid =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">            <span class="keyword">let</span> res</span><br><span class="line">            <span class="keyword">if</span> (isEdit.value) &#123;</span><br><span class="line">                res = <span class="keyword">await</span> UpdateMenu(form)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res = <span class="keyword">await</span> addMenu(form)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (res.meta.success) &#123;</span><br><span class="line">                getTree()</span><br><span class="line">                closeDialog()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">    ....</span><br><span class="line">    getCurrentInstance,</span><br><span class="line">    enterDialog,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用 第三方UI组件库时,如element-plus使用 实现如<strong>vue2.0 this.$confirm this.$message</strong>,两种方式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">在使用的页面引入</span><br><span class="line"><span class="keyword">import</span> &#123; ElMessageBox &#125; <span class="keyword">from</span> <span class="string">'element-plus'</span></span><br><span class="line">ElMessageBox.confirm(<span class="string">"此操作将永久删除所有角色下该菜单, 是否继续?"</span>, <span class="string">"提示"</span>, &#123;</span><br><span class="line">confirmButtonText: <span class="string">"确定"</span>,</span><br><span class="line">    cancelButtonText: <span class="string">"取消"</span>,</span><br><span class="line">    type: <span class="string">"warning"</span></span><br><span class="line">&#125;).then(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;&#125;)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="keyword">const</span> &#123; proxy &#125; = getCurrentInstance()</span><br><span class="line">proxy.confirm(<span class="string">"此操作将永久删除所有角色下该菜单, 是否继续?"</span>, <span class="string">"提示"</span>, &#123;</span><br><span class="line">confirmButtonText: <span class="string">"确定"</span>,</span><br><span class="line">    cancelButtonText: <span class="string">"取消"</span>,</span><br><span class="line">    type: <span class="string">"warning"</span></span><br><span class="line">&#125;).then(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vue3-Composition项目打包上生产后-ctx-refs-无法获取DOM节点&quot;&gt;&lt;a href=&quot;#Vue3-Composition项目打包上生产后-ctx-refs-无法获取DOM节点&quot; class=&quot;headerlink&quot; title=&quot;Vue3 C</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>前端typescript 引入dayjs打包是报错线上不可用Cannot call a namespace (&#39;dayjs&#39;)</title>
    <link href="https://blog.afacode.top/2021/06/20/vue3-build-dayjs-ts-err/"/>
    <id>https://blog.afacode.top/2021/06/20/vue3-build-dayjs-ts-err/</id>
    <published>2021-06-20T14:10:12.000Z</published>
    <updated>2023-07-13T15:06:15.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端typescript-引入dayjs打包是报错线上不可用Cannot-call-a-namespace-‘dayjs’"><a href="#前端typescript-引入dayjs打包是报错线上不可用Cannot-call-a-namespace-‘dayjs’" class="headerlink" title="前端typescript 引入dayjs打包是报错线上不可用Cannot call a namespace (‘dayjs’)"></a>前端typescript 引入dayjs打包是报错线上不可用Cannot call a namespace (‘dayjs’)</h2><blockquote><p><code>Cannot call a namespace (&#39;dayjs&#39;)</code></p></blockquote><p>官方示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import * as dayjs from &#39;dayjs&#39;</span><br><span class="line">import * as isLeapYear from &#39;dayjs&#x2F;plugin&#x2F;isLeapYear&#39; &#x2F;&#x2F; import plugin</span><br><span class="line">import &#39;dayjs&#x2F;locale&#x2F;zh-cn&#39; &#x2F;&#x2F; import locale</span><br><span class="line">dayjs.extend(isLeapYear) &#x2F;&#x2F; use plugin</span><br><span class="line">dayjs.locale(&#39;zh-cn&#39;) &#x2F;&#x2F; use locale</span><br><span class="line"></span><br><span class="line">export const formateTime &#x3D; (timestamp) &#x3D;&gt; &#123;</span><br><span class="line">  let t &#x3D; new Date(timestamp)</span><br><span class="line">  return dayjs(t).format(&#39;YYYY-MM-DD&#39;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>线上报错 <code>e.extend error</code></p><p>修改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dayjs <span class="keyword">from</span> <span class="string">'dayjs'</span></span><br><span class="line"><span class="keyword">import</span> isLeapYear <span class="keyword">from</span> <span class="string">'dayjs/plugin/isLeapYear'</span> <span class="comment">// import plugin</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'dayjs/locale/zh-cn'</span> <span class="comment">// import locale</span></span><br><span class="line">dayjs.extend(isLeapYear) <span class="comment">// use plugin</span></span><br><span class="line">dayjs.locale(<span class="string">'zh-cn'</span>) <span class="comment">// use locale</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> formateTime = <span class="function">(<span class="params">timestamp</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> t = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp)</span><br><span class="line">  <span class="keyword">return</span> dayjs(t).format(<span class="string">'YYYY-MM-DD'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前端typescript-引入dayjs打包是报错线上不可用Cannot-call-a-namespace-‘dayjs’&quot;&gt;&lt;a href=&quot;#前端typescript-引入dayjs打包是报错线上不可用Cannot-call-a-namespace-‘dayj</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue3.0 Composition  script-setup</title>
    <link href="https://blog.afacode.top/2021/03/20/vue3-script-setup/"/>
    <id>https://blog.afacode.top/2021/03/20/vue3-script-setup/</id>
    <published>2021-03-20T15:48:12.000Z</published>
    <updated>2023-07-13T15:06:15.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue3-0-Composition-script-setup"><a href="#vue3-0-Composition-script-setup" class="headerlink" title="vue3.0 Composition  script-setup"></a>vue3.0 Composition  script-setup</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 标准组件格式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span></span><br><span class="line">    setup() &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 要给 template 用的数据需要 return 出来才可以</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// script-setup 直接使用</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// ...</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>components</strong>引用 </p><ul><li>需要先导入组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import Header from './Header.vue'</span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">// 需要通过 components 才能启用子组件</span><br><span class="line">    components: &#123;</span><br><span class="line">        Header,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>script-setup</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">'./Header.vue'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>其他的变量、函数，以及 onMounted 等生命周期，还有像 watch 、 computed 等监听/计算功能，都跟原来一样定义就可以了，没有太大的区别</p></blockquote><blockquote><p>props &amp;&amp; emits</p></blockquote><ul><li>标准组件格式</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">content</span> <span class="attr">:name</span>=<span class="string">"name"</span> @<span class="attr">change-name</span>=<span class="string">"changeName"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; defineComponent, ref &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> Content <span class="keyword">from</span> <span class="string">'./Content.vue'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span></span><br><span class="line">    components: &#123;</span><br><span class="line">      Content,</span><br><span class="line">    &#125;,</span><br><span class="line">    setup() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> name = ref&lt;string&gt;(<span class="string">'afacode'</span>)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> changeName = (val: string): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span></span><br><span class="line">        name.value = val</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        name,</span><br><span class="line">        changeName,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span></span><br><span class="line"><span class="actionscript">    props: [<span class="string">'name'</span>],</span></span><br><span class="line"><span class="actionscript">    emits: [<span class="string">'changeName'</span>],</span></span><br><span class="line">    setup(props, &#123; emit &#125;) &#123;</span><br><span class="line"><span class="actionscript">       emit(<span class="string">'changeName'</span>, <span class="string">'阿发'</span>)</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>script-setup</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">父组件</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">Child</span> <span class="attr">:name</span>=<span class="string">"name"</span> @<span class="attr">change-name</span>=<span class="string">"changeName"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  import </span><span class="template-variable">&#123; ref &#125;</span><span class="xml"> from 'vue'</span></span><br><span class="line"><span class="xml">  import Child from './Child.vue'</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  const name = ref<span class="tag">&lt;<span class="name">string</span>&gt;</span>('afacode')</span></span><br><span class="line"><span class="xml">  const changeName = (val: string): void =&gt; </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">  name.value = val</span></span><br><span class="line"><span class="template-variable">  &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">子组件</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span></span><br><span class="line"><span class="xml">import </span><span class="template-variable">&#123; defineEmit &#125;</span><span class="xml"> from 'vue'</span></span><br><span class="line"><span class="xml">// props比较复杂.在后续</span></span><br><span class="line"><span class="xml">defineProps(['name'])</span></span><br><span class="line"><span class="xml">const emit = defineEmit(['chang-name'])</span></span><br><span class="line"><span class="xml">emit('chang-name', '阿发')</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="defineProps-amp-amp-defineEmit"><a href="#defineProps-amp-amp-defineEmit" class="headerlink" title="defineProps &amp;&amp; defineEmit"></a>defineProps &amp;&amp; defineEmit</h3><blockquote><p>defineProps 是一个方法，内部返回一个对象，也就是挂载到这个组件上的所有 props ，它和普通的 props 用法一样，如果不指定为 prop， 则传下来的属性会被放到 attrs 那边去</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineProps &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> props = defineProps([<span class="string">'name'</span>, <span class="string">'userInfo'</span>, <span class="string">'tags'</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(props.name)</span><br></pre></td></tr></table></figure><p>使用 <code>string[]</code> 数组作为入参，把 prop 的名称作为数组的 item 传给 defineProps</p><ul><li>类型检查</li></ul><p>使用 JavaScript 原生构造函数进行类型规定</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">defineProps(&#123;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String,</span></span><br><span class="line">  <span class="attr">userInfo:</span> <span class="string">Object,</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">Array,</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="string">defineProps(&#123;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">String,</span></span><br><span class="line">    <span class="attr">required:</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line">    <span class="attr">default:</span> <span class="string">'afacode'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">userInfo:</span> <span class="string">Object,</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">Array,</span></span><br><span class="line"><span class="string">&#125;)</span></span><br></pre></td></tr></table></figure><p>使用 TypeScript 的类型注解</p><p>和 ref 等 API 的用法一样，defineProps 也是可以使用尖括号 &lt;&gt; 来包裹类型定义，紧跟在 API 后面，另外，由于 defineProps 返回的是一个对象（因为 props 本身是一个对象），所以尖括号里面的类型还要用大括号包裹，通过 <code>key: value</code> 的键值对形式表示，如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">defineProps&lt;&#123;</span><br><span class="line">  name: <span class="built_in">string</span> <span class="comment">// 小写</span></span><br><span class="line">  phoneNumber: <span class="built_in">number</span></span><br><span class="line">  userInfo: object</span><br><span class="line">  tags: <span class="built_in">string</span>[]</span><br><span class="line">&#125;&gt;()</span><br><span class="line"></span><br><span class="line">userInfo 是一个对象，你可以简单的指定为 object，也可以先定义好它对应的类型，再进行指定</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> UserInfo &#123;</span><br><span class="line">  id: <span class="built_in">number</span></span><br><span class="line">  age?: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">defineProps&lt;&#123;</span><br><span class="line">  name: <span class="built_in">string</span> <span class="comment">// 小写</span></span><br><span class="line">  phoneNumber: <span class="built_in">number</span></span><br><span class="line">  userInfo: UserInfo</span><br><span class="line">  tags: <span class="built_in">string</span>[]</span><br><span class="line">&#125;&gt;()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">设置可选参数的默认值，这个暂时不支持，不能跟 TS 一样指定默认值</span><br><span class="line"></span><br><span class="line">如果需要默认指定，并且无需保留响应式的话，我自己测试是可以按照 ES6 的参数默认值方法指定</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; name = <span class="string">'afacode'</span> &#125; = defineProps&lt;&#123;</span><br><span class="line">  name?: <span class="built_in">string</span></span><br><span class="line">  tags: <span class="built_in">string</span>[]</span><br><span class="line">&#125;&gt;()</span><br></pre></td></tr></table></figure><blockquote><p>defineEmit</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 emitconst emit = defineEmit(['chang-name'])// 调用 emitemit('chang-name', '阿发')</span></span><br></pre></td></tr></table></figure><blockquote><p>useContext</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 标准context 组件的执行上下文setup(props, context) &#123;&#125;// script-setupimport &#123; useContext &#125; from 'vue'const ctx = useContext()// 打印 attrsconsole.log(ctx.attrs)</span></span><br></pre></td></tr></table></figure><blockquote><p>expose 对外暴露接口|属性 (一般无用)</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ctx = useContext()</span><br><span class="line">ctx.expose(&#123;  </span><br><span class="line">  someMethod() &#123;    </span><br><span class="line">    console.log(<span class="string">'some HelloWorld'</span>)  </span><br><span class="line">&#125;&#125;)</span><br><span class="line"></span><br><span class="line">================================</span><br><span class="line"></span><br><span class="line">&lt;AMap @toAddr=<span class="string">"getAddr"</span>  <span class="keyword">ref</span>=<span class="string">"hw"</span>/&gt;</span><br><span class="line"><span class="keyword">const</span> hw = <span class="keyword">ref</span>(<span class="literal">null</span>)hw.<span class="keyword">value</span>.someMethod()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vue3-0-Composition-script-setup&quot;&gt;&lt;a href=&quot;#vue3-0-Composition-script-setup&quot; class=&quot;headerlink&quot; title=&quot;vue3.0 Composition  script-set</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>找不到名称“__dirname” ts(2304)</title>
    <link href="https://blog.afacode.top/2021/03/11/not-find-dirname-ts/"/>
    <id>https://blog.afacode.top/2021/03/11/not-find-dirname-ts/</id>
    <published>2021-03-11T13:58:15.000Z</published>
    <updated>2023-07-13T15:06:15.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="找不到名称“-dirname”。ts-2304"><a href="#找不到名称“-dirname”。ts-2304" class="headerlink" title="找不到名称“__dirname”。ts(2304)"></a>找不到名称“__dirname”。ts(2304)</h2><blockquote><p>安装 @type/node</p></blockquote><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add @types/<span class="keyword">node</span> <span class="title">-D</span></span><br><span class="line">或</span><br><span class="line">npm install @types/<span class="keyword">node</span> <span class="title">-D</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;找不到名称“-dirname”。ts-2304&quot;&gt;&lt;a href=&quot;#找不到名称“-dirname”。ts-2304&quot; class=&quot;headerlink&quot; title=&quot;找不到名称“__dirname”。ts(2304)&quot;&gt;&lt;/a&gt;找不到名称“__dirname</summary>
      
    
    
    
    <category term="typescript" scheme="https://blog.afacode.top/categories/typescript/"/>
    
    
    <category term="node" scheme="https://blog.afacode.top/tags/node/"/>
    
    <category term="typescript" scheme="https://blog.afacode.top/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>找不到模块“XXX”或其相应的类型声明。ts(2307)</title>
    <link href="https://blog.afacode.top/2021/02/11/ts2307/"/>
    <id>https://blog.afacode.top/2021/02/11/ts2307/</id>
    <published>2021-02-11T15:58:15.000Z</published>
    <updated>2023-07-13T15:06:15.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="找不到模块“XXX”或其相应的类型声明。ts-2307"><a href="#找不到模块“XXX”或其相应的类型声明。ts-2307" class="headerlink" title="找不到模块“XXX”或其相应的类型声明。ts(2307)"></a>找不到模块“XXX”或其相应的类型声明。ts(2307)</h2><p>在基于vue3+vite+typescript的UI组件库时设置了别名会有typescript提示找不到模块“XXX”或其相应的类型声明ts(2307)</p><blockquote><p>别名设置地方 vite.config.ts</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">'vite'</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">'@vitejs/plugin-vue'</span></span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">'path'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineConfig(&#123;</span><br><span class="line">  plugins: [vue()],</span><br><span class="line">  root: <span class="string">'./'</span>,</span><br><span class="line">  server: &#123;</span><br><span class="line">    port: <span class="number">3001</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    <span class="comment">// 别名</span></span><br><span class="line">    alias: &#123;</span><br><span class="line">      <span class="string">'@'</span>: resolve(__dirname, <span class="string">'src'</span>),</span><br><span class="line">      <span class="string">'sty'</span>: resolve(__dirname, <span class="string">'styles'</span>),</span><br><span class="line">      <span class="string">'pkg'</span>: resolve(__dirname, <span class="string">'packages'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><blockquote><p>tsconfig.json</p></blockquote><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">    .........</span><br><span class="line">    // 增加</span><br><span class="line">    <span class="string">"paths"</span>: &#123;</span><br><span class="line">      <span class="string">"pkg"</span>: [<span class="string">"./packages"</span>], </span><br><span class="line">      <span class="string">"@"</span>: [<span class="string">"./src"</span>], </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 增加</span><br><span class="line">  <span class="string">"include"</span>: [<span class="string">"src/**/*.ts"</span>, <span class="string">"src/**/*.d.ts"</span>, <span class="string">"src/**/*.tsx"</span>, <span class="string">"src/**/*.vue"</span>, <span class="string">"pkg/**/*.ts"</span>, <span class="string">"pkg/**/*.d.ts"</span>, <span class="string">"pkg/**/*.tsx"</span>, <span class="string">"pkg/**/*.vue"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;找不到模块“XXX”或其相应的类型声明。ts-2307&quot;&gt;&lt;a href=&quot;#找不到模块“XXX”或其相应的类型声明。ts-2307&quot; class=&quot;headerlink&quot; title=&quot;找不到模块“XXX”或其相应的类型声明。ts(2307)&quot;&gt;&lt;/a&gt;找不到模</summary>
      
    
    
    
    <category term="typescript" scheme="https://blog.afacode.top/categories/typescript/"/>
    
    
    <category term="node" scheme="https://blog.afacode.top/tags/node/"/>
    
    <category term="typescript" scheme="https://blog.afacode.top/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>小程序wxs new Date() 不能使用</title>
    <link href="https://blog.afacode.top/2021/01/15/miniapp-wxs-datetime-use/"/>
    <id>https://blog.afacode.top/2021/01/15/miniapp-wxs-datetime-use/</id>
    <published>2021-01-15T06:49:46.000Z</published>
    <updated>2023-07-13T15:06:15.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="小程序wxs获取时间方式"><a href="#小程序wxs获取时间方式" class="headerlink" title="小程序wxs获取时间方式"></a>小程序wxs获取时间方式</h2><p>在小程序wxs文件使用 new Date() 获取时间报错</p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>使用 getDate() 代替 new Date()</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attribute">delHtmlTag</span>: <span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = getRegExp(<span class="string">"&lt;[^&gt;]+&gt;"</span>, <span class="string">"g"</span>);</span><br><span class="line">    <span class="keyword">var</span> result = str.replace(reg, <span class="string">''</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attribute">formatDate</span>: <span class="function"><span class="keyword">function</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">date</span> = getDate(time)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">date</span>.getFullYear() + <span class="string">'-'</span> + (<span class="built_in">date</span>.getMonth() + <span class="number">1</span>) + <span class="string">'-'</span> + <span class="built_in">date</span>.getDate()</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;小程序wxs获取时间方式&quot;&gt;&lt;a href=&quot;#小程序wxs获取时间方式&quot; class=&quot;headerlink&quot; title=&quot;小程序wxs获取时间方式&quot;&gt;&lt;/a&gt;小程序wxs获取时间方式&lt;/h2&gt;&lt;p&gt;在小程序wxs文件使用 new Date() 获取时间报错&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>The template root requires exactly one element.eslint-plugin-vue</title>
    <link href="https://blog.afacode.top/2020/11/16/valid-template-root/"/>
    <id>https://blog.afacode.top/2020/11/16/valid-template-root/</id>
    <published>2020-11-16T07:01:17.000Z</published>
    <updated>2023-07-13T15:06:15.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue3-template下多个根节点代码提示警告"><a href="#vue3-template下多个根节点代码提示警告" class="headerlink" title="vue3 template下多个根节点代码提示警告"></a>vue3 template下多个根节点代码提示警告</h2><blockquote><p>The template root requires exactly one element.eslint-plugin-vue</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[vue/valid-<span class="keyword">template</span>-root]</span><br><span class="line">The <span class="keyword">template</span> root <span class="keyword">requires</span> exactly one element.eslint-plugin-vue</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.otimes.com/group1/M00/00/4E/cjez0F-yJjWASijOAAB4ANqhW84021.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>项目根路径新建, 重新打开项目 cmd+p: &gt;reload<br>.vscode/setting.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"vetur.validation.template"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.otimes.com/group1/M00/00/4E/cjez0F-yJjWAbYlgAAAfqH-Af4E411.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vue3-template下多个根节点代码提示警告&quot;&gt;&lt;a href=&quot;#vue3-template下多个根节点代码提示警告&quot; class=&quot;headerlink&quot; title=&quot;vue3 template下多个根节点代码提示警告&quot;&gt;&lt;/a&gt;vue3 templa</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>微信小程序页面跳转携带大量数据</title>
    <link href="https://blog.afacode.top/2020/10/19/miniapp-wepy-navigator/"/>
    <id>https://blog.afacode.top/2020/10/19/miniapp-wepy-navigator/</id>
    <published>2020-10-19T09:22:28.000Z</published>
    <updated>2023-07-13T15:06:15.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>微信小程序页面跳转需要携带大量数据，使用URL数据拼接有长度限制级数据格式转化潜在问题</p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>使用wx.navigateTo(Object object)</p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p>使用的wepy1.7X版本<br>A-&gt;B 携带大量数据过去<br>购物车-&gt;支付确认</p><p>Page A</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">toPay() &#123;</span><br><span class="line">  <span class="keyword">if</span> (this.num &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> <span class="keyword">self</span> = this</span><br><span class="line">  wx.setNavigationBarTitle(&#123;</span><br><span class="line">    title: <span class="string">'确认订单'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  wx.navigateTo(&#123;</span><br><span class="line">    url: `./pay`,</span><br><span class="line">    events: &#123;&#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">      res.eventChannel.emit(<span class="string">'acceptDataFromOpenerPage'</span>, &#123;</span><br><span class="line">        score: <span class="keyword">self</span>.score,</span><br><span class="line">        num: <span class="keyword">self</span>.num,</span><br><span class="line">        <span class="keyword">list</span>: <span class="keyword">self</span>.<span class="keyword">list</span>.filter(val =&gt; val.choosed == <span class="keyword">true</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>Page B</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">async onLoad(e) &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.id) &#123;</span><br><span class="line">    <span class="keyword">this</span>.score = e.redeem</span><br><span class="line">    <span class="keyword">this</span>.num = <span class="number">1</span></span><br><span class="line">    <span class="keyword">this</span>.list.push(&#123;</span><br><span class="line">      buy_number: <span class="number">1</span>,</span><br><span class="line">      skuid: e.id,</span><br><span class="line">      redeem: e.redeem,</span><br><span class="line">      skuname: e.skuname,</span><br><span class="line">      img: e.img</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    let self = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">const</span> eventChannel = <span class="keyword">this</span>.$wxpage.getOpenerEventChannel()</span><br><span class="line">    eventChannel.on(<span class="string">'acceptDataFromOpenerPage'</span>, function (<span class="keyword">data</span>) &#123;</span><br><span class="line">      self.num = <span class="keyword">data</span>.num</span><br><span class="line">      self.score = <span class="keyword">data</span>.score</span><br><span class="line">      self.list = <span class="keyword">data</span>.list</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">this</span>.$apply()</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><blockquote><p>this.getOpenerEventChannel is not a function</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">wepy1.X</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> eventChannel = <span class="keyword">this</span>.$wxpage.getOpenerEventChannel()</span><br><span class="line"></span><br><span class="line">wepy2.X</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> eventChannel = <span class="keyword">this</span>.$wx.getOpenerEventChannel()</span><br><span class="line"></span><br><span class="line">taro 待验证</span><br><span class="line"><span class="keyword">const</span> eventChannel = <span class="keyword">this</span>.$scope.getOpenerEventChannel()</span><br><span class="line"></span><br><span class="line">原生  待验证</span><br><span class="line">试试在json文件中加个<span class="string">"usingComponents"</span>: &#123;&#125; ，我一开始是可以用的，后来把这个去掉就报这个错误，然后我加上就又不报错了。。。</span><br><span class="line"></span><br><span class="line">https:<span class="comment">//developers.weixin.qq.com/community/develop/doc/00088eae3c41782a2d59e8c7056800</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;微信小程序页面跳转需要携带大量数据，使用URL数据拼接有长度限制级数据格式转化潜在问题&lt;/p&gt;
&lt;h2 id=&quot;解决方式&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
    <category term="wechat" scheme="https://blog.afacode.top/tags/wechat/"/>
    
    <category term="wepy" scheme="https://blog.afacode.top/tags/wepy/"/>
    
  </entry>
  
  <entry>
    <title>一行代码支持暗黑模式</title>
    <link href="https://blog.afacode.top/2020/10/08/dark-mode/"/>
    <id>https://blog.afacode.top/2020/10/08/dark-mode/</id>
    <published>2020-10-08T08:33:29.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[theme=<span class="string">'dark-mode'</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">invert</span>(<span class="number">1</span>) <span class="built_in">hue-rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filter 这个 CSS 属性将模糊或颜色偏移等图形效果应用于某个元素。这些滤镜通常用于调整图像、背景和边框的渲染。</p><p>参考：MDN Web 文档</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/filter" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/CSS/filter</a></p><p>对于这种黑暗模式，我们将使用两个滤镜，分别是 invert 和 hue-rotate</p><p>invert 滤镜用来反转应用程序的配色方案。也就是说黑色会变成白色，白色变成黑色，所有颜色以此类推。invert() 函数作为 filter 属性的值将取 0 到 1 之间的数字，或 0％到 100％的百分比。</p><p>hue-rotate 滤镜可以帮助我们处理所有非黑色和白色的颜色。它能将色相旋转 180 度，让我们可以确保应用程序的配色方案不变，而只是减弱其颜色。</p><p>使用这种方法的唯一陷阱是，它还将反转应用程序中的所有图像、图片和视频。因此，我们将向所有图像添加相同的规则以反转效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[theme=<span class="string">'dark-mode'</span>]</span> <span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-tag">picture</span>,</span><br><span class="line"><span class="selector-tag">video</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">invert</span>(<span class="number">1</span>) <span class="built_in">hue-rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且我们要添加一个类，以反转特定标签内的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.invert</span> &#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">invert</span>(<span class="number">1</span>) <span class="built_in">hue-rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="css" scheme="https://blog.afacode.top/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>使用[wxParse](https://github.com/icindy/wxParse)小程序富文本解析img图片遇到的问题</title>
    <link href="https://blog.afacode.top/2020/08/20/wxparse-img-error/"/>
    <id>https://blog.afacode.top/2020/08/20/wxparse-img-error/</id>
    <published>2020-08-20T10:03:19.000Z</published>
    <updated>2023-07-13T15:06:15.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用wxParse小程序富文本解析img图片遇到的问题"><a href="#使用wxParse小程序富文本解析img图片遇到的问题" class="headerlink" title="使用wxParse小程序富文本解析img图片遇到的问题"></a>使用<a href="https://github.com/icindy/wxParse" target="_blank" rel="noopener">wxParse</a>小程序富文本解析img图片遇到的问题</h2><p>小程序需要使用微信公众号的文章,微信文章图片源使用的是data-src,还有其他来源文章图片有可能无src。<br>使用wxParse解析富文本图片无src属性是会报错，微信公众号文章图片地址为data-src,错误定位在</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/image-20200820173729229.png" alt="01" title="">                </div>                <div class="image-caption">01</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/image-20200820173758727.png" alt="02" title="">                </div>                <div class="image-caption">02</div>            </figure><p>只需要修改一行代码</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var imgUrl = <span class="keyword">node</span>.<span class="title">attr</span>.src || <span class="keyword">node</span>.<span class="title">attr</span>['data-src'] || [];</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/image-20200820174254891.png" alt="03" title="">                </div>                <div class="image-caption">03</div>            </figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用wxParse小程序富文本解析img图片遇到的问题&quot;&gt;&lt;a href=&quot;#使用wxParse小程序富文本解析img图片遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;使用wxParse小程序富文本解析img图片遇到的问题&quot;&gt;&lt;/a&gt;使用&lt;a </summary>
      
    
    
    
    
    <category term="小程序" scheme="https://blog.afacode.top/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>工作找不到方向 迷茫的人看下吧</title>
    <link href="https://blog.afacode.top/2020/08/17/%E8%81%8C%E4%B8%9A%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>https://blog.afacode.top/2020/08/17/%E8%81%8C%E4%B8%9A%E7%9A%84%E9%80%89%E6%8B%A9/</id>
    <published>2020-08-17T07:34:42.000Z</published>
    <updated>2023-07-13T15:06:15.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转载工作找不到方向-迷茫的人看下吧"><a href="#转载工作找不到方向-迷茫的人看下吧" class="headerlink" title="转载工作找不到方向 迷茫的人看下吧"></a><a href="https://zhuanlan.zhihu.com/p/34309041" target="_blank" rel="noopener">转载</a>工作找不到方向 迷茫的人看下吧</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">职业的选择，总的来说，无非就是销售、市场、客服、物流、行政、人事、财务、技术、管理几个大类，有个有趣的现象就是，<span class="number">500</span>强的CEO当中最多的是销售出身，第二多的人是财务出身，这两者加起来大概超过<span class="number">95</span>%。</span><br><span class="line"></span><br><span class="line">现代IT行业也有技术出身成为老板的，但实际上，后来他们还是从事了很多销售和市场的工作，并且表现出色，公司才获得了成功，完全靠技术能力成为公司老板的，几乎没有。</span><br><span class="line"></span><br><span class="line">这是有原因的，因为销售就是一门跟人打交道的学问，而管理其实也是跟人打交道的学问，这两者之中有很多相通的东西，他们的共同目标就是“让别人去做某件特定的事情。”</span><br><span class="line"></span><br><span class="line">而财务则是从数字的层面了解生意的本质，从宏观上看待生意的本质，对于一个生意是否挣钱，是否可以正常运作有着最深刻的认识。</span><br><span class="line"></span><br><span class="line">公司小的时候是销售主导公司，而公司大的时候是财务主导公司，销售的局限性在于只看人情不看数字，财务的局限性在于只看数字不看人情。</span><br><span class="line"></span><br><span class="line">公司初期，运营成本低，有订单就活得下去，跟客户也没有什么谈判的条件，别人肯给生意做已经谢天谢地了，这个时候订单压倒一切，客户的要求压倒一切，所以当然要顾人情。</span><br><span class="line"></span><br><span class="line">公司大了以后，一切都要规范化，免得因为不规范引起一些不必要的风险，同时运营成本也变高，必须提高利润率，把有限的资金放到最有产出的地方。</span><br><span class="line"></span><br><span class="line">对于上市公司来说，股东才不管你客户是不是最近出国，最近是不是那个省又在搞严打，到了时候就要把业绩拿出来，拿不出来就抛股票，这个时候就是数字压倒一切。</span><br><span class="line"></span><br><span class="line">前两天听到有人说一句话觉得很有道理，开始的时候我们想“能做什么？”，等到公司做大了有规模了，我们想“不能做什么。”</span><br><span class="line"></span><br><span class="line">很多人在工作中觉得为什么领导这么保守，这也不行那也不行，错过很多机会。</span><br><span class="line"></span><br><span class="line">很多时候是因为，你还年轻，你想的是“能做什么”，而作为公司领导要考虑的方面很多，他比较关心“不能做什么”。</span><br><span class="line"></span><br><span class="line">在这里我并非鼓吹大家都去做销售或者财务，究竟选择什么样的职业，和你究竟要选择什么样的人生有关系，有些人就喜欢下班按时回家，看看书听听音乐，那也挺好，但就不适合找个销售的工作了，否则会是折磨自己。</span><br><span class="line"></span><br><span class="line">有些人就喜欢出风头，喜欢成为一群人的中心，如果选择做财务工作，大概也干不久，因为一般老板不喜欢财务太积极，也不喜欢财务话太多。</span><br><span class="line"></span><br><span class="line">先想好自己要过怎样的人生，再决定要找什么样的职业。</span><br><span class="line"></span><br><span class="line">有很多的不快乐，其实是源自不满足，而不满足，很多时候是源自于心不定，而心不定则是因为不清楚究竟自己要什么，不清楚要什么的结果就是什么都想要，结果什么都没得到。</span><br><span class="line"></span><br><span class="line">我想，我们还是因为生活而工作，不是因为工作而生活，生活是最要紧的，工作只是生活中的一部分。</span><br><span class="line"></span><br><span class="line">我总是觉得生活的各个方方面面都是相互影响的，如果生活本身一团乱麻，工作也不会顺利。</span><br><span class="line"></span><br><span class="line">所以要有娱乐、要有社交、要锻炼身体，要有和睦的家庭……最要紧的，要开心，我的两个销售找我聊天，一肚子苦水，我问他们，<span class="number">2</span>年以前，你什么都没有，工资不高，没有客户关系，没有业绩，处于被开的边缘，现在的你比那时条件好了很多，为什么现在却更加不开心了？如果你做得越好越不开心，那你为什么还要工作？</span><br><span class="line"></span><br><span class="line">首先的首先，人还是要让自己高兴起来，让自己心态好起来，这种发自内心的改变会让你更有耐心，更有信心，更有气质，更能包容……否则，看看镜子里的你，你满意么？</span><br><span class="line"></span><br><span class="line">有人会说，你说得容易，我每天加班，不加班老板就会把我炒掉，每天累得要死，哪有时间娱乐、社交、锻炼？</span><br><span class="line"></span><br><span class="line">那是人们把目标设定太高的缘故，如果你还在动不动就会被老板炒掉的边缘，那么你当然不能设立太高的目标，难道你还想每天去打高尔夫？</span><br><span class="line"></span><br><span class="line">你没时间去健身房锻炼身体，但是上下班的时候多走几步可以吧，有楼梯的时候走走楼梯不走电梯可以吧？</span><br><span class="line"></span><br><span class="line">办公的间隙扭扭脖子拉拉肩膀做做俯卧撑可以吧？谁规定锻炼就一定要拿出每天<span class="number">2</span>个小时去健身房？</span><br><span class="line"></span><br><span class="line">你没时间社交，每月参加郊游一次可以吧，周末去参加个什么音乐班，绘画班之类的可以吧，去尝试认识一些同行，和他们找机会交流交流可以吧？</span><br><span class="line"></span><br><span class="line">开始的时候总是有些难的，但迈出这一步就会向良性循环的方向发展。</span><br><span class="line"></span><br><span class="line">而每天工作得很苦闷，剩下的时间用来咀嚼苦闷，只会陷入恶性循环，让生活更加糟糕。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我有个有趣的观察，外企公司多的是<span class="number">25</span><span class="number">-35</span>岁的白领，<span class="number">40</span>岁以上的员工很少，二三十岁的外企员工是意气风发的，但外企公司<span class="number">40</span>岁附近的经理人是很尴尬的。</span><br><span class="line"></span><br><span class="line">我见过的<span class="number">40</span>岁附近的外企经理人大多在一直跳槽，最后大多跳到民企，比方说，唐 骏。</span><br><span class="line"></span><br><span class="line">外企员工的成功很大程度上是公司的成功，并非个人的成功，西门子的确比国美大，但并不代表西门子中国经理比国美的老板强，甚至可以说差得很远。</span><br><span class="line"></span><br><span class="line">而进外企的人往往并不能很早理解这一点，把自己的成功<span class="number">90</span>％归功于自己的能力，实际上，外企公司随便换个中国区总经理并不会给业绩带来什么了不起的影响。</span><br><span class="line"></span><br><span class="line">好了问题来了，当这些经理人<span class="number">40</span>多岁了，他们的薪资要求变得很高，而他们的才能其实又不是那么出众，作为外企公司的老板，你会怎么选择？有的是只要不高薪水的，要出位的精明强干精力充沛的年轻人有的是，为什么还要用你？</span><br><span class="line"></span><br><span class="line">从上面这个例子，其实可以看到我们的工作轨迹，二三十岁的时候，生活的压力还比较小，身体还比较好，上面的父母身体还好，下面又没有孩子，不用还房贷，也没有孩子要上大学，当个外企小白领还是很光鲜的，挣得不多也够花了。</span><br><span class="line"></span><br><span class="line">但是人终归要结婚生子，终归会老，到了<span class="number">40</span>岁，父母老了，要看病要吃药，要有人看护，自己要还房贷，要过基本体面的生活，要养小孩……那个时候需要挣多少钱才够花才重要。</span><br><span class="line"></span><br><span class="line">所以，看待工作，眼光要放远一点，一时的谁高谁低并不能说明什么。</span><br><span class="line"></span><br><span class="line">从这个角度上来说，我不太赞成过于关注第一份工作的薪水，更没有必要攀比第一份工作的薪水，这在刚刚出校园的学生中间是很常见的。</span><br><span class="line"></span><br><span class="line">正常人大概要工作 <span class="number">35</span>年左右，这好比是一场马拉松比赛，和真正的马拉松比赛不同的是，这次比赛没有职业选手，每个人都只有一次机会。</span><br><span class="line"></span><br><span class="line">要知道，有很多人甚至坚持不到终点，大多数人最后是走到终点的，只有少数人是跑过终点的，因此在刚开始的时候，去抢领先的位置并没有太大的意义。</span><br><span class="line"></span><br><span class="line">刚进社会的时候如果进<span class="number">500</span>强公司，大概能拿到<span class="number">3</span>k <span class="number">-6</span>k/月的工资，有些特别技术的人才可能可以到<span class="number">8</span>k/月，可问题是，<span class="number">5</span>年以后拿多少？估计<span class="number">5</span>k<span class="number">-10</span>k了不起了。</span><br><span class="line"></span><br><span class="line">起点虽然高，但增幅有限，而且，后面的年轻人追赶的压力越来越大。</span><br><span class="line"></span><br><span class="line">我前两天问我的一个销售，你会的这些东西一个新人<span class="number">2</span>年就都学会了，但新人所要求的薪水却只是你的一半，到时候，你怎么办？</span><br><span class="line"></span><br><span class="line">职业生涯就像一场体育比赛，有初赛、复赛、决赛。</span><br><span class="line"></span><br><span class="line">初赛的时候大家都刚刚进社会，大多数都是实力一般的人，这时候努力一点认真一点很快就能让人脱颖而出，于是有的人二十多岁做了经理，有的人迟些也终于赢得了初赛，三十多岁成了经理。</span><br><span class="line"></span><br><span class="line">然后是复赛，能参加复赛的都是赢得初赛的，每个人都有些能耐，在聪明才智上都不成问题，这个时候再想要胜出就不那么容易了，单靠一点点努力和认真还不够，要有很强的坚忍精神，要懂得靠团队的力量，要懂得收服人心，要有长远的眼光……</span><br><span class="line"></span><br><span class="line">看上去赢得复赛并不容易，但，还不是那么难。</span><br><span class="line"></span><br><span class="line">因为这个世界的规律就是给人一点成功的同时让人骄傲自满，刚刚赢得初赛的人往往不知道自己赢得的仅仅是初赛，有了一点小小的成绩大多数人都会骄傲自满起来，认为自己已经懂得了全部，不需要再努力再学习了，他们会认为之所以不能再进一步已经不是自己的原因了。</span><br><span class="line"></span><br><span class="line">虽然他们仍然不好对付，但是他们没有耐性，没有容人的度量，更没有清晰长远的目光。</span><br><span class="line"></span><br><span class="line">就像一只愤怒的斗牛，虽然猛烈，最终是会败的，而赢得复赛的人则象斗牛士一样，不急不躁，跟随着自己的节拍，慢慢耗尽对手的耐心和体力。</span><br><span class="line"></span><br><span class="line">赢得了复赛以后，大约已经是一位很了不起的职业经理人了，当上了中小公司的总经理，大公司的副总经理，主管着每年几千万乃至几亿的生意。</span><br><span class="line"></span><br><span class="line">最终的决赛来了，说实话我自己都还没有赢得决赛，因此对于决赛的决胜因素也只能凭自己的猜测而已，这个时候的输赢或许就像武侠小说里写得那样，大家都是高手，只能等待对方犯错了，要想轻易击败对手是不可能的，除了使上浑身解数，还需要一点运气和时间。</span><br><span class="line"></span><br><span class="line">世界的规律依然发挥着作用，赢得复赛的人已经不只是骄傲自满了，他们往往刚愎自用，听不进去别人的话，有些人的脾气变得暴躁，心情变得浮躁，身体变得糟糕，他们最大的敌人就是他们自己，在决赛中要做的只是不被自己击败，等着别人被自己击败。</span><br><span class="line"></span><br><span class="line">这和体育比赛是一样的，最后高手之间的比赛，就看谁失误少谁就赢得了决赛。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">什么是好工作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 当初微软有个唐 骏，很多大学里的年轻人觉得这才是他们向往的职业生涯，我在清华bbs里发的帖子被这些学子们所不屑，那个时候学生们只想出国或者去外企，不过如今看来，我还是对的，唐 骏去了盛大，陈天桥创立的盛大，一家民营公司。一个高学历的海归在<span class="number">500</span>强的公司里拿高薪水，这大约是很多年轻人的梦想，问题是，每年毕业的大学生都在做这个梦，好的职位却只有<span class="number">500</span>个。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 人都是要面子的，也是喜欢攀比的，即使在工作上也喜欢攀比，不管那是不是自己想要的。大家认为外企公司很好，可是好在哪里呢？好吧，他们在比较好的写字楼，这是你想要的么？他们出差住比较好的酒店，这是你想要的么？别人会羡慕一份外企公司的工作，这是你想要的么？那一切都是给别人看的，你干嘛要活得那么辛苦给别人看？另一方面，他们薪水福利一般，并没有特别了不起，他们的晋升机会比较少，很难做到很高阶的主管，他们虽然厌恶常常加班，却不敢不加班，因为“你不干有得是人干”，大部分情况下会找个台湾人香港人新加坡人来管你，而这些人又往往有些莫名其妙的优越感。你想清楚了么？<span class="number">500</span>强一定好么？找工作究竟是考虑你想要什么，还是考虑别人想看什么？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 我的大学同学们大多数都到美国了，甚至毕业这么多年了，还有人最近到国外去了。出国真的有那么好么？我的大学同学们，大多数还是在博士、博士后、访问学者地挣扎着，至今只有一个正经在一个美国大学里拿到个正式的教职。国内的教授很难当么？我有几个表亲也去了国外了，他们的父母独自在国内，没有人照顾，有好几次人在家里昏倒都没人知道，出国，真的这么光彩么？就像有人说的“很多事情就像看A片，看的人觉得很爽，做的人未必。”</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 人总想找到那个最好的，可是，什么是最好的？你觉得是最好的那个，是因为你的确了解，还是因为别人说他是最好的？即使他对于别人是最好的，对于你也一定是最好的么？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 对于自己想要什么，自己要最清楚，别人的意见并不是那么重要。很多人总是常常被别人的意见所影响，亲戚的意见，朋友的意见，同事的意见……问题是，你究竟是要过谁的一生？人的一生不是父母一生的续集，也不是儿女一生的前传，更不是朋友一生的外篇，只有你自己对自己的一生负责，别人无法也负不起这个责任。</span><br><span class="line"></span><br><span class="line">自己做的决定，至少到最后，自己没什么可后悔。对于大多数正常智力的人来说，所做的决定没有大的对错，无论怎么样的选择，都是可以尝试的。</span><br><span class="line"></span><br><span class="line">比如你没有考自己上的那个学校，没有入现在这个行业，没有成功到自己喜欢的公司，这辈子就过不下去了？就会很失败？</span><br><span class="line"></span><br><span class="line">不见得。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　我想，好工作，应该是适合你的工作，具体点说，应该是能给你带来你想要的东西的工作，你或许应该以此来衡量你的工作究竟好不好，而不是拿公司的大小，规模，外企还是国企，是不是有名，是不是上市公司来衡量。</span><br><span class="line"></span><br><span class="line">小公司，未必不是好公司，赚钱多的工作，也未必是好工作。</span><br><span class="line"></span><br><span class="line">你还是要先弄清楚你想要什么，如果你不清楚你想要什么，你就永远也不会找到好工作，因为你永远只看到你得不到的东西，你得到的，都是你不想要的。</span><br><span class="line"></span><br><span class="line">　　可能，最好的，已经在你的身边，只是，你还没有学会珍惜。</span><br><span class="line"></span><br><span class="line">人们总是盯着得不到的东西，而忽视了那些已经得到的东西。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">你工作快乐么？你的工作好么？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">有没有觉得干了一段时间以后工作很不开心？</span><br><span class="line"></span><br><span class="line">有没有觉得自己入错了行？</span><br><span class="line"></span><br><span class="line">有没有觉得自己没有得到应有的待遇？</span><br><span class="line"></span><br><span class="line">有没有觉得工作像一团乱麻每天上班都是一种痛苦？</span><br><span class="line"></span><br><span class="line">有没有很想换个工作？</span><br><span class="line"></span><br><span class="line">有没有觉得其实现在的公司并没有当初想象得那么好？</span><br><span class="line"></span><br><span class="line">有没有觉得这份工作是当初因为生存压力而找的，实在不适合自己？</span><br><span class="line"></span><br><span class="line">你从工作中得到你想要得到的了么？</span><br><span class="line"></span><br><span class="line">你每天开心么？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 天涯上愤怒的人很多，你有没有想过，你为什么不快乐？</span><br><span class="line"></span><br><span class="line">你为什么愤怒？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 其实，你不快乐的根源，是因为你不知道要什么！你不知道要什么，所以你不知道去追求什么，你不知道追求什么，所以你什么也得不到。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　 我总觉得，职业生涯首先要关注的是自己，自己想要什么？</span><br><span class="line"></span><br><span class="line">大多数人大概没想过这个问题，唯一的想法只是——我想要一份工作，我想要一份不错的薪水，我知道所有人对于薪水的渴望，可是，你想每隔几年重来一次找工作的过程么？</span><br><span class="line"></span><br><span class="line">你想每年都在这种对于工作和薪水的焦急不安中度过么？</span><br><span class="line"></span><br><span class="line">不想的话，就好好想清楚。</span><br><span class="line"></span><br><span class="line">饮鸩止渴，不能因为口渴就拼命喝毒药。</span><br><span class="line"></span><br><span class="line">越是焦急，越是觉得自己需要一份工作，越饥不择食，越想不清楚，越容易失败，你的经历越来越差，下一份工作的人看着你的简历就皱眉头。</span><br><span class="line"></span><br><span class="line">于是你越喝越渴，越渴越喝，陷入恶性循环。</span><br><span class="line"></span><br><span class="line">最终只能哀叹世事不公或者生不逢时，只能到天涯上来发泄一把，在失败者的共鸣当中寻求一点心理平衡罢了。</span><br><span class="line"></span><br><span class="line">大多数人都有生存压力，我也是，有生存压力就会有很多焦虑，积极的人会从焦虑中得到动力，而消极的人则会因为焦虑而迷失方向。</span><br><span class="line"></span><br><span class="line">所有人都必须在压力下做出选择，这就是世道，你喜欢也罢不喜欢也罢。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　　一般我们处理的事情分为重要的事情和紧急的事情，如果不做重要的事情就会常常去做紧急的事情。</span><br><span class="line"></span><br><span class="line">比如锻炼身体保持健康是重要的事情，而看病则是紧急的事情。</span><br><span class="line"></span><br><span class="line">如果不锻炼身体保持健康，就会常常为了病痛烦恼。</span><br><span class="line"></span><br><span class="line">又比如防火是重要的事情，而救火是紧急的事情，如果不注意防火，就要常常救火。</span><br><span class="line"></span><br><span class="line">找工作也是如此，想好自己究竟要什么是重要的事情，找工作是紧急的事情，如果不想好，就会常常要找工作。</span><br><span class="line"></span><br><span class="line">往往紧急的事情给人的压力比较大，迫使人们去赶紧做，相对来说重要的事情反而没有那么大的压力，大多数人做事情都是以压力为导向的，压力之下，总觉得非要先做紧急的 事情，结果就是永远到处救火，永远没有停歇的时候。（很多人的工作也像是救火队一样忙碌痛苦，也是因为工作中没有做好重要的事情。）</span><br><span class="line"></span><br><span class="line">那些说自己活在水深火热为了生存顾不上那么多的朋友，今天找工作困难是当初你们没有做重要的事情，是结果不是原因。</span><br><span class="line"></span><br><span class="line">如果今天你们还是因为急于要找一份工作而不去思考，那么或许将来要继续承受痛苦找工作的结果。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　我始终觉得我要说的话题，沉重了点，需要很多思考，远比唐笑打武警的话题来的枯燥乏味，但是，天下没有轻松的成功，成功，要付代价。</span><br><span class="line"></span><br><span class="line">请先忘记一切的生存压力，想想这辈子你最想要的是什么？所以，最要紧的事情，先想好自己想要什么。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我发现中国人的励志和国外的励志存在非常大的不同，中国的励志比较鼓励人立下大志愿，卧薪尝胆，有朝一日成富成贵。</span><br><span class="line"></span><br><span class="line">而国外的励志比较鼓励人勇敢面对现实生活，面对普通人的困境，虽然结果也是成富成贵，但起点不一样，相对来说，我觉得后者在操作上更现实，而前者则需要用<span class="number">9999</span>个失败者来堆砌一个成功者的故事。</span><br><span class="line"></span><br><span class="line">　　 我们都是普通人，普通人的意思就是，概率这件事是很准的。</span><br><span class="line"></span><br><span class="line">因此，我们不会买彩票中<span class="number">500</span>万，我们不会成为比尔盖茨或者李嘉诚，我们不会坐飞机掉下来，我们当中很少的人会创业成功，我们之中有<span class="number">30</span>％的人会离婚，我们之中大部分人会活过<span class="number">65</span>岁…… 　　</span><br><span class="line"></span><br><span class="line">所以请你在想自己要什么的时候，要得“现实”一点，你说我想要做李嘉诚，抱歉，我帮不上你。</span><br><span class="line"></span><br><span class="line">成为比尔盖茨或者李嘉诚这种人，是靠命的，看我写的这篇文章绝对不会让你成为他们，即使你成为了他们，也绝对不是我这篇文章的功劳。</span><br><span class="line"></span><br><span class="line">“王侯将相宁有种乎”但真正当皇帝的只有一个人，王侯将相，人也不多。</span><br><span class="line"></span><br><span class="line">目标定得高些对于喜欢挑战的人来说有好处，但对于大多数普通人来说，反而比较容易灰心沮丧，很容易就放弃了。</span><br><span class="line"></span><br><span class="line">回过头来说，李嘉诚比你有钱大致<span class="number">50</span>万倍，他比你更快乐么？或许。</span><br><span class="line"></span><br><span class="line">有没有比你快乐<span class="number">50</span>万倍，一定没有。</span><br><span class="line"></span><br><span class="line">他比你最多也就快乐一两倍，甚至有可能还不如你快乐。</span><br><span class="line"></span><br><span class="line">寻找自己想要的东西不是和别人比赛，比谁要得更多更高，比谁的目标更远大。虽然成为李嘉诚这个目标很宏大，但你并不见得会从这个目标以及追求目标的过程当中获得快乐，而且基本上你也做不到。</span><br><span class="line"></span><br><span class="line">你必须听听你内心的声音，寻找真正能够使你获得快乐的东西，那才是你想要的东西。</span><br><span class="line"></span><br><span class="line">你想要的东西，或者我们把它称之为目标，目标其实并没有高低之分，你不需要因为自己的目标没有别人远大而不好意思，达到自己的目标其实就是成功，成功有大有小，快乐却是一样的。</span><br><span class="line"></span><br><span class="line">我们追逐成功，其实追逐的是成功带来的快乐，而非成功本身。</span><br><span class="line"></span><br><span class="line">职业生涯的道路上，我们常常会被攀比的心态蒙住眼睛，忘记了追求的究竟是什么，忘记了是什么能使我们更快乐。</span><br><span class="line"></span><br><span class="line">社会上一夜暴富的新闻很多，这些消息，总会在我们的心里面掀起很多涟漪，涟漪多了就变成惊涛骇浪，心里的惊涛骇浪除了打翻承载你目标的小船，并不会使得你也一夜暴富。</span><br><span class="line"></span><br><span class="line">“只见贼吃肉，不见贼挨揍。”我们这些普通人既没有当贼的勇气，又缺乏当贼的狠辣绝决，虽然羡慕吃肉，却更害怕挨揍，偶尔看到几个没挨揍的贼就按奈不住，或者心思活动，或者大感不公，真要叫去做贼，却也不敢。</span><br><span class="line"></span><br><span class="line">我还是过普通人的日子，要普通人的快乐，至少，晚上睡得着觉。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">首先要说明，工作是一件需要理智的事情，所以不要在工作上耍个性，天涯上或许会有人觉得你很有个性而叫好，煤气公司电话公司不会因为觉得你很有个性而免了你的帐单。</span><br><span class="line"></span><br><span class="line">当你很帅地炒掉了你的老板，当你很酷地挖苦了一番招聘的HR，账单还是要照付，只是你赚钱的时间更少了，除了你自己，没人受损失。</span><br><span class="line"></span><br><span class="line">我并不反对跳槽，但跳槽决不是解决问题的办法，而且频繁跳槽的后果是让人觉得没有忠诚度可言，而且不能安心工作。现在很多人从网上找工作，很多找工作的网站常常给人出些馊主意，要知道他们是盈利性企业，当然要从自身盈利的角度来考虑，大家越是频繁跳槽频繁找工作他们越是生意兴隆，所以鼓动人们跳槽是他们的工作。</span><br><span class="line"></span><br><span class="line">所以他们会常常告诉你，你拿的薪水少了，你享受的福利待遇差了，又是“薪情快报”又是“赞叹自由奔放的灵魂”。</span><br><span class="line"></span><br><span class="line">至于是否会因此让你不能安心，你跳了槽是否解决问题，是否更加开心，那个，他们管不着。</span><br><span class="line"></span><br><span class="line">要跳槽肯定是有问题，一般来说问题发生了，躲是躲不开的，很多人跳槽是因为这样或者那样的不开心，如果这种不开心，在现在这个公司不能解决，那么在下一个公司多半也解决不掉。</span><br><span class="line"></span><br><span class="line">你必须相信，<span class="number">90</span>%的情况下，你所在的公司并没有那么烂，你认为不错的公司也没有那么好。</span><br><span class="line"></span><br><span class="line">就像围城里说的那样: “城里的人拼命想冲出来，而城外的人拼命想冲进去。”</span><br><span class="line"></span><br><span class="line">每个公司都有每个公司的问题，没有问题的公司是不存在的。</span><br><span class="line"></span><br><span class="line">换个环境你都不知道会碰到什么问题，与其如此，不如就在当下把问题解决掉。</span><br><span class="line"></span><br><span class="line">很多问题当你真的想要去解决的时候，或许并没有那么难。有的时候你觉得问题无法解决，事实上，那只是“你觉得”。</span><br><span class="line"></span><br><span class="line">人生的曲线应该是曲折向上的，偶尔会遇到低谷但大趋势总归是曲折向上的，而不是象脉冲波一样每每回到起点，我见过不少面试者，<span class="number">30</span>多岁了，四五份工作经历，每次多则<span class="number">3</span>年，少则<span class="number">1</span>年，<span class="number">30</span>多岁的时候回到起点从一个初级职位开始干起，拿基本初级的薪水，和<span class="number">20</span>多岁的年轻人一起竞争，不觉得有点辛苦么？这种日子好过么？</span><br><span class="line"></span><br><span class="line">资本靠的就是积累，这种积累包括人际关系，经验，人脉，口碑……如果常常更换行业，代表几年的积累付之东流，一切从头开始，如果换了两次行业，<span class="number">35</span>岁的时候大概只有<span class="number">5</span>年以下的积累，而一个没有换过行业的人至少有了<span class="number">10</span>年的积累，谁会占优势？工作到<span class="number">2</span><span class="number">-3</span>年的时候，很多人觉得工作不顺利，好像到了一个瓶颈，心情烦闷，就想辞职，乃至换一个行业，觉得这样所有一切烦恼都可以抛开，会好很多。</span><br><span class="line"></span><br><span class="line">其实这样做只是让你从头开始，到了时候还是会发生和原来行业一样的困难，熬过去就向上跨了一大步，要知道每个人都会经历这个过程，每个人的职业生涯中都会碰到几个瓶颈，你熬过去了而别人没有熬过去你就领先了。</span><br><span class="line"></span><br><span class="line">跑长跑的人会知道，开始的时候很轻松，但是很快会有第一次的难受，但过了这一段又能跑很长一段，接下来会碰到第二次的难受，坚持过了以后又能跑一段，如此往复，难受一次比一次厉害，直到坚持不下去了。大多数人第一次就坚持不了了，一些人能坚持到第二次，第三次虽然大家都坚持不住了，可是跑到这里的人也没几个了，这点资本足够你安稳活这一辈子了。</span><br><span class="line"></span><br><span class="line">一份工作到两三年的时候，大部分人都会变成熟手，这个时候往往会陷入不断的重复，有很多人会觉得厌倦，有些人会觉得自己已经搞懂了一切，从而懒得去寻求进步了。很多时候的跳槽是因为觉得失去兴趣了，觉得自己已经完成比赛了。</span><br><span class="line"></span><br><span class="line">其实这个时候比赛才刚刚开始，工作两三年的人，无论是客户关系，人脉，手下，和领导的关系，在业内的名气……还都是远远不够的，但稍有成绩的人总是会自我感觉良好的，每个人都觉得自己跟客户关系铁得要命，觉得自己在业界的口碑好得很。其实可以肯定地说，一定不是，这个时候，还是要拿出前两年的干劲来，稳扎稳打，积累才刚刚开始。</span><br><span class="line"></span><br><span class="line">你足够了解你的客户吗？你知道他最大的烦恼是什么吗？</span><br><span class="line"></span><br><span class="line">你足够了解你的老板么？</span><br><span class="line"></span><br><span class="line">你知道他最大的烦恼是什么吗？</span><br><span class="line"></span><br><span class="line">你足够了解你的手下么？</span><br><span class="line"></span><br><span class="line">你知道他最大的烦恼是什么吗？</span><br><span class="line"></span><br><span class="line">如果你不知道，你凭什么觉得自己已经积累够了？</span><br><span class="line"></span><br><span class="line">如果你都不了解，你怎么能让他们帮你的忙，做你想让他们做的事情？</span><br><span class="line"></span><br><span class="line">如果他们不做你想让他们做的事情，你又何来的成功？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">等待</span><br><span class="line"></span><br><span class="line">这是个浮躁的人们最不喜欢的话题，本来不想说这个话题，因为会引起太多的争论，而我又无意和人争论这些，但是考虑到对于职业生涯的长久规划，这是一个躲避不了的话题，还是决定写一写，不爱看的请离开吧。</span><br><span class="line"></span><br><span class="line">并不是每次穿红灯都会被汽车撞</span><br><span class="line"></span><br><span class="line">并不是每个罪犯都会被抓到</span><br><span class="line"></span><br><span class="line">并不是每个错误都会被惩罚</span><br><span class="line"></span><br><span class="line">并不是每个贪官都会被枪毙</span><br><span class="line"></span><br><span class="line">并不是你的每一份努力都会得到回报</span><br><span class="line"></span><br><span class="line">并不是你的每一次坚持都会有人看到</span><br><span class="line"></span><br><span class="line">并不是你每一点付出都能得到公正的回报</span><br><span class="line"></span><br><span class="line">并不是你的每一个善意都能被理解……</span><br><span class="line"></span><br><span class="line">这个，就是世道。</span><br><span class="line"></span><br><span class="line">好吧，世道不够好，可是，你有推翻世道的勇气么？</span><br><span class="line"></span><br><span class="line">如果没有，你有更好的解决办法么？</span><br><span class="line"></span><br><span class="line">有很多时候，人需要一点耐心，一点信心。</span><br><span class="line"></span><br><span class="line">每个人总会轮到几次不公平的事情，而通常，安心等待是最好的办法。</span><br><span class="line"></span><br><span class="line">有很多时候我们需要等待，需要耐得住寂寞，等待属于自己的那一刻。</span><br><span class="line"></span><br><span class="line">周润发等待过，刘德华等待过，周星驰等待过，王菲等待过，张艺谋也等待过……</span><br><span class="line"></span><br><span class="line">看到了他们如今的功成名就的人，你可曾看到当初他们的等待和耐心？</span><br><span class="line"></span><br><span class="line">你可曾看到金马奖影帝在街边摆地摊？</span><br><span class="line"></span><br><span class="line">你可曾看到德云社一群人在剧场里给一位观众说相声？</span><br><span class="line"></span><br><span class="line">你可曾看到周星驰的角色甚至连一句台词都没有？</span><br><span class="line"></span><br><span class="line">每一个成功者都有一段低沉苦闷的日子，我几乎能想象得出来他们借酒浇愁的样子，我也能想象得出他们为了生存而挣扎的窘迫。</span><br><span class="line"></span><br><span class="line">在他们一生最中灿烂美好的日子里，他们渴望成功，但却两手空空，一如现在的你。</span><br><span class="line"></span><br><span class="line">没有人保证他们将来一定会成功，而他们的选择是耐住寂寞。如果当时的他们总念叨着“成功只是属于特权阶级的”，你觉得他们今天会怎样？</span><br><span class="line"></span><br><span class="line">曾经我也不明白有些人为什么并不比我有能力却要坐在我的头上，年纪比我大就一定要当我的领导么？</span><br><span class="line"></span><br><span class="line">为什么有些烂人不需要努力就能赚钱？</span><br><span class="line"></span><br><span class="line">为什么刚刚改革开放的时候的人能那么容易赚钱，而轮到我们的时候，什么事情都要正规化了？</span><br><span class="line"></span><br><span class="line">有一天我突然想，我还在上学的时候他们就在社会里挣扎奋斗了，他们在社会上奋斗积累了十几二十年，我们新人来了，他们有的我都想要，我这不是在要公平，我这是在要抢劫。</span><br><span class="line"></span><br><span class="line">因为我要得太急，因为我忍不住寂寞。</span><br><span class="line"></span><br><span class="line">二十多岁的男人，没有钱，没有事业，却有蓬勃的欲望。</span><br><span class="line"></span><br><span class="line">人总是会遇到挫折的，</span><br><span class="line"></span><br><span class="line">人总是会有低潮的，</span><br><span class="line"></span><br><span class="line">人总是会有不被人理解的时候的，</span><br><span class="line"></span><br><span class="line">人总是有要低声下气的时候，</span><br><span class="line"></span><br><span class="line">这些时候恰恰是人生最关键的时候，因为大家都会碰到挫折，而大多数人过不了这个门槛，你能过，你就成功了。</span><br><span class="line"></span><br><span class="line">在这样的时刻，我们需要耐心等待，满怀信心地去等待，相信，生活不会放弃你，机会总会来的。</span><br><span class="line"></span><br><span class="line">至少，你还年轻，你没有坐牢，没有生治不了的病，没有欠还不起的债。</span><br><span class="line"></span><br><span class="line">比你不幸的人远远多过比你幸运的人，你还怕什么呢？</span><br><span class="line"></span><br><span class="line">路要一步步走，虽然到达终点的那一步很激动人心，但大部分的脚步是平凡甚至枯燥的，但没有这些脚步，或者耐不住这些平凡枯燥，你终归是无法迎来最后的那些激动人心。</span><br><span class="line"></span><br><span class="line">逆境，是上帝帮你淘汰竞争者的地方。</span><br><span class="line"></span><br><span class="line">要知道，你不好受，别人也不好受，你坚持不下去了，别人也一样，千万不要告诉别人你坚持不住了，那只能让别人获得坚持的信心，让竞争者看着你微笑的面孔，失去信心，退出比赛。</span><br><span class="line"></span><br><span class="line">胜利属于那些有耐心的人。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在最绝望的时候，我会去看电影《The Pursuit of Happyness》《Jerry Maguire》，让自己重新鼓起勇气，因为，无论什么时候，我们总还是有希望。</span><br><span class="line"></span><br><span class="line">当所有的人离开的时候，我不失去希望，我不放弃。每天下班坐在车里，我喜欢哼着《隐形的翅膀》看着窗外，我知道，我在静静等待，等待属于我的那一刻。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">选 择</span><br><span class="line">我们每天做的最多的事情，其实是选择，因此在谈职业生涯的时候不得不提到这个话题。</span><br><span class="line"></span><br><span class="line">我始终认为，在很大的范围内，我们究竟会成为一个什么样的人，决定权在我们自己，每天我们都在做各种各样的选择，我可以不去写这篇文章，去别人的帖子拍拍砖头，也可以写下这些文字，帮助别人的同时也整理自己的思路，我可以多注意下格式让别人易于阅读，也可以写成一堆，我可以就这样发上来，也可以在发以前再看几遍，你可以选择不刮胡子就去面试，也可以选择出门前照照镜子……每天，每一刻我们都在做这样那样的决定，我们可以漫不经心，也可以多花些心思，成千上万的小选择累计起来，就决定了最终我们是个什么样的人。</span><br><span class="line"></span><br><span class="line">从某种意义上来说我们的未来不是别人给的，是我们自己选择的，很多人会说我命苦啊，没得选择啊，如果你认为“去微软还是去IBM”“上清华还是上北大”“当销售副总还是当厂长”这种才叫选择的话，的确你没有什么选择，大多数人都没有什么选择。</span><br><span class="line"></span><br><span class="line">但每天你都可以选择是否为客户服务更周到一些，是否对同事更耐心一些，是否把工作做得更细致一些，是否把情况了解得更清楚一些，是否把不清楚的问题再弄清楚一些……你也可以选择在是否在痛苦中继续坚持，是否抛弃掉自己的那些负面的想法，是否原谅一个人的错误，是否相信我在这里写下的这些话，是否不要再犯同样的错误……生活每天都在给你选择的机会，每天都在给你改变自己人生的机会，你可以选择赖在地上撒泼打滚，也可以选择咬牙站起来。</span><br><span class="line"></span><br><span class="line">你永远都有选择。有些选择不是立杆见影的，需要累积，比如农民可以选择自己常常去浇地，也可以选择让老天去浇地，诚然你今天浇水下去苗不见得今天马上就长出来，但常常浇水，大部分苗终究会长出来的，如果你不浇，收成一定很糟糕。</span><br><span class="line"></span><br><span class="line">每天生活都在给你机会，他不会给你一叠现金也不会拱手送你个好工作，但实际上，他还是在给你机会。我的家庭是一个普通的家庭，没有任何了不起的社会关系，我的父亲在大学毕业以后就被分配到了边疆，那个小县城只有一条马路，他们那一代人其实比我们更有理由抱怨，他们什么也没得到，年轻的时候文化大革命，书都没得读，支援边疆插队落户，等到老了，却要给年轻人机会了。他有足够的理由象成千上万那样的青年一样坐在那里抱怨生不逢时，怨气冲天。然而在分配到边疆的十年之后，国家恢复招研究生，他考回了原来的学校。研究生毕业，他被分配到了安徽一家小单位里，又是<span class="number">3</span>年以后，国家第一届招收博士生，他又考回了原来的学校，成为中国第一代博士，那时的他比现在的我年纪还大。生活并没有放弃他，他也没有放弃生活。</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>年的等待，他做了他自己的选择，他没有放弃，他没有破罐子破摔，所以时机到来的时候，他改变了自己的人生。</span><br><span class="line"></span><br><span class="line">你最终会成为什么样的人，就决定在你的每个小小的选择之间。</span><br><span class="line"></span><br><span class="line">你选择相信什么？</span><br><span class="line"></span><br><span class="line">你选择和谁交朋友？</span><br><span class="line"></span><br><span class="line">你选择做什么？</span><br><span class="line"></span><br><span class="line">你选择怎么做？……</span><br><span class="line"></span><br><span class="line">我们面临太多的选择，而这些选择当中，意识形态层面的选择又远比客观条件的选择来得重要得多，比如选择做什么产品其实并不那么重要，而选择怎么做才重要。</span><br><span class="line"></span><br><span class="line">选择用什么人并不重要，而选择怎么带这些人才重要。</span><br><span class="line"></span><br><span class="line">大多数时候选择客观条件并不要紧，大多数关于客观条件的选择并没有对错之分，要紧的是选择怎么做。一个大学生毕业了，他要去微软也好，他要卖猪肉也好，他要创业也好，他要做游戏代练也好，只要不犯法，不害人，都没有什么关系，要紧的是，选择了以后，怎么把事情做好。</span><br><span class="line"></span><br><span class="line">除了这些，你还可以选择时间和环境，比如，你可以选择把这辈子最大的困难放在最有体力最有精力的时候，也可以走一步看一步，等到了<span class="number">40</span>岁再说，只是到了<span class="number">40</span>多岁，那正是一辈子最脆弱的时候，上有老下有小，如果在那个时候碰上了职业危机，实在是一件很苦恼的事情。与其如此不如在<span class="number">20</span>多岁<span class="number">30</span>多岁的时候吃点苦，好让自己脆弱的时候活得从容一些。</span><br><span class="line"></span><br><span class="line">你可以选择在温室里成长，也可以选择到野外磨砺，你可以选择在办公室吹冷气的工作，也可以选择<span class="number">40</span>度的酷热下，去见你的客户，只是，这一切最终会累积起来，引导你到你应得的未来。</span><br><span class="line"></span><br><span class="line">我不敢说所有的事情你都有得选择，但是绝大部分事情你有选择，只是往往你不把这当作一种选择。</span><br><span class="line"></span><br><span class="line">认真对待每一次选择，才会有比较好的未来。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">入对行跟对人</span><br><span class="line"></span><br><span class="line">在中国，大概很少有人是一份职业做到底的，虽然如此，第一份工作还是有些需要注意的地方，有两件事情格外重要，第一件是入行，第二件事情是跟人。</span><br><span class="line"></span><br><span class="line">第一份工作对人最大的影响就是入行，现代的职业分工已经很细，我们基本上只能在一个行业里成为专家，不可能在多个行业里成为专家。（毕竟人的精力有限）</span><br><span class="line"></span><br><span class="line">很多案例也证明即使一个人在一个行业非常成功，到另外一个行业，往往完全不是那么回事情，“你想改变世界，还是想卖一辈子汽水？”是乔布斯邀请百事可乐总裁约翰•斯考利加盟苹果时所说的话，结果这位在百事非常成功的约翰，到了苹果表现平平。</span><br><span class="line"></span><br><span class="line">其实没有哪个行业特别好，也没有哪个行业特别差，或许有报道说哪个行业的平均薪资比较高，但是他们没说的是，那个行业的平均压力也比较大。</span><br><span class="line"></span><br><span class="line">看上去很美的行业一旦进入才发现很多地方其实并不那么完美，只是外人看不见。</span><br><span class="line"></span><br><span class="line">说实话，我自己都没有发大财，所以我的建议只是让人快乐工作的建议，不是如何发大财的建议，我们只讨论一般普通打工者的情况。我认为选择什么行业并没有太大关系，看问题不能只看眼前。</span><br><span class="line"></span><br><span class="line">比如，从前年开始，国家开始整顿医疗行业，很多医药公司开不下去，很多医药行业的销售开始转行。</span><br><span class="line"></span><br><span class="line">其实医药行业的不景气是针对所有公司的，并非针对一家公司，大家的日子都不好过，这个时候跑掉是非常不划算的，大多数正规的医药公司即使不做新生意撑个两三年总是能撑的，大多数医药销售靠工资撑个两三年也是可以撑的，国家不可能永远捏着医药行业不放的，两三年以后光景总归还会好起来的，那个时候别人都跑了而你没跑，那时的日子应该会好过很多。有的时候觉得自己这个行业不行了，问题是，再不行的行业，做得人少了也变成了好行业，当大家都觉得不好的时候，往往却是最好的时候。大家都觉得金融行业好，金融行业门槛高不说，有多少人削尖脑袋要钻进去，竞争激励，进去以后还要时时提防，一个疏忽，就被后来的人给挤掉了，压力巨大，又如何谈得上快乐？也就未必是“好”工作了。</span><br><span class="line"></span><br><span class="line">太阳能这个东西至今还不能进入实际应用的阶段，但是中国已经有<span class="number">7</span>家和太阳能有关的公司在纽交所上市了，国美苏宁永乐其实是贸易型企业，也能上市，鲁泰纺织连续<span class="number">10</span>年利润增长超过<span class="number">50</span>%，卖茶的一茶一座，卖衣服的海澜之家都能上市……其实选什么行业真的不重要，关键是怎么做。事情都是人做出来的，关键是人。</span><br><span class="line"></span><br><span class="line">有一点是需要记住的，这个世界上，有史以来直到我们能够预见得到的未来，成功的人总是少数，有钱的人总是少数，大多数人是一般的，普通的，不太成功的。</span><br><span class="line"></span><br><span class="line">因此，大多数人的做法和看法，往往都不是距离成功最近的做法和看法。因此大多数人说好的东西不见得好，大多数人说不好的东西不见得不好。</span><br><span class="line"></span><br><span class="line">大多数人都去炒股的时候说明跌只是时间问题，大家越是热情高涨的时候，跌的日子越近。</span><br><span class="line"></span><br><span class="line">大多数人买房子的时候，房价不会涨，而房价涨的差不多的时候，大多数人才开始买房子。</span><br><span class="line"></span><br><span class="line">不会有这样一件事情让大家都变成功，发了财，历史上不曾有过，将来也不会发生。</span><br><span class="line"></span><br><span class="line">有些东西即使一时运气好得到了，还是会在别的时候别的地方失去的。</span><br><span class="line"></span><br><span class="line">年轻人在职业生涯的刚开始，尤其要注意的是，要做对的事情，不要让自己今后几十年的人生总是提心吊胆，更不值得为了一份工作赔上自己的青春年华。</span><br><span class="line"></span><br><span class="line">有个公司是个不行贿的公司，以前很多人不理解，甚至自己的员工也不理解，不过如今，我们是同行中最大的企业，客户乐意和我们打交道，尤其是在国家打击腐败的时候，每个人都知道我们做生意不给钱的名声，都敢于和我们做生意。</span><br><span class="line"></span><br><span class="line">而勇于给钱的公司，不是倒了，就是跑了，要不就是每天睡不好觉，人还是要看长远一点。很多时候，看起来最近的路，其实是最远的路，看起来最远的路，其实是最近的路。</span><br><span class="line"></span><br><span class="line">跟对人是说，入行后要跟个好领导好老师，刚进社会的人做事情往往没有经验，需要有人言传身教。对于一个人的发展来说，一个好领导是非常重要的。所谓“好”的标准，不是他让你少干活多拿钱，而是以下三个。</span><br><span class="line"></span><br><span class="line">首先，好领导要有宽广的心胸，如果一个领导每天都会发脾气，那几乎可以肯定他不是个心胸宽广的人，能发脾气的时候却不发脾气的领导，多半是非常厉害的领导。中国人当领导最大的毛病是容忍不了能力比自己强的人，所以常常可以看到的一个现象是，领导很有能力，手下一群庸才或者手下一群闲人。如果看到这样的环境，还是不要去的好。</span><br><span class="line"></span><br><span class="line">其次，领导要愿意从下属的角度来思考问题，这一点其实是从面试的时候就能发现的，如果这位领导总是从自己的角度来考虑问题，几乎不听你说什么，这就危险了。</span><br><span class="line"></span><br><span class="line">从下属的角度来考虑问题并不代表同意下属的说法，但他必须了解下属的立场，下属为什么要这么想，然后他才有办法说服你，只关心自己怎么想的领导往往难以获得下属的信服。</span><br><span class="line"></span><br><span class="line">第三，领导敢于承担责任，如果出了问题就把责任往下推，有了功劳就往自己身上揽，这样的领导不跟也罢。</span><br><span class="line"></span><br><span class="line">选择领导，要选择关键时刻能抗得住的领导，能够为下属的错误买单的领导，因为这是他作为领导的责任。</span><br><span class="line"></span><br><span class="line">有可能，你碰不到好领导，因为，中国的领导往往是屁股决定脑袋的领导，因为他坐领导的位置，所以他的话就比较有道理，这是传统观念官本位的误区，可能有大量的这种无知无能的领导，只是，这对于你其实是好事，如果将来有一天你要超过他，你希望他比较聪明还是比较笨？</span><br><span class="line"></span><br><span class="line">相对来说这样的领导其实不难搞定，只是你要把自己的身段放下来而已。</span><br><span class="line"></span><br><span class="line">多认识一些人，多和比自己强的人打交道，同样能找到好的老师，不要和一群同样郁闷的人一起控诉社会，控诉老板，这帮不上你，只会让你更消极。和那些比你强的人打交道，看他们是怎么想的，怎么做的，学习他们，然后跟更强的人打交道。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">20</span>几岁的年轻人，除了极少数经历丰富的之外，大部分都因为阅历过少而不会知道自己喜欢什么，不知道该追求什么。十几年的应试教育带给你的是对课本之外事物的一无所知，尤其是对自己。</span><br><span class="line"></span><br><span class="line">就如同你<span class="number">20</span>几年都在吃同一种饭，突然问你全天下饭菜你最喜欢吃哪种，你当然不知道。如果此时让你做个选择，选择一个作为以后终身只吃这一种的饭菜，你觉得你后悔选错的概率有多大？</span><br><span class="line"></span><br><span class="line">大部分人都会因为害怕选错而继续吃以前的那种。于是生活一直保持老样子，虽然讨厌，却怎么也改变不了。</span><br><span class="line"></span><br><span class="line">然而人生是个关于探索的历程，你只有尝试的多了，才会发现有些原以为喜欢的事情其实不喜欢，有些以为不喜欢的事情其实很喜欢。</span><br><span class="line"></span><br><span class="line">一开始目标是模糊的，越尝试，越清晰，然后才能知道前方的路怎么走。</span><br><span class="line"></span><br><span class="line">如果一辈子不去尝试，几十年过后，当别人问你你人生目标是什么，你依然不知道，你知道的，仅仅是自己不喜欢现在的工作。</span><br><span class="line"></span><br><span class="line"><span class="number">20</span>岁时迷茫，是因为体验的少，<span class="number">50</span>岁时迷茫，依然是因为体验的少。</span><br><span class="line"></span><br><span class="line">当然，尝试也不是随便尝试，而是要有选择的尝试，谁的人生也没有无限的青春。在挑选尝试目标的阶段，要Search your feelings，Follow Your heart。</span><br><span class="line"></span><br><span class="line">同时再结合上性格天赋测评和自己判断的社会趋势得出的理论方向，选定几个特定的方向有选择性的进行尝试。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最重要的一点，就是每一次尝试都要全力以赴，绝对不能浅尝辄止。</span><br><span class="line"></span><br><span class="line">一定是付出过努力后，才能做评价，而不要因为一些小事就断然否定。否则会毫无成果，空费时间。</span><br><span class="line"></span><br><span class="line">还有，在选定几个目标时，一定不要左犹豫，右犹豫。在经过一定的调查后，你唯一重要的任务是赶紧着手去开始，而不是每天思考怎么选择。</span><br><span class="line"></span><br><span class="line">这种思考本质上并不是在思考，不会有任何产出。二十年前亚马逊创立之初，贝索斯觉得自己应该建立一个网上卖书的网站，还要比线下书店便宜一大截，别人问他要怎么做到，他说，我也不知道，先干起来再解决怎么做到的问题。</span><br><span class="line"></span><br><span class="line">（迷茫的根本是自我认知不清晰，找好方向深耕比一边跳槽一边找要实际有用的多。）</span><br><span class="line"></span><br><span class="line">记住，当你迷茫的时候，选个“可能”的方向行动起来，目标会在行动的过程中变得清晰。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;转载工作找不到方向-迷茫的人看下吧&quot;&gt;&lt;a href=&quot;#转载工作找不到方向-迷茫的人看下吧&quot; class=&quot;headerlink&quot; title=&quot;转载工作找不到方向 迷茫的人看下吧&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com</summary>
      
    
    
    
    
    <category term="杂谈" scheme="https://blog.afacode.top/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 第三方包</title>
    <link href="https://blog.afacode.top/2020/07/06/flutter-package/"/>
    <id>https://blog.afacode.top/2020/07/06/flutter-package/</id>
    <published>2020-07-06T06:33:06.000Z</published>
    <updated>2023-07-13T15:06:15.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三方包镜像"><a href="#第三方包镜像" class="headerlink" title="第三方包镜像"></a><a href="https://pub.flutter-io.cn/" target="_blank" rel="noopener">第三方包镜像</a></h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dio</span> <span class="string">网路请求</span></span><br><span class="line"><span class="attr">cookie_jar</span></span><br><span class="line"><span class="attr">dio_cookie_manager</span></span><br><span class="line"></span><br><span class="line"><span class="attr">flutter_screenutil</span> <span class="string">屏幕适配</span></span><br><span class="line"></span><br><span class="line"><span class="attr">flutter_swiper</span> <span class="string">轮播图</span></span><br><span class="line"></span><br><span class="line"><span class="attr">fluttertoast</span> <span class="string">轻提醒</span></span><br><span class="line"></span><br><span class="line"><span class="attr">encrypt</span> <span class="string">加密</span></span><br><span class="line"></span><br><span class="line"><span class="attr">path_provider</span> <span class="string">路径</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pk_skeleton</span> <span class="string">骨架屏</span></span><br><span class="line"></span><br><span class="line"><span class="attr">路由管理</span></span><br><span class="line"><span class="attr">auto_route</span></span><br><span class="line"><span class="attr">flutter_modular</span></span><br><span class="line"><span class="attr">fluro</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">webview_flutter</span> <span class="string">加载网页</span></span><br><span class="line"></span><br><span class="line"><span class="attr">share</span> <span class="string">分享</span></span><br><span class="line"></span><br><span class="line"><span class="attr">package_info</span> <span class="string">包信息</span></span><br><span class="line"></span><br><span class="line"><span class="attr">permission_handler</span>   <span class="string">permission权限</span></span><br><span class="line"></span><br><span class="line"><span class="attr">install_plugin</span>    <span class="string">APK安装</span></span><br><span class="line"></span><br><span class="line"><span class="attr">easy_dialog</span> <span class="string">对话框</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第三方包镜像&quot;&gt;&lt;a href=&quot;#第三方包镜像&quot; class=&quot;headerlink&quot; title=&quot;第三方包镜像&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pub.flutter-io.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;</summary>
      
    
    
    
    
    <category term="flutter" scheme="https://blog.afacode.top/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Charles cannot configure your proxy settings</title>
    <link href="https://blog.afacode.top/2020/06/30/charles-cannot-configure-proxy/"/>
    <id>https://blog.afacode.top/2020/06/30/charles-cannot-configure-proxy/</id>
    <published>2020-06-30T07:24:36.000Z</published>
    <updated>2023-07-13T15:06:15.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Charles-cannot-configure-your-proxy-settings"><a href="#Charles-cannot-configure-your-proxy-settings" class="headerlink" title="Charles cannot configure your proxy settings"></a>Charles cannot configure your proxy settings</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Charles cannot configure your<span class="built_in"> proxy settings </span><span class="keyword">while</span> it is on a read-only volume</span><br></pre></td></tr></table></figure><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>macOS catalina 10.15.4 (19E287)</p><p>charles v4.2.8 </p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">chown</span> -R root <span class="string">"/Applications/Charles.app/Contents/Resources"</span></span><br><span class="line">sudo <span class="keyword">chmod</span> -R u+<span class="keyword">s</span> <span class="string">"/Applications/Charles.app/Contents/Resources"</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/autopkg/arubdesu-recipes/issues/26" target="_blank" rel="noopener">git issues</a></p><p><a href="https://github.com/autopkg/arubdesu-recipes/issues/94" target="_blank" rel="noopener">git issues</a></p><p><a href="https://stackoverflow.com/questions/57613669/issue-configure-charles-proxy-on-catalina" target="_blank" rel="noopener">stackoverflow</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Charles-cannot-configure-your-proxy-settings&quot;&gt;&lt;a href=&quot;#Charles-cannot-configure-your-proxy-settings&quot; class=&quot;headerlink&quot; title=&quot;Char</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>You may have an infinite update loop in a component render function</title>
    <link href="https://blog.afacode.top/2020/06/15/vue-warning-update-loop/"/>
    <id>https://blog.afacode.top/2020/06/15/vue-warning-update-loop/</id>
    <published>2020-06-15T08:33:47.000Z</published>
    <updated>2023-07-13T15:06:15.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>vue for 里面数组渲染翻转 警告<br>You may have an infinite update loop in a component render function</p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>issus回复 <a href="https://github.com/vuejs/vue/issues/1153" target="_blank" rel="noopener">https://github.com/vuejs/vue/issues/1153</a></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(itemi, idxi) in productDetails.details"</span> <span class="attr">:key</span>=<span class="string">"idxi"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"status-list"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(itemx, idxx) in itemi.kdinfo.Route.reverse()"</span> <span class="attr">:class</span>=<span class="string">"idxx=== 0 ?'latest':''"</span> <span class="attr">:key</span>=<span class="string">"idxx"</span>&gt;</span></span><span class="template-variable">&#123;&#123;itemx.accept_time&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    修改为 itemi.kdinfo.Route.slice().reverse()</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;vue for 里面数组渲染翻转 警告&lt;br&gt;You may have an infinite update loop in a compo</summary>
      
    
    
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序在IOS真机线上或体验版显示NAN</title>
    <link href="https://blog.afacode.top/2020/05/28/wechatapp-ios-datetime-nan-bug/"/>
    <id>https://blog.afacode.top/2020/05/28/wechatapp-ios-datetime-nan-bug/</id>
    <published>2020-05-28T06:46:34.000Z</published>
    <updated>2023-07-13T15:06:15.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="微信小程序在IOS真机线上或体验版显示NAN"><a href="#微信小程序在IOS真机线上或体验版显示NAN" class="headerlink" title="微信小程序在IOS真机线上或体验版显示NAN"></a>微信小程序在IOS真机线上或体验版显示NAN</h2><p>在微信开发工具测试时间显示正常、真机调试时间显示正常。<br>安卓手机体验版/线上版本时间显示正常。开发工具真机调试连接iOS手机测试时间显示正常。<br>但就是IOS真机线上或体验版显示NAN</p><h2 id="iOS手机或者浏览器不支持2018-05-03这种类型的日期格式。"><a href="#iOS手机或者浏览器不支持2018-05-03这种类型的日期格式。" class="headerlink" title="iOS手机或者浏览器不支持2018-05-03这种类型的日期格式。"></a>iOS手机或者浏览器不支持2018-05-03这种类型的日期格式。</h2><h2 id="将2018-05-03-转换为2018-05-03这样的时间格式"><a href="#将2018-05-03-转换为2018-05-03这样的时间格式" class="headerlink" title="将2018-05-03 转换为2018/05/03这样的时间格式"></a>将2018-05-03 转换为2018/05/03这样的时间格式</h2><p><code>&quot;2020-05-28 14:46:34&quot;.replace(/-/g,&#39;/&#39;)</code><br>然后可以进行获取时间戳的操作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;微信小程序在IOS真机线上或体验版显示NAN&quot;&gt;&lt;a href=&quot;#微信小程序在IOS真机线上或体验版显示NAN&quot; class=&quot;headerlink&quot; title=&quot;微信小程序在IOS真机线上或体验版显示NAN&quot;&gt;&lt;/a&gt;微信小程序在IOS真机线上或体验版显示N</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Waiting for another flutter command to release the startup lock</title>
    <link href="https://blog.afacode.top/2020/05/08/lock/"/>
    <id>https://blog.afacode.top/2020/05/08/lock/</id>
    <published>2020-05-08T09:52:46.000Z</published>
    <updated>2023-07-13T15:06:15.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Waiting-for-another-flutter-command-to-release-the-startup-lock…"><a href="#Waiting-for-another-flutter-command-to-release-the-startup-lock…" class="headerlink" title="Waiting for another flutter command to release the startup lock…"></a>Waiting for another flutter command to release the startup lock…</h2><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>找到flutter的环境配置地址<br>删除 /bin/cache/lockfile 文件</p><blockquote><p>which flutter<br>/Users/XXX/path/flutter/bin/flutter</p></blockquote><blockquote><p>删除 /flutter/bin/cache/lockfile 文件</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Waiting-for-another-flutter-command-to-release-the-startup-lock…&quot;&gt;&lt;a href=&quot;#Waiting-for-another-flutter-command-to-release-the-start</summary>
      
    
    
    
    
    <category term="flutter" scheme="https://blog.afacode.top/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>NestJs简单实现文件上传</title>
    <link href="https://blog.afacode.top/2020/04/15/nestjs-upload-file/"/>
    <id>https://blog.afacode.top/2020/04/15/nestjs-upload-file/</id>
    <published>2020-04-15T11:35:57.000Z</published>
    <updated>2023-07-13T15:06:15.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>nestjs + swagger</p><h2 id="file-module-ts"><a href="#file-module-ts" class="headerlink" title="file.module.ts"></a>file.module.ts</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; FileController &#125; <span class="keyword">from</span> <span class="string">'./file.controller'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; FileService &#125; <span class="keyword">from</span> <span class="string">'./file.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MulterModule &#125; <span class="keyword">from</span> <span class="string">'@nestjs/platform-express'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; diskStorage &#125; <span class="keyword">from</span> <span class="string">'multer'</span>;</span><br><span class="line"><span class="keyword">import</span> dayjs = <span class="built_in">require</span>(<span class="string">'dayjs'</span>);</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> nuid <span class="keyword">from</span> <span class="string">'nuid'</span>;</span><br><span class="line"></span><br><span class="line">@Module(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    MulterModule.register(&#123;</span><br><span class="line">      storage: diskStorage(&#123;</span><br><span class="line">        <span class="comment">// 配置文件上传后的文件夹路径</span></span><br><span class="line">        destination: <span class="string">`./public/uploads/<span class="subst">$&#123;dayjs().format(<span class="string">'YYYY-MM-DD'</span>)&#125;</span>`</span>,</span><br><span class="line">        filename: <span class="function">(<span class="params">req, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 在此处自定义保存后的文件名称</span></span><br><span class="line">          <span class="keyword">const</span> filename = <span class="string">`<span class="subst">$&#123;nuid.next()&#125;</span>.<span class="subst">$&#123;file.mimetype.split(<span class="string">'/'</span>)[<span class="number">1</span>]&#125;</span>`</span>;</span><br><span class="line">          <span class="keyword">return</span> cb(<span class="literal">null</span>, filename);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  controllers: [FileController],</span><br><span class="line">  providers: [FileService],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">FileModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="file-controller-ts"><a href="#file-controller-ts" class="headerlink" title="file.controller.ts"></a>file.controller.ts</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Controller, Post, UploadedFile, UseInterceptors &#125; from <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ApiTags, ApiOperation, ApiConsumes, ApiNotImplementedResponse, ApiBody &#125; from <span class="string">'@nestjs/swagger'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; FileInterceptor &#125; from <span class="string">'@nestjs/platform-express'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; FileUploadDto &#125; from <span class="string">'./dto/upload.dto'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiTags(<span class="meta-string">'文件上传'</span>)</span></span><br><span class="line"><span class="meta">@Controller(<span class="meta-string">'file'</span>)</span></span><br><span class="line">export <span class="class"><span class="keyword">class</span> <span class="title">FileController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ApiOperation(&#123;summary: <span class="meta-string">'文件上传，接收 multipart/form-data 的数据'</span>&#125;)</span></span><br><span class="line">  <span class="meta">@ApiConsumes(<span class="meta-string">'multipart/form-data'</span>)</span></span><br><span class="line">  <span class="meta">@ApiBody(&#123;</span></span><br><span class="line"><span class="meta">    description: <span class="meta-string">'文件上传'</span>,</span></span><br><span class="line"><span class="meta">    type: FileUploadDto,</span></span><br><span class="line"><span class="meta">  &#125;)</span></span><br><span class="line">  <span class="meta">@UseInterceptors(FileInterceptor(<span class="meta-string">'file'</span>)</span>)</span><br><span class="line">  <span class="meta">@Post(<span class="meta-string">'upload'</span>)</span></span><br><span class="line">  uploadFile(<span class="meta">@UploadedFile()</span> file) &#123;</span><br><span class="line">    <span class="keyword">return</span> file;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="upload-dto-ts"><a href="#upload-dto-ts" class="headerlink" title="upload.dto.ts"></a>upload.dto.ts</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ApiProperty &#125; <span class="keyword">from</span> <span class="string">'@nestjs/swagger'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> FileUploadDto &#123;</span><br><span class="line">  <span class="meta">@ApiProperty</span>(&#123; <span class="keyword">type</span>: <span class="string">'string'</span>, format: <span class="string">'binary'</span> &#125;)</span><br><span class="line">  file: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="main-ts"><a href="#main-ts" class="headerlink" title="main.ts"></a>main.ts</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; join &#125; <span class="keyword">from</span> <span class="string">'path'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> NestFactory.create(AppModule, &#123;</span><br><span class="line">    cors: <span class="literal">true</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  app.use(express.json());</span><br><span class="line">  app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 可以直接访问文件 如：http://localhost:3000/public/uploads/2020-04-15/36T4NJ0P3UQCIU3GFRMARZ.jpeg</span></span><br><span class="line">  <span class="comment">// 配置 public 文件夹为静态目录，以达到可直接访问下面文件的目的</span></span><br><span class="line">  <span class="keyword">const</span> rootDir = join(__dirname, <span class="string">'..'</span>);</span><br><span class="line">  app.use(<span class="string">'/public'</span>, express.static(join(rootDir, <span class="string">'public'</span>)));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置所有 api 访问前缀</span></span><br><span class="line">  app.setGlobalPrefix(<span class="string">'/api'</span>);</span><br><span class="line">  <span class="comment">// 使用全局拦截器打印出参</span></span><br><span class="line">  app.useGlobalInterceptors(<span class="keyword">new</span> TransformInterceptor());</span><br><span class="line">  <span class="comment">// 过滤处理 HTTP 异常</span></span><br><span class="line">  <span class="comment">// AllExceptionsFilter 要在 HttpExceptionFilter 的上面，</span></span><br><span class="line">  <span class="comment">// 否则 HttpExceptionFilter 就不生效了，全被 AllExceptionsFilter 捕获了</span></span><br><span class="line">  app.useGlobalFilters(<span class="keyword">new</span> AllExceptionFilter());</span><br><span class="line">  app.useGlobalFilters(<span class="keyword">new</span> HttpExceptionFilter());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 接口文档 swagger 参数</span></span><br><span class="line">  <span class="keyword">const</span> options = <span class="keyword">new</span> DocumentBuilder()</span><br><span class="line">    .setTitle(<span class="string">'角色权限管理'</span>)</span><br><span class="line">    .setDescription(<span class="string">'角色权限'</span>)</span><br><span class="line">    .setVersion(<span class="string">'1.0'</span>)</span><br><span class="line">    .addBearerAuth()</span><br><span class="line">    .build();</span><br><span class="line">  <span class="keyword">const</span> <span class="built_in">document</span> = SwaggerModule.createDocument(app, options);</span><br><span class="line">  SwaggerModule.setup(<span class="string">'doc'</span>, app, <span class="built_in">document</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> app.listen(port);</span><br><span class="line">  Logger.log(<span class="string">`http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>, <span class="string">'服务启动成功'</span>);</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">action</span>=<span class="string">"http://localhost:3000/api/file/upload"</span> <span class="attr">drag</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-upload"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"el-upload__text"</span>&gt;</span></span><br><span class="line">        将文件拖到此处，或<span class="tag">&lt;<span class="name">em</span>&gt;</span>点击上传<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;nestjs + swagger&lt;/p&gt;
&lt;h2 id=&quot;file-module-ts&quot;&gt;&lt;a href=&quot;#file-module-ts&quot;</summary>
      
    
    
    
    
    <category term="NestJs" scheme="https://blog.afacode.top/tags/NestJs/"/>
    
    <category term="swagger" scheme="https://blog.afacode.top/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>抽象语法树AST</title>
    <link href="https://blog.afacode.top/2020/04/14/javascript-babel-ast-v8/"/>
    <id>https://blog.afacode.top/2020/04/14/javascript-babel-ast-v8/</id>
    <published>2020-04-14T13:11:21.000Z</published>
    <updated>2023-07-13T15:06:15.414Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://juejin.im/post/5e942d926fb9a03c7d3d07a4" target="_blank" rel="noopener">原文-【你应该了解的】抽象语法树AST</a><br>作者：<a href="https://skfeteam.github.io/" target="_blank" rel="noopener">skFeTeam</a><br>链接：<a href="https://juejin.im/post/5e942d926fb9a03c7d3d07a4" target="_blank" rel="noopener">https://juejin.im/post/5e942d926fb9a03c7d3d07a4</a></p><h2 id="什么是抽象语法树"><a href="#什么是抽象语法树" class="headerlink" title="什么是抽象语法树"></a>什么是抽象语法树</h2><ul><li>AST（Abstract Syntax Tree）是源代码的抽象语法结构树状表现形式。下面这张图示意了一段JavaScript代码的抽象语法树的表现形式。<h2 id="抽象语法树的作用"><a href="#抽象语法树的作用" class="headerlink" title="抽象语法树的作用"></a>抽象语法树的作用</h2></li><li>IDE的错误提示、代码格式化、代码高亮、代码自动补全等</li><li>JSLint、JSHint、ESLint对代码错误或风格的检查等</li><li>webpack、rollup进行代码打包等</li><li>Babel 转换 ES6 到 ES5 语法</li><li>注入代码统计单元测试覆盖率</li></ul><h2 id="AST解析器"><a href="#AST解析器" class="headerlink" title="AST解析器"></a>AST解析器</h2><h3 id="JS-Parser解析器"><a href="#JS-Parser解析器" class="headerlink" title="JS Parser解析器"></a>JS Parser解析器</h3><p>AST是如何生成的？</p><ul><li>能够将JavaScript源码转化为抽象语法树（AST）的工具叫做JS Parser解析器。</li></ul><p>JS Parser的解析过程包括两部分</p><ul><li>词法分析（Lexical Analysis）：将整个代码字符串分割成最小语法单元数组</li><li>语法分析（Syntax Analysis）：在分词基础上建立分析语法单元之间的关系</li></ul><p>常见的AST parser</p><ul><li>早期有uglifyjs和esprima</li><li>Espree，基于esprima，用于eslint</li><li>Acorn，号称是相对于esprima性能更优，体积更小</li><li>Babylon，出自acorn，用于babel</li><li>Babel-eslint，babel团队维护，用于配合使用ESLint</li></ul><h3 id="词法分析（Lexical-Analysis）"><a href="#词法分析（Lexical-Analysis）" class="headerlink" title="词法分析（Lexical Analysis）"></a>词法分析（Lexical Analysis）</h3><p>语法单元是被解析语法当中具备实际意义的最小单元，简单的来理解就是自然语言中的词语。</p><p>Javascript 代码中的语法单元主要包括以下这么几种：</p><ul><li>关键字：例如 var、let、const等</li><li>标识符：没有被引号括起来的连续字符，可能是一个变量，也可能是 if、else 这些关键- 字，又或者是 true、false 这些内置常量</li><li>运算符： +、-、 *、/ 等</li><li>数字：像十六进制，十进制，八进制以及科学表达式等</li><li>字符串：因为对计算机而言，字符串的内容会参与计算或显示</li><li>空格：连续的空格，换行，缩进等</li><li>注释：行注释或块注释都是一个不可拆分的最小语法单元</li><li>其他：大括号、小括号、分号、冒号等<h3 id="语法分析（Syntax-Analysis）"><a href="#语法分析（Syntax-Analysis）" class="headerlink" title="语法分析（Syntax Analysis）"></a>语法分析（Syntax Analysis）</h3>组合分词的结果，确定词语之间的关系，确定词语最终的表达含义，生成抽象语法树。<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><a href="https://juejin.im/post/5e942d926fb9a03c7d3d07a4#heading-6" target="_blank" rel="noopener">见原文</a><h3 id="工具网站"><a href="#工具网站" class="headerlink" title="工具网站"></a>工具网站</h3><a href="https://juejin.im/post/5e942d926fb9a03c7d3d07a4#heading-7" target="_blank" rel="noopener">见原文</a></li></ul><h2 id="AST-in-Babel"><a href="#AST-in-Babel" class="headerlink" title="AST in Babel"></a>AST in Babel</h2><h3 id="Babel的运行原理"><a href="#Babel的运行原理" class="headerlink" title="Babel的运行原理"></a>Babel的运行原理</h3><p>Babel的工作过程经过三个阶段，parse、transform、generate</p><ul><li>parse阶段，将源代码转换为AST</li><li>transform阶段，利用各种插件进行代码转换</li><li>generator阶段，再利用代码生成工具，将AST转换成代码</li></ul><p>Parse-解析</p><ul><li>Babel 使用 @babel/parser 解析代码，输入的 js 代码字符串根据 ESTree 规范生成 AST</li><li>Babel 使用的解析器是 babylon</li></ul><p>Transform-转换</p><ul><li>接收 AST 并对其进行遍历，在此过程中对节点进行添加、更新及移除等操作。也是Babel- 插件接入工作的部分。</li><li>Babel提供了@babel/traverse(遍历)方法维护AST树的整体状态，方法的参数为原始AST和自定义的转换规则，返回结果为转换后的AST。</li></ul><p>Generator-生成</p><ul><li>代码生成步骤把最终（经过一系列转换之后）的 AST 转换成字符串形式的代码，同时还会创建源码映射（source maps）。</li><li>遍历整个 AST，然后构建可以表示转换后代码的字符串。</li><li>Babel使用 @babel/generator 将修改后的 AST 转换成代码，生成过程可以对是否压缩以及是否删除注释等进行配置，并且支持 sourceMap。</li></ul><h2 id="Demo-with-esprima"><a href="#Demo-with-esprima" class="headerlink" title="Demo with esprima"></a>Demo with esprima</h2><p>了解了babel的运行原理，我们根据babel的三个步骤来动手写一个demo，加深对AST的理解。<br><a href="https://juejin.im/post/5e942d926fb9a03c7d3d07a4#heading-10" target="_blank" rel="noopener">https://juejin.im/post/5e942d926fb9a03c7d3d07a4#heading-10</a></p><h2 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h2><blockquote><p>假设a是一个对象，var a = { b : 1}，那么a.b和a[‘b’] ，哪个性能更高呢？</p></blockquote><p>a.b和a[‘b’]的写法，大家经常会用到，也许没有注意过这两种写法会有性能差异。事实上，有人做过测试，两者的性能差距不大，a.b会比a[‘b’]性能稍微好一点。那么，为什么a.b比a[‘b’]性能稍微好一点呢？<br>我认为，a.b可以直接解析b为a的属性，而a[‘b’]可能会多一个判断的过程，因为[]里面的内容可能是一个变量，也可能是个常量。</p><p><a href="https://juejin.im/post/5e942d926fb9a03c7d3d07a4#heading-12" target="_blank" rel="noopener">https://juejin.im/post/5e942d926fb9a03c7d3d07a4#heading-12</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5e942d926fb9a03c7d3d07a4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文-【你应该了解的】抽象语法树AST&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://s</summary>
      
    
    
    
    
    <category term="AST" scheme="https://blog.afacode.top/tags/AST/"/>
    
  </entry>
  
  <entry>
    <title>nestjs 与 typeorm结合</title>
    <link href="https://blog.afacode.top/2020/04/06/nestjs-typeorm/"/>
    <id>https://blog.afacode.top/2020/04/06/nestjs-typeorm/</id>
    <published>2020-04-06T15:33:06.000Z</published>
    <updated>2023-07-13T15:06:15.418Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@BeforeInsert()</span></span><br><span class="line"> <span class="meta">@BeforeUpdate()</span></span><br><span class="line"> async hashPassword() &#123;</span><br><span class="line">   <span class="keyword">this</span>.password = await bcrypt.hash(<span class="keyword">this</span>.password, <span class="number">12</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
    <category term="typeorm" scheme="https://blog.afacode.top/tags/typeorm/"/>
    
    <category term="nestjs" scheme="https://blog.afacode.top/tags/nestjs/"/>
    
  </entry>
  
  <entry>
    <title>audio打开到上次播放的位置</title>
    <link href="https://blog.afacode.top/2020/03/15/audio-to-last-time/"/>
    <id>https://blog.afacode.top/2020/03/15/audio-to-last-time/</id>
    <published>2020-03-15T14:28:20.000Z</published>
    <updated>2023-07-13T15:06:15.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>音频打开播放过后，再次进入需要跳到上次播放的位置</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>使用vue</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template &gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">main</span>-<span class="title">box</span>"&gt;</span></span><br><span class="line">    &lt;audio </span><br><span class="line">      ref=<span class="string">"audio"</span> </span><br><span class="line">      controls=<span class="string">"controls"</span></span><br><span class="line">      :src=<span class="string">"SRC"</span></span><br><span class="line">      <span class="meta">@timeupdate</span>=<span class="string">"timeupdate"</span> </span><br><span class="line">      <span class="meta">@canplay</span>=<span class="string">"canplay"</span></span><br><span class="line">      autoplay=<span class="string">"autoplay"</span>&gt;</span><br><span class="line">    &lt;/audio&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'reportDetails'</span>,</span><br><span class="line">  <span class="keyword">data</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      TYPE: <span class="string">""</span>,</span><br><span class="line">      SRC: <span class="string">""</span>,</span><br><span class="line">      TITLE: <span class="string">"其他"</span>,</span><br><span class="line">      first: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">this</span>.TYPE = <span class="keyword">this</span>.$route.query.type;</span><br><span class="line">    <span class="keyword">this</span>.SRC = <span class="keyword">this</span>.$route.query.src;</span><br><span class="line">    <span class="keyword">this</span>.TITLE = <span class="keyword">this</span>.$route.query.name;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    timeupdate(e) &#123;</span><br><span class="line">      <span class="keyword">if</span> (localStorage.getItem(e.target.currentSrc)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.first &amp;&amp; e.target.currentTime &lt; Number(localStorage.getItem(e.target.currentSrc))) &#123;</span><br><span class="line">          <span class="keyword">this</span>.$refs.audio.play()</span><br><span class="line">          <span class="keyword">this</span>.$refs.audio.currentTime = localStorage.getItem(e.target.currentSrc) + <span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      localStorage.setItem(e.target.currentSrc, e.target.currentTime);</span><br><span class="line">      <span class="keyword">this</span>.first = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio</a></p><p><a href="https://www.yuque.com/chenshier/chuyi/cl0x98" target="_blank" rel="noopener">https://www.yuque.com/chenshier/chuyi/cl0x98</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;音频打开播放过后，再次进入需要跳到上次播放的位置&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>NestJs返回统一的数据格式</title>
    <link href="https://blog.afacode.top/2020/02/09/nestjs-response-format/"/>
    <id>https://blog.afacode.top/2020/02/09/nestjs-response-format/</id>
    <published>2020-02-09T03:00:58.000Z</published>
    <updated>2023-07-13T15:06:15.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="返回的数据格式"><a href="#返回的数据格式" class="headerlink" title="返回的数据格式"></a>返回的数据格式</h2><h3 id="直接返回的数据格式"><a href="#直接返回的数据格式" class="headerlink" title="直接返回的数据格式"></a>直接返回的数据格式</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"username"</span>: <span class="string">"string"</span>,</span><br><span class="line">  <span class="attr">"access_token"</span>: <span class="string">"XXX"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自己包装返回的数据格式"><a href="#自己包装返回的数据格式" class="headerlink" title="自己包装返回的数据格式"></a>自己包装返回的数据格式</h3><blockquote><p>成功的格式</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"string"</span>,</span><br><span class="line">    <span class="attr">"access_token"</span>: <span class="string">"XXX"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"请求成功"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>出错后的格式</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"statusCode"</span>: <span class="number">401</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"error"</span>: <span class="string">"Client Error"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"请求失败"</span>,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"url"</span>: <span class="string">"/api/auth/profile"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拦截全部的错误请求-统一返回格式"><a href="#拦截全部的错误请求-统一返回格式" class="headerlink" title="拦截全部的错误请求,统一返回格式"></a>拦截全部的错误请求,统一返回格式</h2><p>src/core/filter/http-exception.filter’;</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">日志代码去掉</span><br><span class="line"><span class="keyword">import</span> &#123; ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Request, Response &#125; <span class="keyword">from</span> <span class="string">'express'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Logger &#125; <span class="keyword">from</span> <span class="string">'../../utils/log4js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Catch</span>(HttpException)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HttpExceptionFilter <span class="keyword">implements</span> ExceptionFilter &#123;</span><br><span class="line">  <span class="keyword">catch</span>(exception: HttpException, host: ArgumentsHost) &#123;</span><br><span class="line">    <span class="keyword">const</span> ctx = host.switchToHttp();</span><br><span class="line">    <span class="keyword">const</span> response = ctx.getResponse&lt;Response&gt;();</span><br><span class="line">    <span class="keyword">const</span> request = ctx.getRequest&lt;Request&gt;();</span><br><span class="line">    <span class="keyword">const</span> status =</span><br><span class="line">      exception <span class="keyword">instanceof</span> HttpException</span><br><span class="line">        ? exception.getStatus()</span><br><span class="line">        : HttpStatus.INTERNAL_SERVER_ERROR;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> logFormat = <span class="string">`Request original url: <span class="subst">$&#123;request.originalUrl&#125;</span> Method: <span class="subst">$&#123;request.method&#125;</span> IP: <span class="subst">$&#123;request.ip&#125;</span> Status code: <span class="subst">$&#123;status&#125;</span> Response: <span class="subst">$&#123;exception.toString()&#125;</span>`</span>;</span><br><span class="line">    Logger.info(logFormat);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> message = exception.message.message ? exception.message.message : <span class="string">`<span class="subst">$&#123;status &gt;= <span class="number">500</span> ? <span class="string">'Service Error'</span> : <span class="string">'Client Error'</span>&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">const</span> errorResponse = &#123;</span><br><span class="line">      statusCode: status,</span><br><span class="line">      data: &#123; error: message &#125;,</span><br><span class="line">      message: <span class="string">'请求失败'</span>,</span><br><span class="line">      code: <span class="number">1</span>, <span class="comment">// 自定义code</span></span><br><span class="line">      url: request.originalUrl, <span class="comment">// 错误的url地址</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 设置返回的状态码、请求头、发送错误信息</span></span><br><span class="line">    response.status(status);</span><br><span class="line">    response.header(<span class="string">'Content-Type'</span>, <span class="string">'application/json; charset=utf-8'</span>);</span><br><span class="line">    response.send(errorResponse);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.ts 全局引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; HttpExceptionFilter &#125; <span class="keyword">from</span> <span class="string">'./core/filter/http-exception.filter'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// 全局注册错误的过滤器</span></span><br><span class="line">  app.useGlobalFilters(<span class="keyword">new</span> HttpExceptionFilter());</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure><h2 id="统一请求成功的返回数据"><a href="#统一请求成功的返回数据" class="headerlink" title="统一请求成功的返回数据"></a>统一请求成功的返回数据</h2><p>src/core/interceptor/transform.interceptor.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">日志代码去掉</span><br><span class="line"><span class="keyword">import</span> &#123; Injectable, NestInterceptor, ExecutionContext, CallHandler &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Observable &#125; <span class="keyword">from</span> <span class="string">'rxjs'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Logger &#125; <span class="keyword">from</span> <span class="string">'../../utils/log4js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> TransformInterceptor <span class="keyword">implements</span> NestInterceptor &#123;</span><br><span class="line">  <span class="keyword">public</span> intercept(context: ExecutionContext, next: CallHandler): Observable&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> req = context.getArgByIndex(<span class="number">1</span>).req;</span><br><span class="line">    <span class="keyword">return</span> next.handle().pipe(</span><br><span class="line">      map(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> logFormat = <span class="string">`</span></span><br><span class="line"><span class="string">          Request original url: <span class="subst">$&#123;req.originalUrl&#125;</span></span></span><br><span class="line"><span class="string">          Method: <span class="subst">$&#123;req.method&#125;</span></span></span><br><span class="line"><span class="string">          IP: <span class="subst">$&#123;req.ip&#125;</span></span></span><br><span class="line"><span class="string">          User: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(req.user)&#125;</span></span></span><br><span class="line"><span class="string">          Response data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span></span></span><br><span class="line"><span class="string">         `</span>;</span><br><span class="line">        Logger.info(logFormat);</span><br><span class="line">        Logger.access(logFormat);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          data,</span><br><span class="line">          code: <span class="number">0</span>,</span><br><span class="line">          message: <span class="string">'请求成功'</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>main.ts 全局注册</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; TransformInterceptor &#125; <span class="keyword">from</span> <span class="string">'./core/interceptor/transform.interceptor'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// 全局注册拦截器</span></span><br><span class="line">  app.useGlobalInterceptors(<span class="keyword">new</span> TransformInterceptor());</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;返回的数据格式&quot;&gt;&lt;a href=&quot;#返回的数据格式&quot; class=&quot;headerlink&quot; title=&quot;返回的数据格式&quot;&gt;&lt;/a&gt;返回的数据格式&lt;/h2&gt;&lt;h3 id=&quot;直接返回的数据格式&quot;&gt;&lt;a href=&quot;#直接返回的数据格式&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="NestJs" scheme="https://blog.afacode.top/tags/NestJs/"/>
    
  </entry>
  
  <entry>
    <title>nestjs用户角色权限</title>
    <link href="https://blog.afacode.top/2020/01/25/nestjs-typeorm-mysql-rbac/"/>
    <id>https://blog.afacode.top/2020/01/25/nestjs-typeorm-mysql-rbac/</id>
    <published>2020-01-25T08:42:55.000Z</published>
    <updated>2023-07-13T15:06:15.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>默认你已经初步了解nestjs概念和使用方式。<br>本文使用 typeorm连接mysql，加密使用bcrypt，校验使用 password基础库，使用jsonwebtoken, 文档swagger。<br>本文无任何参考价值，后期完成后直接将代码发布。<br>视频参考 <a href="https://www.bilibili.com/video/BV1sJ411n7PE" target="_blank" rel="noopener">Nestjs开发《全栈之巅》第二章 - p7-基于NestJs+Passport策略的用户登录</a></p><h2 id="基础文档"><a href="#基础文档" class="headerlink" title="基础文档"></a>基础文档</h2><p><a href="https://nestjs.com/" target="_blank" rel="noopener">官网</a><br><a href="https://docs.nestjs.cn/6/introduction" target="_blank" rel="noopener">nestjs 中文</a></p><h2 id="认证（Authentication）"><a href="#认证（Authentication）" class="headerlink" title="认证（Authentication）"></a>认证（Authentication）</h2><p><a href="https://docs.nestjs.com/techniques/authentication#authentication" target="_blank" rel="noopener">authentication</a><br><a href="https://docs.nestjs.cn/6/techniques?id=%E8%AE%A4%E8%AF%81%EF%BC%88authentication%EF%BC%89" target="_blank" rel="noopener">认证</a></p><h2 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h2><p><a href="https://blog.csdn.net/qq383264679/article/details/51745522" target="_blank" rel="noopener">RBCA权限表的设计</a></p><p>我问使用最简单的 用户-角色-权限<br>user</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Entity, PrimaryGeneratedColumn, Column,</span><br><span class="line">    CreateDateColumn, UpdateDateColumn, ManyToMany,</span><br><span class="line">    JoinTable, JoinColumn, BeforeInsert, BeforeUpdate &#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; RoleEntity &#125; <span class="keyword">from</span> <span class="string">'./role.entity'</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> bcrypt <span class="keyword">from</span> <span class="string">'bcrypt'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span>(<span class="string">'user'</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserEntity &#123;</span><br><span class="line">  <span class="meta">@PrimaryGeneratedColumn</span>(<span class="string">'uuid'</span>)</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>(<span class="string">'varchar'</span>, &#123;unique: <span class="literal">true</span>&#125;)</span><br><span class="line">  username: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>(<span class="string">'varchar'</span>)</span><br><span class="line">  password: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@CreateDateColumn</span>(&#123; <span class="keyword">type</span>: <span class="string">'timestamp'</span>, name: <span class="string">'create_time'</span>, comment: <span class="string">'创建时间'</span> &#125;)</span><br><span class="line">  createTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@UpdateDateColumn</span>(&#123; <span class="keyword">type</span>: <span class="string">'timestamp'</span>, name: <span class="string">'update_time'</span>, comment: <span class="string">'更新时间'</span> &#125;)</span><br><span class="line">  updateTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 无中间实体表的配置</span></span><br><span class="line">   <span class="meta">@ManyToMany</span>(<span class="function"><span class="params">type</span> =&gt;</span> RoleEntity, <span class="function"><span class="params">role</span> =&gt;</span> role.users)</span><br><span class="line">   <span class="meta">@JoinTable</span>(&#123;</span><br><span class="line">      name: <span class="string">'user_role'</span>,</span><br><span class="line">      joinColumns: [</span><br><span class="line">          &#123;name: <span class="string">'user_id'</span>&#125;,</span><br><span class="line">      ],</span><br><span class="line">      inverseJoinColumns: [</span><br><span class="line">          &#123;name: <span class="string">'role_id'</span>&#125;,</span><br><span class="line">      ],</span><br><span class="line">   &#125;)</span><br><span class="line">   roles: RoleEntity[];</span><br><span class="line"></span><br><span class="line">   <span class="meta">@BeforeInsert</span>()</span><br><span class="line">   <span class="meta">@BeforeUpdate</span>()</span><br><span class="line">   <span class="keyword">async</span> hashPassword() &#123;</span><br><span class="line">       <span class="keyword">this</span>.password = <span class="keyword">await</span> bcrypt.hash(<span class="keyword">this</span>.password, <span class="number">12</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">async</span> comparePassword(password: <span class="built_in">string</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> bcrypt.compare(password, <span class="keyword">this</span>.password);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>role</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToMany, JoinTable &#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; UserEntity &#125; <span class="keyword">from</span> <span class="string">'./user.entity'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; PermissionEntity &#125; <span class="keyword">from</span> <span class="string">'./permission.entity'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span>(<span class="string">'role'</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> RoleEntity &#123;</span><br><span class="line">  <span class="meta">@PrimaryGeneratedColumn</span>(<span class="string">'uuid'</span>)</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>(<span class="string">'varchar'</span>, &#123;unique: <span class="literal">true</span>&#125;)</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>(<span class="string">'varchar'</span>)</span><br><span class="line">  alias: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>(<span class="string">'varchar'</span>)</span><br><span class="line">  desc: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@CreateDateColumn</span>(&#123; <span class="keyword">type</span>: <span class="string">'timestamp'</span>, name: <span class="string">'create_time'</span>, comment: <span class="string">'创建时间'</span> &#125;)</span><br><span class="line">  createTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@UpdateDateColumn</span>(&#123; <span class="keyword">type</span>: <span class="string">'timestamp'</span>, name: <span class="string">'update_time'</span>, comment: <span class="string">'更新时间'</span> &#125;)</span><br><span class="line">  updateTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ManyToMany</span>(<span class="function"><span class="params">type</span> =&gt;</span> UserEntity, <span class="function"><span class="params">user</span> =&gt;</span> user.roles, &#123; cascade: <span class="literal">true</span> &#125;)</span><br><span class="line">  users: UserEntity[];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 无中间实体表的配置</span></span><br><span class="line">  <span class="meta">@ManyToMany</span>(<span class="function"><span class="params">type</span> =&gt;</span> PermissionEntity, <span class="function"><span class="params">perm</span> =&gt;</span> perm.roles)</span><br><span class="line">  <span class="meta">@JoinTable</span>(&#123;</span><br><span class="line">     name: <span class="string">'role_perm'</span>,</span><br><span class="line">     joinColumns: [</span><br><span class="line">         &#123;name: <span class="string">'role_id'</span>&#125;,</span><br><span class="line">     ],</span><br><span class="line">     inverseJoinColumns: [</span><br><span class="line">         &#123;name: <span class="string">'perm_id'</span>&#125;,</span><br><span class="line">     ],</span><br><span class="line">  &#125;)</span><br><span class="line">  perms: PermissionEntity[];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>permission</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToMany &#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; RoleEntity &#125; <span class="keyword">from</span> <span class="string">'./role.entity'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span>(<span class="string">'permission'</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> PermissionEntity &#123;</span><br><span class="line">  <span class="meta">@PrimaryGeneratedColumn</span>()</span><br><span class="line">  id: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>()</span><br><span class="line">  pid: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>()</span><br><span class="line">  url: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>()</span><br><span class="line">  code: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>()</span><br><span class="line">  perms: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Column</span>()</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@CreateDateColumn</span>(&#123; <span class="keyword">type</span>: <span class="string">'timestamp'</span>, name: <span class="string">'create_time'</span>, comment: <span class="string">'创建时间'</span> &#125;)</span><br><span class="line">  createTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@UpdateDateColumn</span>(&#123; <span class="keyword">type</span>: <span class="string">'timestamp'</span>, name: <span class="string">'update_time'</span>, comment: <span class="string">'更新时间'</span> &#125;)</span><br><span class="line">  updateTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ManyToMany</span>(<span class="function"><span class="params">type</span> =&gt;</span> RoleEntity, <span class="function"><span class="params">role</span> =&gt;</span> role.perms, &#123; cascade: <span class="literal">true</span> &#125;)</span><br><span class="line">  roles: RoleEntity[];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编码逻辑"><a href="#编码逻辑" class="headerlink" title="编码逻辑"></a>编码逻辑</h2><p>用户登录后获取token, 每次请求都带token，在需要验证权限（guard）的地方，解析token，获取到用户的角色信息，在根据角色信息查看所对应的权限，查看所对应的权限是否有请求需要的权限。有就通过，没有就不通过</p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>local.strategy.ts<br>主要作用 获取到用户名和密码，查找验证用户，通过后会将用户信息挂载到request请求上，request.user。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Strategy &#125; <span class="keyword">from</span> <span class="string">'passport-local'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; PassportStrategy &#125; <span class="keyword">from</span> <span class="string">'@nestjs/passport'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Injectable, UnauthorizedException &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AuthService &#125; <span class="keyword">from</span> <span class="string">'./auth.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> LocalStrategy <span class="keyword">extends</span> PassportStrategy(Strategy, <span class="string">'local'</span>) &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> readonly authService: AuthService</span>) &#123;</span><br><span class="line">    <span class="comment">// 客户端请求体传递过来的参数名称，默认为 username / password</span></span><br><span class="line">    <span class="keyword">super</span>(&#123;</span><br><span class="line">      usernameField: <span class="string">'username'</span>,</span><br><span class="line">      passwordField: <span class="string">'password'</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 默认调用 validate() 参数为   客户端请求体传递过来的参数名称 返回用户信息</span></span><br><span class="line">  <span class="keyword">async</span> validate(username: <span class="built_in">string</span>, passport: <span class="built_in">string</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="keyword">this</span>.authService.validateUser(username, passport);</span><br><span class="line">    <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnauthorizedException();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jwt.strategy.ts<br>主要作用 生成token 和验证 token</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; PassportStrategy &#125; <span class="keyword">from</span> <span class="string">'@nestjs/passport'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ExtractJwt, Strategy &#125; <span class="keyword">from</span> <span class="string">'passport-jwt'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; jwtConstants &#125; <span class="keyword">from</span> <span class="string">'./constants'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AuthService &#125; <span class="keyword">from</span> <span class="string">'./auth.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> JwtStrategy <span class="keyword">extends</span> PassportStrategy(Strategy, <span class="string">'jwt'</span>) &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 这里的构造函数向父类传递了授权时必要的参数，在实例化时，父类会得知授权时，客户端的请求必须使用 Authorization 作为请求头，</span></span><br><span class="line"><span class="comment">   * 而这个请求头的内容前缀也必须为 Bearer，在解码授权令牌时，使用秘钥 secretOrKey: 'secretKey' 来将授权令牌解码为创建令牌时的 payload。</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> readonly authService: AuthService</span>) &#123;</span><br><span class="line">    <span class="keyword">super</span>(&#123;</span><br><span class="line">      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),</span><br><span class="line">      ignoreExpiration: <span class="literal">false</span>,</span><br><span class="line">      secretOrKey: jwtConstants.secret,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * validate 方法实现了父类的抽象方法，在解密授权令牌成功后，即本次请求的授权令牌是没有过期的，</span></span><br><span class="line"><span class="comment">   * 此时会将解密后的 payload 作为参数传递给 validate 方法，这个方法需要做具体的授权逻辑，比如这里我使用了通过用户名查找用户是否存在。</span></span><br><span class="line"><span class="comment">   * 当用户不存在时，说明令牌有误，可能是被伪造了，此时需抛出 UnauthorizedException 未授权异常。</span></span><br><span class="line"><span class="comment">   * 当用户存在时，会将 user 对象添加到 req 中，在之后的 req 对象中，可以使用 req.user 获取当前登录用户。</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">async</span> validate(id) &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="keyword">this</span>.authService.findUserById(id);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>role.guard.ts<br>有验证角色权限的逻辑<br>token已经在jwt.strategy.ts验证过token的有效性及将token解析挂载到了request，无用户信息直接返回。<br>获取到用户的角色，根据角色查看权限，在比对请求路由的权限是否在用户所属权限里面，没有就返回权限不足，有就返回用户信息</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable, CanActivate, ExecutionContext &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Reflector &#125; <span class="keyword">from</span> <span class="string">'@nestjs/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Request &#125; <span class="keyword">from</span> <span class="string">'express'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> DemoGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> readonly reflector: Reflector</span>) &#123;&#125; </span><br><span class="line"></span><br><span class="line">  canActivate(context: ExecutionContext): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> request: Request = context.switchToHttp().getRequest();</span><br><span class="line">    <span class="keyword">const</span> user = (request <span class="keyword">as</span> <span class="built_in">any</span>).user;</span><br><span class="line">    <span class="keyword">if</span> (!user) &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">    <span class="comment">// 当前请求所需权限</span></span><br><span class="line">    <span class="keyword">const</span> perms = <span class="keyword">this</span>.reflector.get&lt;<span class="built_in">string</span>[]&gt;(<span class="string">'perms'</span>, context.getHandler());</span><br><span class="line">    <span class="keyword">if</span> (!perms) &#123;</span><br><span class="line">      <span class="comment">// 空， 标识不需要权限</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取用户角色的权限</span></span><br><span class="line">    <span class="keyword">const</span> userPerms = <span class="keyword">await</span> .... <span class="comment">// 一个接口 到数据库获取用户角色对应的权限</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> hasPerm = <span class="function"><span class="params">()</span> =&gt;</span> userPerms.some(<span class="function">(<span class="params">perm</span>) =&gt;</span> perms.includes(perm))</span><br><span class="line">    <span class="keyword">return</span> user &amp;&amp; hasPerm();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;默认你已经初步了解nestjs概念和使用方式。&lt;br&gt;本文使用 typeorm连接mysql，加密使用bcrypt，校验使用 passwor</summary>
      
    
    
    
    
    <category term="mysql" scheme="https://blog.afacode.top/tags/mysql/"/>
    
    <category term="NestJs" scheme="https://blog.afacode.top/tags/NestJs/"/>
    
    <category term="typeorm" scheme="https://blog.afacode.top/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>解决electron无法安装问题</title>
    <link href="https://blog.afacode.top/2019/12/28/electron-install/"/>
    <id>https://blog.afacode.top/2019/12/28/electron-install/</id>
    <published>2019-12-28T07:42:57.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="electron-无法安装解决方法"><a href="#electron-无法安装解决方法" class="headerlink" title="electron 无法安装解决方法"></a>electron 无法安装解决方法</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">打开</span><br><span class="line">vim ~<span class="regexp">/.npmrc</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">添加</span></span><br><span class="line"><span class="regexp">electron_mirror="https:/</span><span class="regexp">/npm.taobao.org/mirrors</span><span class="regexp">/electron/</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">source ~/.npmrc</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;electron-无法安装解决方法&quot;&gt;&lt;a href=&quot;#electron-无法安装解决方法&quot; class=&quot;headerlink&quot; title=&quot;electron 无法安装解决方法&quot;&gt;&lt;/a&gt;electron 无法安装解决方法&lt;/h2&gt;&lt;figure class</summary>
      
    
    
    
    
    <category term="npm" scheme="https://blog.afacode.top/tags/npm/"/>
    
    <category term="electron" scheme="https://blog.afacode.top/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>nuxt服务部署SSR</title>
    <link href="https://blog.afacode.top/2019/12/18/nuxt-deploy-pm2/"/>
    <id>https://blog.afacode.top/2019/12/18/nuxt-deploy-pm2/</id>
    <published>2019-12-18T09:38:06.000Z</published>
    <updated>2023-07-13T15:06:15.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nuxt-部署方式"><a href="#nuxt-部署方式" class="headerlink" title="nuxt 部署方式"></a>nuxt 部署方式</h2><ol><li>nuxt generate 静态化 (预渲染) 用于静态站点的部署 没有什么要说的</li><li>nuxt start 服务端渲染(通过SSR)</li></ol><h2 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h2><p>npm run build 得到.nuxt</p><h2 id="需要到服务器的文件"><a href="#需要到服务器的文件" class="headerlink" title="需要到服务器的文件"></a>需要到服务器的文件</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nuxt</span></span><br><span class="line"><span class="selector-tag">package</span><span class="selector-class">.json</span></span><br><span class="line"><span class="selector-tag">nuxt</span><span class="selector-class">.config</span><span class="selector-class">.js</span></span><br><span class="line"><span class="selector-tag">static</span></span><br></pre></td></tr></table></figure><h2 id="服务器安装依赖"><a href="#服务器安装依赖" class="headerlink" title="服务器安装依赖"></a>服务器安装依赖</h2><p>npm install -production</p><h2 id="服务器启动服务-默认-3000-端口"><a href="#服务器启动服务-默认-3000-端口" class="headerlink" title="服务器启动服务 默认 3000 端口"></a>服务器启动服务 默认 3000 端口</h2><p>npm run start</p><h2 id="使用-pm2-启动服务在服务端执行"><a href="#使用-pm2-启动服务在服务端执行" class="headerlink" title="使用 pm2 启动服务在服务端执行"></a>使用 pm2 启动服务在服务端执行</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">pm2</span> <span class="comment">start</span> <span class="comment">npm</span> --<span class="comment">name</span> <span class="comment">nuxt</span><span class="literal">-</span><span class="comment">demo</span> -- <span class="comment">start</span></span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="attribute">server_name</span> afacode.top www.afacode.top; <span class="comment"># 域名</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="string">"upgrade"</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line">      <span class="attribute">proxy_cache_bypass</span> <span class="variable">$http_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_pass</span> http://127.0.0.1:3000; <span class="comment"># 反向代理到启动的服务</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx-重启"><a href="#nginx-重启" class="headerlink" title="nginx 重启"></a>nginx 重启</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><h2 id="完了"><a href="#完了" class="headerlink" title="完了"></a>完了</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;nuxt-部署方式&quot;&gt;&lt;a href=&quot;#nuxt-部署方式&quot; class=&quot;headerlink&quot; title=&quot;nuxt 部署方式&quot;&gt;&lt;/a&gt;nuxt 部署方式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;nuxt generate 静态化 (预渲染) 用于静态站点的部署 没有</summary>
      
    
    
    
    
    <category term="nuxt" scheme="https://blog.afacode.top/tags/nuxt/"/>
    
    <category term="pm2" scheme="https://blog.afacode.top/tags/pm2/"/>
    
  </entry>
  
  <entry>
    <title>pm2基础使用及简单配置</title>
    <link href="https://blog.afacode.top/2019/12/18/pm2-use/"/>
    <id>https://blog.afacode.top/2019/12/18/pm2-use/</id>
    <published>2019-12-18T06:34:42.000Z</published>
    <updated>2023-07-13T15:06:15.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>npm install -g pm2</code></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">pm2 list</span><br><span class="line"></span><br><span class="line">pm2 <span class="keyword">start</span> app.js</span><br><span class="line">pm2 restart app_name/<span class="keyword">id</span></span><br><span class="line">pm2 <span class="keyword">stop</span> app_name/<span class="keyword">id</span></span><br><span class="line">pm2 <span class="keyword">delete</span> app_name/<span class="keyword">id</span></span><br><span class="line"></span><br><span class="line">pm2 <span class="keyword">log</span></span><br><span class="line">pm2 info</span><br><span class="line">pm2 monit</span><br><span class="line"></span><br><span class="line">pm2 <span class="keyword">start</span> app.js -i <span class="number">4</span>  <span class="comment"># 后台运行pm2，启动4个app.js</span></span><br><span class="line">                         <span class="comment"># 也可以把'max' 参数传递给 start</span></span><br><span class="line">                         <span class="comment"># 正确的进程数目依赖于Cpu的核心数目</span></span><br><span class="line">pm2 <span class="keyword">start</span> app.js <span class="comment">--name my-api # 命名进程</span></span><br><span class="line">pm2 <span class="keyword">list</span>               <span class="comment"># 显示所有进程状态</span></span><br><span class="line">pm2 monit              <span class="comment"># 监视所有进程</span></span><br><span class="line">pm2 <span class="keyword">logs</span>               <span class="comment"># 显示所有进程日志</span></span><br><span class="line">pm2 <span class="keyword">stop</span> <span class="keyword">all</span>           <span class="comment"># 停止所有进程</span></span><br><span class="line">pm2 restart <span class="keyword">all</span>        <span class="comment"># 重启所有进程</span></span><br><span class="line">pm2 reload <span class="keyword">all</span>         <span class="comment"># 0 秒停机重载进程 (用于 NETWORKED 进程) 0 秒停机重载：这项功能允许你重新载入代码而不用失去请求连接。</span></span><br><span class="line">pm2 <span class="keyword">stop</span> <span class="number">0</span>             <span class="comment"># 停止指定的进程</span></span><br><span class="line">pm2 restart <span class="number">0</span>          <span class="comment"># 重启指定的进程</span></span><br><span class="line">pm2 <span class="keyword">startup</span>            <span class="comment"># 产生 init 脚本 保持进程活着</span></span><br><span class="line">pm2 web                <span class="comment"># 运行健壮的 computer API endpoint (http://localhost:9615)</span></span><br><span class="line">pm2 <span class="keyword">delete</span> <span class="number">0</span>           <span class="comment"># 杀死指定的进程</span></span><br><span class="line">pm2 <span class="keyword">delete</span> <span class="keyword">all</span>         <span class="comment"># 杀死全部进程</span></span><br></pre></td></tr></table></figure><blockquote><p>运行进程的不同方式</p></blockquote><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--watch：监听应用目录的变化，一旦发生变化，自动重启。如果要精确监听、不见听的目录，最好通过配置文件。</span></span><br><span class="line">-i <span class="comment">--instances：启用多少个实例，可用于负载均衡。如果-i 0或者-i max，则根据当前机器核数确定实例数目。</span></span><br><span class="line"><span class="comment">--ignore-watch：排除监听的目录/文件，可以是特定的文件名，也可以是正则。比如--ignore-watch="test node_modules "some scripts""</span></span><br><span class="line">-n <span class="comment">--name：应用的名称。查看应用信息的时候可以用到。</span></span><br><span class="line">-o <span class="comment">--output &lt;path&gt;：标准输出日志文件的路径。</span></span><br><span class="line">-e <span class="comment">--error &lt;path&gt;：错误输出日志文件的路径。</span></span><br><span class="line"></span><br><span class="line">pm2 <span class="built_in">start</span> app.js -i <span class="built_in">max</span>    <span class="comment"># 根据有效CPU数目启动最大进程数目</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.js -i <span class="number">3</span>      <span class="comment"># 启动3个进程</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.js -x        <span class="comment">#用fork模式启动 app.js 而不是使用 cluster</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.js -x <span class="comment">-- -a 23   # 用fork模式启动 app.js 并且传递参数 (-a 23)</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.js <span class="comment">--name serverone  # 启动一个进程并把它命名为 serverone</span></span><br><span class="line">pm2 <span class="built_in">stop</span> serverone       <span class="comment"># 停止 serverone 进程</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.json        <span class="comment"># 启动进程, 在 app.json里设置选项</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.js -i <span class="built_in">max</span> <span class="comment">-- -a 23   #在--之后给 app.js 传递参数</span></span><br><span class="line">pm2 <span class="built_in">start</span> app.js -i <span class="built_in">max</span> -e err.<span class="built_in">log</span> -o out.<span class="built_in">log</span>  <span class="comment"># 启动 并 生成一个配置文件</span></span><br></pre></td></tr></table></figure><h2 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h2><p>启动 <code>pm2 start pm2.conf.json</code></p><p>pm2.conf.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"apps"</span>: [&#123;</span><br><span class="line">    <span class="attr">"name"</span>        : <span class="string">"fis-receiver"</span>,  <span class="comment">// 应用名称</span></span><br><span class="line">    <span class="attr">"script"</span>      : <span class="string">"./bin/www"</span>,  <span class="comment">// 实际启动脚本</span></span><br><span class="line">    <span class="attr">"cwd"</span>         : <span class="string">"./"</span>,  <span class="comment">// 当前工作路径</span></span><br><span class="line">    <span class="attr">"watch"</span>: [  <span class="comment">// 监控变化的目录，一旦变化，自动重启</span></span><br><span class="line">      <span class="string">"bin"</span>,</span><br><span class="line">      <span class="string">"routers"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"ignore_watch"</span> : [  <span class="comment">// 从监控目录中排除</span></span><br><span class="line">      <span class="string">"node_modules"</span>,</span><br><span class="line">      <span class="string">"logs"</span>,</span><br><span class="line">      <span class="string">"public"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"watch"</span>: <span class="literal">true</span>, <span class="comment">// 是否监听重启，</span></span><br><span class="line">    <span class="attr">"instances"</span>: <span class="number">4</span>, <span class="comment">// 几核，多进程 多进程之间内存无法共享，使用redis共享数据</span></span><br><span class="line">    <span class="attr">"error_file"</span> : <span class="string">"./logs/app-err.log"</span>,  <span class="comment">// 错误日志路径</span></span><br><span class="line">    <span class="attr">"out_file"</span>   : <span class="string">"./logs/app-out.log"</span>,  <span class="comment">// 普通日志路径</span></span><br><span class="line">    <span class="attr">"log_date_format"</span>: <span class="string">"YYYY-MM-DD HH:mm:ss"</span>, <span class="comment">// 日志输出时间格式</span></span><br><span class="line">    <span class="attr">"env"</span>: &#123;</span><br><span class="line">        <span class="attr">"NODE_ENV"</span>: <span class="string">"production"</span>  <span class="comment">// 环境参数，当前指定为生产环境</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;code&gt;npm install -g pm2&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; clas</summary>
      
    
    
    
    
    <category term="node" scheme="https://blog.afacode.top/tags/node/"/>
    
    <category term="pm2" scheme="https://blog.afacode.top/tags/pm2/"/>
    
  </entry>
  
  <entry>
    <title>oh-my-zsh更新出错</title>
    <link href="https://blog.afacode.top/2019/12/16/oh-my-zsh-update-error/"/>
    <id>https://blog.afacode.top/2019/12/16/oh-my-zsh-update-error/</id>
    <published>2019-12-16T00:50:39.000Z</published>
    <updated>2023-07-13T15:06:15.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Oh My Zsh] Would you like to update? [Y/n]: y</span><br><span class="line">Updating Oh My Zsh</span><br><span class="line"><span class="keyword">error: </span>cannot pull with rebase: You have unstaged changes.</span><br><span class="line"><span class="keyword">error: </span>please commit or stash them.</span><br><span class="line">There was an error updating. Try again later?</span><br></pre></td></tr></table></figure><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>我的主题更改没有提交</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. <span class="keyword">cd</span> ~/.oh-my-zsh</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. git status</span><br><span class="line"></span><br><span class="line">On branch master</span><br><span class="line">Your branch <span class="keyword">is</span> <span class="keyword">up</span> <span class="keyword">to</span> date with <span class="string">'origin/master'</span>.</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commi<span class="variable">t:</span></span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will <span class="keyword">be</span> committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard <span class="keyword">changes</span> in working directory)</span><br><span class="line"></span><br><span class="line">modified:   themes/ys.zsh-theme</span><br><span class="line"></span><br><span class="line"><span class="keyword">no</span> <span class="keyword">changes</span> added <span class="keyword">to</span> commit (use <span class="string">"git add"</span> <span class="built_in">and</span>/<span class="built_in">or</span> <span class="string">"git commit -a"</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. git <span class="built_in">add</span> .</span><br><span class="line"></span><br><span class="line">git commit -<span class="keyword">m</span> <span class="string">"主题更改"</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. git stash</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>. upgrade_oh_my_zsh</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>. git stash <span class="keyword">pop</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;报错&quot;&gt;&lt;a href=&quot;#报错&quot; class=&quot;headerlink&quot; title=&quot;报错&quot;&gt;&lt;/a&gt;报错&lt;/h2&gt;&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VSCode生产效率插件</title>
    <link href="https://blog.afacode.top/2019/12/14/vscode-plugin/"/>
    <id>https://blog.afacode.top/2019/12/14/vscode-plugin/</id>
    <published>2019-12-14T09:36:43.000Z</published>
    <updated>2023-07-13T15:06:15.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VS-Code-生产效率插件"><a href="#VS-Code-生产效率插件" class="headerlink" title="VS Code 生产效率插件"></a>VS Code 生产效率插件</h2><ul><li><p><code>open-in-browser</code> 在浏览器中查看<br>VS Code 没有提供直接在浏览器中运行程序的内置功能，所以我们需要安装此插件，在浏览器中查看我们的程序运行效果</p></li><li><p><code>Live Server</code> 实时预览<br>安装这个插件之后，我们在编辑器中修改代码，按 Ctrl+S 保存，修改效果就会实时同步，显示在浏览器中，再不用手动刷新</p></li><li><p><code>Auto Close Tag</code> 自动闭合标签<br>输入标签名称的时候自动生成闭合标签，</p></li><li><p><code>Auto Rename Tag</code> 尾部闭合标签同步修改<br>自动检测配对标签，同步修改</p></li><li><p><code>Bracket Pair Colorizer 2</code> 用不同颜色高亮显示匹配的括号<br>对配对的括号进行着色，方便区分，未安装该插件之前括号统一都是白色的</p></li><li><p><code>Highlight Matching Tag</code> 高亮显示匹配标签<br>这个插件自动帮我们将选中的匹配标签高亮显示</p></li><li><p><code>Vscode-icons-mac</code> <code>Vscode-icons VSCode</code> 文件图标<br>可以帮助我们根据不同的文件类型生成对应的图标，这样我们在侧边栏查看文件列表的时候直接通过图标就可以区分文件类型</p></li><li><p><code>Code Spell Checker</code> 单词拼写检查<br>我们在编写代码的时候经常会不小心拼写错误造成软件运行失败，安装这个插件后会自动帮我们识别单词拼写错误并且给出修改建议，大大帮我们减轻了排除 bug 的压力</p></li><li><p><code>import Cost</code> 成本提示<br>这个插件可以在你导入工具包的时候提示这个包的体积，如果体积过大就需要考虑压缩包，为后期上线优化做准备</p></li><li><p><code>GitLens</code> 查看 Git 信息<br>将光标移到代码行上，即可显示当前行最近的 commit 信息和作者，多人开发的时候十分有用，责任到人，防止甩锅</p></li><li><p><code>Version Lens</code> 工具包版本信息<br>在 package.json 中显示你下载安装的 npm 工具包的版本信息，同时会告诉你当前包的最新版本。</p></li><li><p><code>WakaTime</code> 计算代码工作量<br>这是一款时间记录工具，它可以帮助你在 vs code 中记录有效的编程的时间 （用处不大）</p></li></ul><ul><li><p><code>Beautify</code>  <code>Prettier - Code formatter </code><br>打码美化/格式化</p></li><li><p><code>Comment Translate</code><br>注释翻译工具</p></li><li><p><code>Git Emoji Commit</code><br>git 提交添加表情包</p></li><li><p><code>LeetCode</code> 在 vscode 里面学习</p></li><li><p><code>Markdown Preview Enhanced</code> markdown 预览</p></li><li><p><code>qiniu-upload-image</code><br>编写 markdown 时候图片直接上传七牛云并获取到外链</p></li><li><p><code>stylelint</code></p></li><li><p><code>TSlint</code></p></li></ul><h2 id="具体语言工具"><a href="#具体语言工具" class="headerlink" title="具体语言工具"></a>具体语言工具</h2><ul><li><p><code>Maven for Java</code></p></li><li><p><code>Language Support for Java(TM) by Red Hat</code></p></li><li><p><code>ES7 React/Redux/GraphQL/React-Native snippets</code></p></li><li><p><code>React Native Tools</code></p></li><li><p><code>小程序助手</code></p></li><li><p><code>Vetur</code> </p></li><li><p><code>vue</code> </p></li><li><p><code>Vue VSCode Snippets</code> </p></li><li><p><code>vscode-element-helper</code></p></li><li><p><code>Vetur-wepy</code></p></li><li><p><code>Vscode NestJs Snippets</code></p></li><li><p><code>Sequelize VSCode Association Snippet</code></p></li><li><p><code>go</code></p></li><li><p><code>C/C++</code></p></li><li><p><code>docker</code></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;VS-Code-生产效率插件&quot;&gt;&lt;a href=&quot;#VS-Code-生产效率插件&quot; class=&quot;headerlink&quot; title=&quot;VS Code 生产效率插件&quot;&gt;&lt;/a&gt;VS Code 生产效率插件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;open-in</summary>
      
    
    
    
    
    <category term="vscode" scheme="https://blog.afacode.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>nestjs中使用typeorm-model-generator将数据库生成数据模型</title>
    <link href="https://blog.afacode.top/2019/12/06/nestjs-typeorm-model-generator/"/>
    <id>https://blog.afacode.top/2019/12/06/nestjs-typeorm-model-generator/</id>
    <published>2019-12-06T03:03:19.000Z</published>
    <updated>2023-07-13T15:06:15.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p><code>npm install -g typeorm-model-generator</code></p></blockquote><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="string">"script"</span>: &#123;</span><br><span class="line">  <span class="string">"db"</span>: <span class="string">"rm -rf entities &amp; npx typeorm-model-generator -h localhost -d nest -p 3306 -u root -x root -e mysql -o entities --noConfig true --ce pascal --cp camel"</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li><code>rm -rf entities</code>表示先删除文件夹entities</li><li><code>npx typeorm-model-generator</code>如果全局安装了就不需要加npx没有全局安装就加上去</li><li><code>-h 数据库地址 -d 数据库名字 -p 端口 -u 用户名 -x 密码 -e 数据库类型</code></li><li>-o entities表示输出到指定的文件夹</li><li><code>--noConfig true</code>表示不生成ormconfig.json和tsconfig.json文件</li><li><code>--ce pascal</code>表示将类名转换首字母是大写的驼峰命名</li><li><code>--cp camel</code>表示将数据库中的字段比如create_at转换为createAt</li><li>-a表示会继承一个BaseEntity的类,根据自己需求加</li></ul><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><blockquote><p>npm run db</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install -g typeorm-model-generator&lt;/code&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="node" scheme="https://blog.afacode.top/tags/node/"/>
    
    <category term="NestJs" scheme="https://blog.afacode.top/tags/NestJs/"/>
    
    <category term="typeorm" scheme="https://blog.afacode.top/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>(vetur) cannot find name template</title>
    <link href="https://blog.afacode.top/2019/11/30/vetur-cannot-find-name-template/"/>
    <id>https://blog.afacode.top/2019/11/30/vetur-cannot-find-name-template/</id>
    <published>2019-11-30T03:11:14.000Z</published>
    <updated>2023-07-13T15:06:15.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vscode</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Version:</span> <span class="number">1.40</span><span class="number">.2</span></span><br><span class="line"><span class="attr">Commit:</span> <span class="string">f359dd69833dd8800b54d458f6d37ab7c78df520</span></span><br><span class="line"><span class="attr">Date:</span> <span class="number">2019</span><span class="number">-11</span><span class="string">-25T14:52:45.129Z</span></span><br><span class="line"><span class="attr">Electron:</span> <span class="number">6.1</span><span class="number">.5</span></span><br><span class="line"><span class="attr">Chrome:</span> <span class="number">76.0</span><span class="number">.3809</span><span class="number">.146</span></span><br><span class="line"><span class="attr">Node.js:</span> <span class="number">12.4</span><span class="number">.0</span></span><br><span class="line"><span class="attr">V8:</span> <span class="number">7.6</span><span class="number">.303</span><span class="number">.31</span><span class="string">-electron.0</span></span><br><span class="line"><span class="attr">OS:</span> <span class="string">Darwin</span> <span class="string">x64</span> <span class="number">18.2</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">vetur:</span> <span class="number">0.22</span><span class="number">.6</span></span><br><span class="line"></span><br><span class="line"><span class="attr">language:</span> <span class="string">wpy(wepy小程序)</span></span><br></pre></td></tr></table></figure><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">..</span>.</span><br><span class="line">vetur: cannot <span class="builtin-name">find</span> name <span class="string">'template'</span></span><br><span class="line"><span class="built_in">..</span>.</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WechatIMG22-2019113011147.png" alt="报错" title="">                </div>                <div class="image-caption">报错</div>            </figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">script</span> 未指定lang类型</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WechatIMG23-20191130111418.png" alt="问题" title="">                </div>                <div class="image-caption">问题</div>            </figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line">&lt;script lang=<span class="string">"js"</span>&gt;</span><br><span class="line"><span class="string">...</span></span><br><span class="line">&lt;<span class="string">/script</span>&gt;</span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WechatIMG24-20191130111425.png" alt="解决" title="">                </div>                <div class="image-caption">解决</div>            </figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    
    <category term="vscode" scheme="https://blog.afacode.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>NestJs 下使用 TypeORM 分页查询问题</title>
    <link href="https://blog.afacode.top/2019/11/29/nestjs-typeorm-pagination/"/>
    <id>https://blog.afacode.top/2019/11/29/nestjs-typeorm-pagination/</id>
    <published>2019-11-29T15:43:27.000Z</published>
    <updated>2023-07-13T15:06:15.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NestJs-下使用-TypeORM-分页查询问题"><a href="#NestJs-下使用-TypeORM-分页查询问题" class="headerlink" title="NestJs 下使用 TypeORM 分页查询问题"></a>NestJs 下使用 TypeORM 分页查询问题</h2><p>开发应用程序时，大部分时间都需要分页功能。如果您的应用程序中有分页、页面滑块或无限滚动组件，则使用此选项。</p><h2 id="官方教程"><a href="#官方教程" class="headerlink" title="官方教程"></a><a href="http://typeorm.io/#/select-query-builder/using-pagination" target="_blank" rel="noopener">官方教程</a></h2><h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> users = <span class="keyword">await</span> getRepository(User)</span><br><span class="line">    .createQueryBuilder(<span class="string">"user"</span>)</span><br><span class="line">    .leftJoinAndSelect(<span class="string">"user.photos"</span>, <span class="string">"photo"</span>)</span><br><span class="line">    .take(<span class="number">10</span>)</span><br><span class="line">    .getManyAndCount();</span><br></pre></td></tr></table></figure><p>这将会查询前10条用户及其照片的数据。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getManyAndCount 返回一个长度为2的元组，[0] 是分页后的数据数组， [1] 是所有数据总数</span></span><br><span class="line"><span class="keyword">const</span> users = <span class="keyword">await</span> getRepository(User)</span><br><span class="line">    .createQueryBuilder(<span class="string">"user"</span>)</span><br><span class="line">    .leftJoinAndSelect(<span class="string">"user.photos"</span>, <span class="string">"photo"</span>)</span><br><span class="line">    .skip(<span class="number">10</span>)</span><br><span class="line">    .getManyAndCount();</span><br></pre></td></tr></table></figure><p>这将会查询除了前10条用户以外的所有人及其照片的数据。</p><p>您可以组合使用他们：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> users = <span class="keyword">await</span> getRepository(User)</span><br><span class="line">    .createQueryBuilder(<span class="string">"user"</span>)</span><br><span class="line">    .leftJoinAndSelect(<span class="string">"user.photos"</span>, <span class="string">"photo"</span>)</span><br><span class="line">    .skip(<span class="number">5</span>)</span><br><span class="line">    .take(<span class="number">10</span>)</span><br><span class="line">    .getManyAndCount();</span><br></pre></td></tr></table></figure><p>这将会在第6条记录开始查询10条记录，即查询6-16条用户及其照片的数据。</p><p>注意：**<code>take</code> 和 <code>skip</code> 可能看起来像 <code>limit</code> 和 <code>offset</code>，但它们不是。一旦您有更复杂的连接或子查询查询，<code>limit</code> 和 <code>offset</code> 可能无法正常工作。使用 <code>take</code> 和 <code>skip</code> 可以防止出现这些问题。**</p><h2 id="skip-take-与-offset-limit-的区别"><a href="#skip-take-与-offset-limit-的区别" class="headerlink" title="skip + take 与 offset + limit 的区别"></a>skip + take 与 offset + limit 的区别</h2><p>当查询中存在连接或子查询时，<code>skip + take</code> 的方式总是能正确的返回数据，而 <code>offset + limit</code> 返回的数据并不是我们期望的那样。所以查询分页数据时，应该使用 <code>skip + take</code>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;NestJs-下使用-TypeORM-分页查询问题&quot;&gt;&lt;a href=&quot;#NestJs-下使用-TypeORM-分页查询问题&quot; class=&quot;headerlink&quot; title=&quot;NestJs 下使用 TypeORM 分页查询问题&quot;&gt;&lt;/a&gt;NestJs 下使用 </summary>
      
    
    
    
    
    <category term="NestJs" scheme="https://blog.afacode.top/tags/NestJs/"/>
    
    <category term="TypeORM" scheme="https://blog.afacode.top/tags/TypeORM/"/>
    
  </entry>
  
  <entry>
    <title>target与currentTarget的区别</title>
    <link href="https://blog.afacode.top/2019/11/25/currentTarget/"/>
    <id>https://blog.afacode.top/2019/11/25/currentTarget/</id>
    <published>2019-11-25T11:58:25.000Z</published>
    <updated>2023-07-13T15:06:15.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转载：三言两语之js事件、事件流以及target、currentTarget、this那些事"><a href="#转载：三言两语之js事件、事件流以及target、currentTarget、this那些事" class="headerlink" title="转载：三言两语之js事件、事件流以及target、currentTarget、this那些事"></a><a href="https://www.cnblogs.com/54td/p/5936816.html" target="_blank" rel="noopener">转载：三言两语之js事件、事件流以及target、currentTarget、this那些事</a></h2><h2 id="异同"><a href="#异同" class="headerlink" title="异同"></a>异同</h2><ol><li>target:触发事件的某个具体对象，只会出现在事件流的目标阶段（谁触发谁命中，所以肯定是目标阶段）</li><li>currentTarget:绑定事件的对象，恒等于this，可能出现在事件流的任意一个阶段中</li><li>通常情况下terget和currentTarget是一致的，我们只要使用target即可，但有一种情况必须区分这三者的关系，那就是在父子嵌套的关系中，父元素绑定了事件，单击了子元素（根据事件流，在不阻止事件流的前提下他会传递至父元素，导致父元素的事件处理函数执行），这时候currentTarget指向的是父元素，因为他是绑定事件的对象，而target指向了子元素，因为他是触发事件的那个具体对象</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;转载：三言两语之js事件、事件流以及target、currentTarget、this那些事&quot;&gt;&lt;a href=&quot;#转载：三言两语之js事件、事件流以及target、currentTarget、this那些事&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vscode Could not create temporary directory 权限被拒绝</title>
    <link href="https://blog.afacode.top/2019/11/15/directory/"/>
    <id>https://blog.afacode.top/2019/11/15/directory/</id>
    <published>2019-11-15T01:03:15.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mac-VSCode-更新失败解决方法"><a href="#Mac-VSCode-更新失败解决方法" class="headerlink" title="Mac VSCode 更新失败解决方法"></a>Mac VSCode 更新失败解决方法</h2><p><code>Could not create temporary directory: 权限被拒绝</code></p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p><code>sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/</code></p><blockquote><p>重启之后，再更新</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Mac-VSCode-更新失败解决方法&quot;&gt;&lt;a href=&quot;#Mac-VSCode-更新失败解决方法&quot; class=&quot;headerlink&quot; title=&quot;Mac VSCode 更新失败解决方法&quot;&gt;&lt;/a&gt;Mac VSCode 更新失败解决方法&lt;/h2&gt;&lt;p&gt;&lt;c</summary>
      
    
    
    
    
    <category term="vscode" scheme="https://blog.afacode.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>react-native-splash-screen 在android启动屏使用</title>
    <link href="https://blog.afacode.top/2019/11/03/react-native-splash-screen-lanuch-android/"/>
    <id>https://blog.afacode.top/2019/11/03/react-native-splash-screen-lanuch-android/</id>
    <published>2019-11-03T09:11:14.000Z</published>
    <updated>2023-07-13T15:06:15.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-native-splash-screen-在android启动屏使用"><a href="#react-native-splash-screen-在android启动屏使用" class="headerlink" title="react-native-splash-screen 在android启动屏使用"></a>react-native-splash-screen 在android启动屏使用</h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XCode <span class="keyword">Version</span> <span class="number">10.2</span> (<span class="number">10</span>E125)</span><br><span class="line"><span class="string">"react"</span>: <span class="string">"16.8.6"</span>,</span><br><span class="line"><span class="string">"react-native"</span>: <span class="string">"0.60.5"</span>,</span><br><span class="line"><span class="string">"react-native-splash-screen"</span>: <span class="string">"^3.2.0"</span>,</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="keyword">add</span><span class="bash"> react-native-splash-screen</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import SplashScreen from <span class="string">'react-native-splash-screen'</span></span><br><span class="line"><span class="function"><span class="title">componentDidMount</span><span class="params">()</span></span> &#123;</span><br><span class="line">  SplashScreen.hide()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>导入启动屏资源</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20191107-170720@2x-2019117172440.png" alt="WX20191107-170720@2x-2019117172440" title="">                </div>                <div class="image-caption">WX20191107-170720@2x-2019117172440</div>            </figure></li><li><p>引用启动屏资源</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">./android/app/src/main/res/layout </span><br><span class="line">mkdir launch_screen.xml</span><br><span class="line"></span><br><span class="line">-----</span><br><span class="line">android:background="@mipmap/launch_screen" 为启动屏资源</span><br><span class="line">代码</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@mipmap/launch_screen"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">-----</span><br></pre></td></tr></table></figure></li><li><p>在启动APP时使用 onCreate</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/android/app/src/main/java/com/&#123;你的项目名&#125;/MainActivity.java</span><br><span class="line"></span><br><span class="line">新增</span><br><span class="line">------</span><br><span class="line">import android.os.Bundle;</span><br><span class="line"></span><br><span class="line">import org.devio.rn.splashscreen.SplashScreen;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends ReactActivity &#123;</span><br><span class="line"></span><br><span class="line"><span class="code">    ...</span></span><br><span class="line"><span class="code">    @Override</span></span><br><span class="line"><span class="code">    protected void onCreate(Bundle savedInstanceState) &#123;</span></span><br><span class="line"><span class="code">        SplashScreen.show(this); </span></span><br><span class="line"><span class="code">        super.onCreate(savedInstanceState);</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="code">    ...</span></span><br><span class="line">&#125;</span><br><span class="line">----</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20191107-170630@2x-201911717257.png" alt="WX20191107-170630@2x-201911717257" title="">                </div>                <div class="image-caption">WX20191107-170630@2x-201911717257</div>            </figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;react-native-splash-screen-在android启动屏使用&quot;&gt;&lt;a href=&quot;#react-native-splash-screen-在android启动屏使用&quot; class=&quot;headerlink&quot; title=&quot;react-native</summary>
      
    
    
    
    
    <category term="react-native" scheme="https://blog.afacode.top/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>MacOS HomeBrew更新慢的问题(替换国内源)</title>
    <link href="https://blog.afacode.top/2019/11/02/macos-brew-setting-source/"/>
    <id>https://blog.afacode.top/2019/11/02/macos-brew-setting-source/</id>
    <published>2019-11-02T09:00:32.000Z</published>
    <updated>2023-07-13T15:06:15.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="替换brew-git"><a href="#替换brew-git" class="headerlink" title="替换brew.git"></a>替换brew.git</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd </span><span class="string">"$(brew --repo)"</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="built_in">set-url</span> <span class="string">origin </span><span class="string">https:</span>//<span class="string">mirrors.</span><span class="string">ustc.</span><span class="string">edu.</span><span class="string">cn/</span><span class="string">brew.</span><span class="string">git</span></span><br></pre></td></tr></table></figure><h2 id="换homebrew-core-git"><a href="#换homebrew-core-git" class="headerlink" title="换homebrew-core.git"></a>换homebrew-core.git</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd </span><span class="string">"$(brew --repo)/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="built_in">set-url</span> <span class="string">origin </span><span class="string">https:</span>//<span class="string">mirrors.</span><span class="string">ustc.</span><span class="string">edu.</span><span class="string">cn/</span><span class="string">homebrew-core.</span><span class="string">git</span></span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><blockquote><p>brew update</p></blockquote><h2 id="国内源"><a href="#国内源" class="headerlink" title="国内源"></a>国内源</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">清华大学源：</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span></span><br><span class="line"><span class="symbol">https:</span><span class="comment">//mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span></span><br><span class="line"></span><br><span class="line">中科大源：</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//mirrors.ustc.edu.cn/brew.git</span></span><br><span class="line"><span class="symbol">https:</span><span class="comment">//mirrors.ustc.edu.cn/homebrew-core.git</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;替换brew-git&quot;&gt;&lt;a href=&quot;#替换brew-git&quot; class=&quot;headerlink&quot; title=&quot;替换brew.git&quot;&gt;&lt;/a&gt;替换brew.git&lt;/h2&gt;&lt;figure class=&quot;highlight dsconfig&quot;&gt;&lt;table</summary>
      
    
    
    
    
    <category term="macos" scheme="https://blog.afacode.top/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>react-native-splash-screen 在ios使用</title>
    <link href="https://blog.afacode.top/2019/10/26/react-native-splash-screen-ios/"/>
    <id>https://blog.afacode.top/2019/10/26/react-native-splash-screen-ios/</id>
    <published>2019-10-26T07:48:24.000Z</published>
    <updated>2023-07-13T15:06:15.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-native-splash-screen-在ios启动屏中的使用"><a href="#react-native-splash-screen-在ios启动屏中的使用" class="headerlink" title="react-native-splash-screen 在ios启动屏中的使用"></a>react-native-splash-screen 在ios启动屏中的使用</h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XCode <span class="keyword">Version</span> <span class="number">10.2</span> (<span class="number">10</span>E125)</span><br><span class="line"><span class="string">"react"</span>: <span class="string">"16.8.6"</span>,</span><br><span class="line"><span class="string">"react-native"</span>: <span class="string">"0.60.5"</span>,</span><br><span class="line"><span class="string">"react-native-splash-screen"</span>: <span class="string">"^3.2.0"</span>,</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">yarn</span> <span class="string">add react-native-splash-screen</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">ios </span></span><br><span class="line"><span class="attr">pod</span> <span class="string">install</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">..</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import SplashScreen from <span class="string">'react-native-splash-screen'</span></span><br><span class="line"><span class="function"><span class="title">componentDidMount</span><span class="params">()</span></span> &#123;</span><br><span class="line">  SplashScreen.hide()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>添加启动图片</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/启动屏1-2019103015566.png" alt="启动屏1-2019103015566" title="">                </div>                <div class="image-caption">启动屏1-2019103015566</div>            </figure><p>启用自定义启动图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/启动屏2-20191030155626.png" alt="启动屏2-20191030155626" title="">                </div>                <div class="image-caption">启动屏2-20191030155626</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/启动屏-20191030155636.png" alt="启动屏0-20191030155636" title="">                </div>                <div class="image-caption">启动屏0-20191030155636</div>            </figure><h2 id="参考1-amp-amp-参考2"><a href="#参考1-amp-amp-参考2" class="headerlink" title="参考1 &amp;&amp; 参考2"></a><a href="https://www.jianshu.com/p/bf907cdbcfad?_wv=1031" target="_blank" rel="noopener">参考1</a> &amp;&amp; <a href="https://www.jianshu.com/p/12813a59f993" target="_blank" rel="noopener">参考2</a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;react-native-splash-screen-在ios启动屏中的使用&quot;&gt;&lt;a href=&quot;#react-native-splash-screen-在ios启动屏中的使用&quot; class=&quot;headerlink&quot; title=&quot;react-native-spl</summary>
      
    
    
    
    
    <category term="react-native" scheme="https://blog.afacode.top/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>error Incorrect integrity when fetching from the cache</title>
    <link href="https://blog.afacode.top/2019/10/21/yarn-cache-err/"/>
    <id>https://blog.afacode.top/2019/10/21/yarn-cache-err/</id>
    <published>2019-10-21T14:10:45.000Z</published>
    <updated>2023-07-13T15:06:15.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="error-Incorrect-integrity-when-fetching-from-the-cache"><a href="#error-Incorrect-integrity-when-fetching-from-the-cache" class="headerlink" title="error Incorrect integrity when fetching from the cache"></a>error Incorrect integrity when fetching from the cache</h2><p>info Visit <a href="https://yarnpkg.com/en/docs/cli/global" target="_blank" rel="noopener">https://yarnpkg.com/en/docs/cli/global</a> for documentation about this command.</p><h2 id="use"><a href="#use" class="headerlink" title="use"></a>use</h2><blockquote><p>yarn cache clean</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;error-Incorrect-integrity-when-fetching-from-the-cache&quot;&gt;&lt;a href=&quot;#error-Incorrect-integrity-when-fetching-from-the-cache&quot; class=&quot;hea</summary>
      
    
    
    
    
    <category term="yarn" scheme="https://blog.afacode.top/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>mac-zsh-setting</title>
    <link href="https://blog.afacode.top/2019/10/16/mac-zsh-setting/"/>
    <id>https://blog.afacode.top/2019/10/16/mac-zsh-setting/</id>
    <published>2019-10-16T12:13:56.000Z</published>
    <updated>2023-07-13T15:06:15.415Z</updated>
    
    <content type="html"><![CDATA[<p>vim ~/.zshrc<br>source ~/.zshrc </p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">修改主体</span><br><span class="line"><span class="comment"># ZSH_THEME="ys"</span></span><br><span class="line">ZSH_THEME=<span class="string">"maran"</span></span><br><span class="line"></span><br><span class="line">%T系统时间（时：分）</span><br><span class="line">%*系统时间（时：分：秒）</span><br><span class="line">%D系统日期（年-月-日）</span><br><span class="line">%n你的用户名</span><br><span class="line">%B - %b开始到结束使用粗体打印</span><br><span class="line">%U - %u开始到结束使用下划线打印</span><br><span class="line">%d你目前的工作目录</span><br><span class="line">%~你目前的工作目录相对于～的相对路径（可能在某些zsh版本可能造成乱码）</span><br><span class="line">%M计算机的主机名</span><br><span class="line">%m计算机的主机名（在第一个句号之前截断）</span><br><span class="line">%l你当前的tty</span><br><span class="line"></span><br><span class="line">// 分解</span><br><span class="line">PROMPT=<span class="string">"%&#123;$reset_color%&#125;[%T] </span></span><br><span class="line"><span class="string">时间</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">%&#123;$fg[red]%&#125;%n </span></span><br><span class="line"><span class="string">用户</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">%&#123;$fg[green]%&#125;%1|%~ </span></span><br><span class="line"><span class="string">路径</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">%&#123;$reset_color%&#125;% $ "</span></span><br><span class="line">单纯字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启颜色</span></span><br><span class="line">autoload -U colors &amp;&amp; colors</span><br><span class="line"><span class="comment"># 配置提示符模式。。 其实配置之前的PS1也是可以的 但是为了尊重说明文档。。。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PROMPT="%&#123;$fg[red]%&#125;%n%&#123;$reset_color%&#125;%&#123;$fg[green]%&#125;%1|%~ %&#123;$reset_color%&#125;% $"</span></span><br><span class="line"></span><br><span class="line">PROMPT=<span class="string">"%&#123;$reset_color%&#125;[%T] %&#123;$fg[red]%&#125;%n %&#123;$fg[green]%&#125;%1|%~ %&#123;$reset_color%&#125;% $ "</span></span><br><span class="line"><span class="comment">#在行末显示上一命令的返回状态</span></span><br><span class="line">RPROMPT=<span class="string">"[%&#123;$fg_bold[yellow]%&#125;%?%&#123;$reset_color%&#125;]"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vim ~/.zshrc&lt;br&gt;source ~/.zshrc &lt;/p&gt;
&lt;figure class=&quot;highlight perl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nodemailer 简单使用</title>
    <link href="https://blog.afacode.top/2019/10/13/use-nodemailer-send-email/"/>
    <id>https://blog.afacode.top/2019/10/13/use-nodemailer-send-email/</id>
    <published>2019-10-13T00:55:01.000Z</published>
    <updated>2023-07-13T15:06:15.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nodemailer-简单使用"><a href="#nodemailer-简单使用" class="headerlink" title="nodemailer 简单使用"></a>nodemailer 简单使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ts </span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> nodemailer <span class="keyword">from</span> <span class="string">'nodemailer'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> testAccount = <span class="keyword">await</span> nodemailer.createTestAccount();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> transporter = nodemailer.createTransport(&#123;</span><br><span class="line">        <span class="comment">// host: 'smtp.qq.com',</span></span><br><span class="line">        <span class="comment">// https://nodemailer.com/smtp/well-known/</span></span><br><span class="line">        service: <span class="string">'qq'</span>,</span><br><span class="line">        port: <span class="number">465</span>,</span><br><span class="line">        secure: <span class="literal">true</span>, <span class="comment">// true for 465, false for other ports</span></span><br><span class="line">        auth: &#123;</span><br><span class="line">            user: <span class="string">'lfqdalian@qq.com'</span>, <span class="comment">// 使用的邮箱</span></span><br><span class="line">            pass: <span class="string">''</span>, <span class="comment">// POP3/SMTP服务授权码，不是密码</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// send mail with defined transport object</span></span><br><span class="line">    <span class="keyword">const</span> mailOptions = &#123;</span><br><span class="line">        <span class="keyword">from</span>: <span class="string">'"afacode" &lt;lfqdalian@qq.com&gt;'</span>,</span><br><span class="line">        to: <span class="string">'lfqdalian@sina.com, lfqdalian@outlook.com'</span>,</span><br><span class="line">        subject: <span class="string">'Hello ✔'</span>,</span><br><span class="line">        <span class="comment">// text: 'Hello world?',</span></span><br><span class="line">        html: <span class="string">'&lt;b&gt;Hello world? nodemailer&lt;/b&gt;'</span>, <span class="comment">// html body</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> info = <span class="keyword">await</span> transporter.sendMail(mailOptions);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Message sent: %s'</span>, info.messageId);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main().catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;nodemailer-简单使用&quot;&gt;&lt;a href=&quot;#nodemailer-简单使用&quot; class=&quot;headerlink&quot; title=&quot;nodemailer 简单使用&quot;&gt;&lt;/a&gt;nodemailer 简单使用&lt;/h2&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Could not find iPhone X simulator</title>
    <link href="https://blog.afacode.top/2019/09/23/Could-not-find-iPhone-X-simulator/"/>
    <id>https://blog.afacode.top/2019/09/23/Could-not-find-iPhone-X-simulator/</id>
    <published>2019-09-23T14:04:48.000Z</published>
    <updated>2023-07-13T15:06:15.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Could-not-find-iPhone-X-simulator"><a href="#Could-not-find-iPhone-X-simulator" class="headerlink" title="Could not find iPhone X simulator"></a>Could not find iPhone X simulator</h2><blockquote><p>运行 <code>react-native run-ios</code><br>详情</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Found Xcode workspace DbysDriver.xcworkspace</span><br><span class="line"></span><br><span class="line">Could not find iPhone X simulator</span><br><span class="line"></span><br><span class="line"><span class="string">Error:</span> Could not find iPhone X simulator</span><br><span class="line">    at resolve (<span class="regexp">/Users/</span>afacode<span class="regexp">/dbysDrivers/</span>node_modules<span class="regexp">/react-native/</span>local-cli<span class="regexp">/runIOS/</span>runIOS.<span class="string">js:</span><span class="number">149</span>:<span class="number">13</span>)</span><br><span class="line">    at <span class="keyword">new</span> Promise (&lt;anonymous&gt;)</span><br><span class="line">    at runOnSimulator (<span class="regexp">/Users/</span>afacode<span class="regexp">/dbysDrivers/</span>node_modules<span class="regexp">/react-native/</span>local-cli<span class="regexp">/runIOS/</span>runIOS.<span class="string">js:</span><span class="number">134</span>:<span class="number">10</span>)</span><br><span class="line">    at Object.runIOS [<span class="keyword">as</span> func] (<span class="regexp">/Users/</span>afacode<span class="regexp">/dbysDrivers/</span>node_modules<span class="regexp">/react-native/</span>local-cli<span class="regexp">/runIOS/</span>runIOS.<span class="string">js:</span><span class="number">106</span>:<span class="number">12</span>)</span><br><span class="line">    at Promise.resolve.then (<span class="regexp">/Users/</span>afacode<span class="regexp">/dbysDrivers/</span>node_modules<span class="regexp">/react-native/</span>local-cli/cliEntry.<span class="string">js:</span><span class="number">117</span>:<span class="number">22</span>)</span><br></pre></td></tr></table></figure><blockquote><p>找到 <code>/node_modules/react-native/local-cli/runIOS/findMatchingSimulator.js</code></p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!version.starts<span class="constructor">With('<span class="params">iOS</span>')</span><span class="operator"> &amp;&amp; </span>!version.starts<span class="constructor">With('<span class="params">tvOS</span>')</span>) &#123;</span><br><span class="line"></span><br><span class="line">替换为</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!version.starts<span class="constructor">With('<span class="params">com</span>.<span class="params">apple</span>.CoreSimulator.SimRuntime.<span class="params">iOS</span>')</span><span class="operator"> &amp;&amp; </span>!version.starts<span class="constructor">With('<span class="params">com</span>.<span class="params">apple</span>.CoreSimulator.SimRuntime.<span class="params">tvOS</span>')</span>) &#123;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Could-not-find-iPhone-X-simulator&quot;&gt;&lt;a href=&quot;#Could-not-find-iPhone-X-simulator&quot; class=&quot;headerlink&quot; title=&quot;Could not find iPhone X si</summary>
      
    
    
    
    
    <category term="react native" scheme="https://blog.afacode.top/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>docker使用</title>
    <link href="https://blog.afacode.top/2019/09/05/docker-use-1/"/>
    <id>https://blog.afacode.top/2019/09/05/docker-use-1/</id>
    <published>2019-09-05T15:37:31.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> update</span><br><span class="line">apt-<span class="builtin-name">get</span> install -y docker.io</span><br></pre></td></tr></table></figure><h2 id="配置镜像源"><a href="#配置镜像源" class="headerlink" title="配置镜像源"></a>配置镜像源</h2><p><code>阿里云镜像加速</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">version</span></span><br><span class="line"></span><br><span class="line">查看本地主机上的镜像</span><br><span class="line">docker image ls || docker images </span><br><span class="line"></span><br><span class="line">同一仓库源可以有多个 <span class="keyword">TAG</span></span><br><span class="line">REPOSITORY:<span class="keyword">TAG</span> <span class="title">来定义不同的镜像</span></span><br><span class="line"><span class="title">不指定一个镜像的版本标签，将默认使用 ubuntu</span>:latest 镜像</span><br><span class="line"></span><br><span class="line">docker pull REPOSITORY:<span class="keyword">TAG</span>  <span class="title">获取一个新的镜像</span></span><br><span class="line"><span class="title"></span></span><br><span class="line"><span class="title">docker</span> search REPOSITORY  查找镜像</span><br><span class="line"></span><br><span class="line">镜像别名 </span><br><span class="line">docker image <span class="keyword">tag</span> <span class="title">REPOSITORY</span>:<span class="keyword">TAG</span>  <span class="title">newImage</span>:v1</span><br><span class="line">docker <span class="keyword">tag</span> <span class="title">原镜像名称：TAG</span>  新镜像：<span class="keyword">TAG</span></span><br><span class="line"></span><br><span class="line">删除镜像</span><br><span class="line">docker rmi REPOSITORY:<span class="keyword">TAG</span> <span class="title"></span></span><br><span class="line"><span class="title">docker</span> image rm REPOSITORY:<span class="keyword">TAG</span></span><br><span class="line">docker image rm IMAGE-ID</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run REPOSITORY:<span class="keyword">TAG</span></span><br><span class="line"></span><br><span class="line">创建镜像:(构建镜像)</span><br><span class="line">docker build </span><br><span class="line"></span><br><span class="line">更新镜像: </span><br><span class="line">更新镜像之前，我们需要使用镜像来创建一个容器</span><br><span class="line"><span class="number">1</span>.从已经创建的容器中更新镜像，并且提交这个镜像</span><br><span class="line"><span class="number">2</span>.使用 Dockerfile 指令来创建一个新的镜像</span><br></pre></td></tr></table></figure><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">容器运行</span><br><span class="line">docker run -d <span class="comment">--name distserver imagesName /bin/bash</span></span><br><span class="line"></span><br><span class="line">-it  /bin/bash 进入容器</span><br><span class="line"><span class="comment">--name 命名</span></span><br><span class="line">-p 端口映射 </span><br><span class="line">-d：表明容器的运行模式在后台 </span><br><span class="line">dist-docker 镜像名</span><br><span class="line">docker run <span class="comment">--name distserver -d -p 8099:80 dist-docker:1.0.0</span></span><br><span class="line"></span><br><span class="line">容器停止</span><br><span class="line">docker <span class="keyword">stop</span> <span class="string">`CONTAINER ID`</span></span><br><span class="line">docker <span class="keyword">kill</span> </span><br><span class="line"></span><br><span class="line">启动</span><br><span class="line">docker <span class="keyword">start</span> <span class="keyword">CONTAINER</span> <span class="keyword">ID</span></span><br><span class="line"></span><br><span class="line">docker stats  查看CPU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">容器删除</span><br><span class="line">docker rm <span class="string">`CONTAINER ID`</span></span><br><span class="line">dcoker rm <span class="string">`docker ps -a -q`</span> 删除所有容器</span><br><span class="line"></span><br><span class="line">深入容器</span><br><span class="line">docker inspect <span class="string">`CONTAINER ID`</span></span><br><span class="line"></span><br><span class="line">获取容器IP</span><br><span class="line">docker inspect <span class="number">5003</span>a6cecaf1 | grep IPAddress</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">端口映射</span><br><span class="line">docker run -p <span class="number">2333</span>:<span class="number">80</span> </span><br><span class="line"></span><br><span class="line">挂存储卷()</span><br><span class="line"></span><br><span class="line">查询容器</span><br><span class="line">docker ps || docker <span class="keyword">container</span> ls 运行中的</span><br><span class="line">docker ps -a || docker <span class="keyword">container</span> ls <span class="comment">--all所有的</span></span><br><span class="line"></span><br><span class="line">进入容器</span><br><span class="line">docker exec -it 容器<span class="keyword">ID</span> /<span class="keyword">bin</span>/bash</span><br><span class="line"></span><br><span class="line">docker attach 容器<span class="keyword">ID</span></span><br><span class="line"></span><br><span class="line">退出容器</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">查看容器日志</span><br><span class="line">docker <span class="keyword">logs</span> -f 容器<span class="keyword">ID</span> </span><br><span class="line"></span><br><span class="line">容器<span class="keyword">ID</span>映射的宿主机端口</span><br><span class="line">docker port containerID <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">设置环境变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker <span class="keyword">container</span> ls || docker ps 查看当前运行的容器</span><br><span class="line"></span><br><span class="line">将容器内容拷贝至主机</span><br><span class="line">docker cp containerID:/home/demo.html /<span class="keyword">Users</span>/afacode/<span class="keyword">private</span>/</span><br><span class="line"></span><br><span class="line">docker run  参数</span><br><span class="line">-d</span><br><span class="line"><span class="comment">--name</span></span><br><span class="line">-p </span><br><span class="line">-v 数据挂载</span><br><span class="line">-e 配置环境</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多个容器数据卷相互共享，实际是备份</span><br><span class="line"><span class="comment">--volumes-from mysql01</span></span><br><span class="line"></span><br><span class="line">docker run -d -p <span class="number">3307</span>:<span class="number">3306</span> -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/<span class="keyword">data</span>:/<span class="keyword">var</span>/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw <span class="comment">--name mysql01  mysql:5.7</span></span><br><span class="line"></span><br><span class="line">docker run -d -p <span class="number">3307</span>:<span class="number">3306</span> <span class="comment">--volumes-from mysql01 -e MYSQL_ROOT_PASSWORD=my-secret-pw --name mysql01  mysql:5.7</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多个MySQL或者Redis实现数据共享</span><br><span class="line"></span><br><span class="line">容器之间配置信息的相互传递，数据卷生命周期一直持续到没有人使用容器为止</span><br></pre></td></tr></table></figure><h2 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h2><ul><li>容器内产生的数据，同步到本地。需要数据共享。将容器内目录挂载到本地</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run -v</span><br><span class="line">-v 主机目录：容器内目录</span><br><span class="line"></span><br><span class="line">docker run -it -v <span class="string">/home/test</span>:<span class="string">/home</span>  centos <span class="string">/bin/bash</span></span><br><span class="line">容器内<span class="string">/home</span>目录会同步到本机<span class="string">/home/test</span></span><br><span class="line">反之同理 双向绑定</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多个容器数据卷相互共享，实际是备份</span><br><span class="line"><span class="params">--volumes-from</span> mysql01</span><br><span class="line"></span><br><span class="line">docker run -d -p 3307<span class="function">:3306</span> -v <span class="string">/home/mysql/conf</span>:<span class="string">/etc/mysql/conf.d</span> -v <span class="string">/home/mysql/data</span>:<span class="string">/var/lib/mysql</span> -e MYSQL_ROOT_PASSWORD=my-secret-pw <span class="params">--name</span> mysql01  mysql<span class="function">:5.7</span></span><br><span class="line"></span><br><span class="line">docker run -d -p 3307<span class="function">:3306</span> <span class="params">--volumes-from</span> mysql01 -e MYSQL_ROOT_PASSWORD=my-secret-pw <span class="params">--name</span> mysql01  mysql<span class="function">:5.7</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多个MySQL或者Redis实现数据共享</span><br><span class="line"></span><br><span class="line">容器之间配置信息的相互传递，数据卷生命周期一直持续到没有人使用容器为止</span><br></pre></td></tr></table></figure><h3 id="MySQL数据持久化"><a href="#MySQL数据持久化" class="headerlink" title="MySQL数据持久化"></a>MySQL数据持久化</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">mysql:</span><span class="number">5.7</span></span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">docker run -d -p <span class="number">3307</span>:<span class="number">3306</span> -v <span class="regexp">/home/</span>mysql<span class="regexp">/conf:/</span>etc<span class="regexp">/mysql/</span>conf.d -v <span class="regexp">/home/</span>mysql<span class="regexp">/data:/</span>var<span class="regexp">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw --name mysql-demo  <span class="string">mysql:</span><span class="number">5.7</span></span><br></pre></td></tr></table></figure><p>具名挂载和匿名挂载</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">匿名挂载 是只指定容器内路径，没有指定本机路径</span><br><span class="line"></span><br><span class="line">docker run -d -v </span><br><span class="line"></span><br><span class="line">查看所有卷</span><br><span class="line">docker volume ls</span><br><span class="line">这种事匿名挂载</span><br><span class="line">local               <span class="number">6</span>ae0f43ce8eab7c422d4f83cebbbb3e2b801bdcacea7fb1aaabc59fb5296a96c</span><br><span class="line"></span><br><span class="line">具名挂载 </span><br><span class="line">docker run -d -v juming-<span class="string">nginx:</span><span class="regexp">/etc/</span>nginx <span class="string">nginx:</span>latest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看卷 </span><br><span class="line">docker volume inspect VOLUME-NAME</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"CreatedAt"</span>: <span class="string">"2020-07-13T03:12:37Z"</span>,</span><br><span class="line">        <span class="string">"Driver"</span>: <span class="string">"local"</span>,</span><br><span class="line">        <span class="string">"Labels"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">"Mountpoint"</span>: <span class="string">"/var/lib/docker/volumes/6ae0f43ce8eab7c422d4f83cebbbb3e2b801bdcacea7fb1aaabc59fb5296a96c/_data"</span>,</span><br><span class="line">        <span class="string">"Name"</span>: <span class="string">"6ae0f43ce8eab7c422d4f83cebbbb3e2b801bdcacea7fb1aaabc59fb5296a96c"</span>,</span><br><span class="line">        <span class="string">"Options"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">"Scope"</span>: <span class="string">"local"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">所有没有指定卷的路径时，都是在 <span class="regexp">/var/</span>lib<span class="regexp">/docker/</span>volumes<span class="comment">/****/</span>_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如何确定是 具名挂载，匿名挂载还是指定路径挂载</span><br><span class="line"></span><br><span class="line">-v 容器内路径           匿名挂载</span><br><span class="line">-v 卷名:容器内路径      具名挂载</span><br><span class="line">-v 本机路径:容器内路径   指定路径挂载</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">拓展</span><br><span class="line">读写权限</span><br><span class="line">ro readonly  只读  路径内文件只能通过本机操作，不能通过容器内操作</span><br><span class="line">rw readwrite</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d -v juming-<span class="string">nginx:</span><span class="regexp">/etc/</span><span class="string">nginx:</span>ro <span class="string">nginx:</span>latest</span><br><span class="line"></span><br><span class="line">docker run -d -v juming-<span class="string">nginx:</span><span class="regexp">/etc/</span><span class="string">nginx:</span>rw <span class="string">nginx:</span>latest</span><br></pre></td></tr></table></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h2 id="自定义镜像"><a href="#自定义镜像" class="headerlink" title="自定义镜像"></a>自定义镜像</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">镜像构建</span><br><span class="line"><span class="number">1</span>. docker commit</span><br><span class="line">docker commit containerID afacode/newImage</span><br><span class="line">docker commit -m=<span class="string">"A new image"</span> --<span class="attr">author=</span><span class="string">"afacode &lt;afacode@outlook.com&gt;"</span> containerID afacode/newImage:<span class="keyword">Tag</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. docker build </span><br><span class="line"></span><br><span class="line">docker build -t hello-docker:<span class="number">1.0</span>.<span class="number">0</span> ./   --no-cache</span><br><span class="line"></span><br><span class="line">docker build -t hello-docker:<span class="number">1.0</span>.<span class="number">0</span> -f /var/test/Dockerfile</span><br><span class="line"></span><br><span class="line">-t 参数用来指定镜像的文件名称镜像的名字hello-docker，版本号<span class="number">1.0</span>.<span class="number">0</span>,  </span><br><span class="line">./  找当前目录的Dockerfile</span><br><span class="line">--no-cache 不使用缓存</span><br><span class="line">镜像构建过程中会按照Dockerfile的顺序依次执行，每执行一次指令 Docker 会寻找是否有存在的镜像缓存可复用，如果没有则创建新的镜像。如果不想使用缓存，则可以在docker build时添加--<span class="attr">no-cache=</span><span class="literal">true</span>选项。</span><br><span class="line"></span><br><span class="line">构建历史</span><br><span class="line">docker history imageID</span><br><span class="line"></span><br><span class="line">镜像打<span class="keyword">TAG</span></span><br><span class="line">docker <span class="keyword">tag</span> <span class="title"></span></span><br><span class="line"><span class="title">为本地镜像打标签，tag</span> 不写默认为 latest</span><br><span class="line">docker image <span class="keyword">tag</span> <span class="title">[imageName</span>] [username]/[repository]:[<span class="keyword">tag</span>]</span><br><span class="line">docker <span class="keyword">tag</span> <span class="title">hello-docker</span> afacode/hello-docker</span><br><span class="line"></span><br><span class="line">镜像推送</span><br><span class="line">docker push </span><br><span class="line">docker image push [username]/[repository]:[<span class="keyword">tag</span>]</span><br><span class="line">docker push afacode/hello-docker</span><br></pre></td></tr></table></figure><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a><a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/" target="_blank" rel="noopener">Dockerfile</a></h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    <span class="keyword">FROM</span> &lt;image&gt;</span><br><span class="line">    <span class="keyword">FROM</span> &lt;image&gt;:&lt;tag&gt;</span><br><span class="line">    <span class="keyword">FROM</span> &lt;image&gt;@&lt;digest&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 维护者信息</span></span><br><span class="line"><span class="keyword">MAINTAINER</span></span><br><span class="line">    <span class="keyword">MAINTAINER</span> afacode</span><br><span class="line">    <span class="keyword">MAINTAINER</span> afacode@outlook.com</span><br><span class="line">    <span class="keyword">MAINTAINER</span> afacode &lt;afacode@outlook.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span></span><br><span class="line"><span class="bash">通过WORKDIR设置工作目录后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT、ADD、COPY等命令都会在该目录下执行。在使用docker run运行容器时，可以通过-w参数覆盖构建时所设置的工作目录。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像时执行的命令</span></span><br><span class="line"><span class="keyword">RUN</span></span><br><span class="line"><span class="bash">    RUN &lt;<span class="built_in">command</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地文件添加到容器中，tar类型文件会自动解压(网络压缩资源不会被解压)，可以访问网络资源，类似wget</span></span><br><span class="line"><span class="keyword">ADD</span></span><br><span class="line"><span class="bash"><span class="comment"># 功能类似ADD，但是是不会自动解压文件，也不能访问网络资源</span></span></span><br><span class="line"><span class="keyword">COPY</span></span><br><span class="line"><span class="bash"><span class="comment"># 在容器启动时才进行调用，cmd只有最后一个会生效</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> </span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"This is a test."</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash">  在容器启动时才进行调用 可以追加命令</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ONBUILD</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="keyword">ENV</span></span><br><span class="line"><span class="comment"># 指定于外界交互的端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span></span><br><span class="line">    <span class="keyword">EXPOSE</span> <span class="number">80</span> <span class="number">443</span></span><br><span class="line">    <span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="comment"># 用于指定持久化目录</span></span><br><span class="line">一个卷可以存在于一个或多个容器的指定目录，该目录可以绕过联合文件系统，并具有以下功能：</span><br><span class="line"><span class="number">1</span> 卷可以容器间共享和重用</span><br><span class="line"><span class="number">2</span> 容器并不一定要和其它容器共享卷</span><br><span class="line"><span class="number">3</span> 修改卷后会立即生效</span><br><span class="line"><span class="number">4</span> 对卷的修改不会对镜像产生影响</span><br><span class="line"><span class="number">5</span> 卷会一直存在，直到没有任何容器在使用它</span><br><span class="line"><span class="keyword">VOLUME</span></span><br><span class="line"><span class="bash">    VOLUME [<span class="string">"/data"</span>]</span></span><br><span class="line">    <span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/var/www"</span>, <span class="string">"/var/log/apache2"</span>, <span class="string">"/etc/apache2"</span></span></span><br></pre></td></tr></table></figure><h2 id="自己发布的练习镜像"><a href="#自己发布的练习镜像" class="headerlink" title="自己发布的练习镜像"></a><a href="https://hub.docker.com/search?q=afacode&type=image" target="_blank" rel="noopener">自己发布的练习镜像</a></h2><h2 id="学习书籍-第一本docker书-密码-fnoj"><a href="#学习书籍-第一本docker书-密码-fnoj" class="headerlink" title="学习书籍:第一本docker书 密码 fnoj"></a><a href="https://pan.baidu.com/s/1b4Jr_ut4FfR90asXuzWX5g" target="_blank" rel="noopener">学习书籍:第一本docker书</a> 密码 <code>fnoj</code></h2><h2 id="练习Demo"><a href="#练习Demo" class="headerlink" title="练习Demo"></a>练习Demo</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mkdir hello-docker</span><br><span class="line"><span class="number">1.</span> 创建文件</span><br><span class="line">touch inde.html</span><br><span class="line">&lt;h1&gt;Hello docker&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">创建一个Dockerfile文件</span><br><span class="line">FROM nginx</span><br><span class="line">COPY ./index.html /usr/share/nginx/html/index.html</span><br><span class="line">EXPOSE <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 打包镜像</span><br><span class="line">cd hello-docker/ # 进入刚刚的目录</span><br><span class="line">docker image build ./ -t hello-docker:<span class="number">1.0</span><span class="number">.0</span> # 打包镜像</span><br><span class="line">基于路径./（当前路径）打包一个镜像，镜像的名字是hello-docker，版本号是<span class="number">1.0</span><span class="number">.0</span>。该命令会自动寻找Dockerfile来打包出一个镜像</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 运行容器</span><br><span class="line">docker container create -p <span class="number">2333</span>:<span class="number">80</span> hello-docker:<span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">docker container start xxx # xxx 为上一条命令运行得到的结果</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 预览</span><br><span class="line">浏览器打开<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">2333</span>，你应该能看到刚刚自己写的index.html内容</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> 查看当前运行的容器</span><br><span class="line">docker container ls || docker ps</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> 进入容器内部</span><br><span class="line">docker container exec -it xxx /bin/bash # xxx 为容器ID</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    
    <category term="docker" scheme="https://blog.afacode.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>jenkins准备及安装</title>
    <link href="https://blog.afacode.top/2019/09/05/jenkins-pre-start/"/>
    <id>https://blog.afacode.top/2019/09/05/jenkins-pre-start/</id>
    <published>2019-09-05T14:13:03.000Z</published>
    <updated>2023-07-13T15:06:15.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><a href="https://jenkins.io/zh/doc/pipeline/tour/getting-started/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/pipeline/tour/getting-started/</a></p><ol><li>centos 6.8</li><li>内网环境</li><li>git </li><li>java8</li><li>node</li><li>nginx</li></ol><h2 id="ssh-连接"><a href="#ssh-连接" class="headerlink" title="ssh 连接"></a>ssh 连接</h2><ul><li>确定Linux系统可以SSH远程连接，即SSH服务已经启动。<br><code>netstat -anp | grep :22</code> 出现下图表示已经启动<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/01-201999151816.png" alt="01" title="">                </div>                <div class="image-caption">01</div>            </figure></li></ul><p>若没有启动，则输入启动ssh服务命令：service sshd start 来启动ssh服务</p><ul><li>ssh 连接 <code>ssh username@ip</code></li></ul><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">检查防火墙状态的命令：service iptables status    </span><br><span class="line">出现 Stopped IPv4<span class="built_in"> firewall </span>with iptables 证明防火墙已经关闭</span><br></pre></td></tr></table></figure><h2 id="安装JAVA环境"><a href="#安装JAVA环境" class="headerlink" title="安装JAVA环境"></a>安装JAVA环境</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yun <span class="keyword">install</span> <span class="keyword">java</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">java</span> -<span class="keyword">version</span></span><br><span class="line"><span class="number">1.8</span><span class="number">.0</span>_151</span><br></pre></td></tr></table></figure><h2 id="git安装及配置"><a href="#git安装及配置" class="headerlink" title="git安装及配置"></a>git安装及配置</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install git </span><br><span class="line">git version</span><br><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"afacode"</span> # 随意</span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"afacode@abc.com"</span> # 不一定要真实的</span><br><span class="line">连续 enter</span><br><span class="line">cd ~/.ssh/</span><br><span class="line">ls</span><br><span class="line">cat id_rsa.pub 公钥  复制到  new ssh</span><br><span class="line">github登陆 setting SSH <span class="keyword">and</span> GPG keys new ssh</span><br><span class="line"></span><br><span class="line">测试</span><br><span class="line">ssh git@github.com</span><br><span class="line">Hi afacode! You<span class="string">'ve successfully authenticated</span></span><br></pre></td></tr></table></figure><h2 id="Node安装"><a href="#Node安装" class="headerlink" title="Node安装"></a>Node安装</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">下载</span><br><span class="line">https://nodejs.org/en/download/</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">wget https://nodejs.org/dist/v10.<span class="number">16.3</span>/<span class="keyword">node</span><span class="title">-v10</span>.<span class="number">16.3</span>-linux-x64.tar.xz</span><br><span class="line"></span><br><span class="line">xz -d <span class="keyword">node</span><span class="title">-v10</span>.<span class="number">16.3</span>-linux-x64.tar.xz</span><br><span class="line"></span><br><span class="line">tar -xf <span class="keyword">node</span><span class="title">-v10</span>.<span class="number">16.3</span>-linux-x64.tar</span><br><span class="line"></span><br><span class="line">ln -s /root/<span class="keyword">node</span><span class="title">-v10</span>.<span class="number">16.3</span>-linux-x64/bin/<span class="keyword">node</span> <span class="title">/usr</span>/local/bin/<span class="keyword">node</span><span class="title"></span></span><br><span class="line"><span class="title"></span></span><br><span class="line"><span class="title">ln</span> -s /root/<span class="keyword">node</span><span class="title">-v10</span>.<span class="number">16.3</span>-linux-x64/bin/npm /usr/local/bin/npm</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"><span class="number">6.9</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">v10.<span class="number">16.3</span></span><br></pre></td></tr></table></figure><h2 id="下载Jenkins"><a href="#下载Jenkins" class="headerlink" title="下载Jenkins"></a>下载Jenkins</h2><p><code>wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/04-20199915285.png" alt="04-20199915285" title="">                </div>                <div class="image-caption">04-20199915285</div>            </figure><h2 id="运行-java-jar-jenkins-war-–httpPort-8080"><a href="#运行-java-jar-jenkins-war-–httpPort-8080" class="headerlink" title="运行 java -jar jenkins.war –httpPort=8080"></a>运行 java -jar jenkins.war –httpPort=8080</h2><p>密码在上图找<br>访问 ip:8080</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ul><li><p>创建用户</p></li><li><p>推荐安装</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/05-201999153328.png" alt="05-201999153328" title="">                </div>                <div class="image-caption">05-201999153328</div>            </figure></li><li><p>登陆<br>O<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/07-20199915348.png" alt="07-20199915348" title="">                </div>                <div class="image-caption">07-20199915348</div>            </figure></p></li></ul><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><ol><li>jenkins的使用</li><li>git + jenkins + docker 的集成</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://jenkins.io/zh/doc/pipeline/tour/getting-started/&quot; tar</summary>
      
    
    
    
    
    <category term="Jenkins" scheme="https://blog.afacode.top/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>docker安装-mac</title>
    <link href="https://blog.afacode.top/2019/08/26/docker-start-1/"/>
    <id>https://blog.afacode.top/2019/08/26/docker-start-1/</id>
    <published>2019-08-26T14:19:30.000Z</published>
    <updated>2023-07-13T15:06:15.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener">官方</a><br><a href="http://mirrors.aliyun.com/docker-toolbox/mac/docker-for-mac/" target="_blank" rel="noopener">阿里云</a></p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a><a href="https://docs.docker.com/docker-for-mac/" target="_blank" rel="noopener">文档</a></h2><h2 id="Docker和传统虚拟化的区别"><a href="#Docker和传统虚拟化的区别" class="headerlink" title="Docker和传统虚拟化的区别"></a>Docker和传统虚拟化的区别</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20190826-200550@2x-201982620652.png" alt="WX2019" title="">                </div>                <div class="image-caption">WX2019</div>            </figure><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><blockquote><p>Docker for mac 应用图标 -&gt; Perferences… -&gt; Daemon -&gt; Registry mirrors<br>修改完成之后，点击 Apply &amp; Restart 按钮</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">网易加速器：http://hub-mirror.<span class="keyword">c</span>.<span class="number">163</span>.<span class="keyword">com</span></span><br><span class="line"></span><br><span class="line">官方中国加速器：http<span class="variable">s:</span>//registry.docker-<span class="keyword">cn</span>.<span class="keyword">com</span></span><br><span class="line"></span><br><span class="line">ustc的镜像：http<span class="variable">s:</span>//docker.mirrors.ustc.edu.<span class="keyword">cn</span></span><br><span class="line"></span><br><span class="line">http<span class="variable">s:</span>//dockerhub.azk8s.<span class="keyword">cn</span>,</span><br><span class="line"></span><br><span class="line">http<span class="variable">s:</span>//<span class="keyword">reg</span>-mirror.qiniu.<span class="keyword">com</span>,</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/mac-afacode%202019-08-26%2020.15.13-2019826201540.png" alt="mac-afacode-2019826201540" title="">                </div>                <div class="image-caption">mac-afacode-2019826201540</div>            </figure><blockquote><p>docker info 查看是否配置成功</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Registry Mirror<span class="variable">s:</span></span><br><span class="line">  http://hub-mirror.<span class="keyword">c</span>.<span class="number">163</span>.<span class="keyword">com</span>/</span><br><span class="line">  http<span class="variable">s:</span>//registry.docker-<span class="keyword">cn</span>.<span class="keyword">com</span>/</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a><a href="https://docs.docker.com/engine/reference/commandline/docker/" target="_blank" rel="noopener">常用命令</a></h2><h2 id="各个关系"><a href="#各个关系" class="headerlink" title="各个关系"></a>各个关系</h2><p>镜像<br>容器<br>利用 Dockerfile 来创建镜像</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20190826-202306@2x-2019826202354.png" alt="WX2019" title="">                </div>                <div class="image-caption">WX2019</div>            </figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/docker-for-mac/install/&quot; target=&quot;_bla</summary>
      
    
    
    
    
    <category term="docker" scheme="https://blog.afacode.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>react hooks学习</title>
    <link href="https://blog.afacode.top/2019/08/17/react-hooks-demo/"/>
    <id>https://blog.afacode.top/2019/08/17/react-hooks-demo/</id>
    <published>2019-08-17T11:19:00.000Z</published>
    <updated>2023-07-13T15:06:15.422Z</updated>
    
    <content type="html"><![CDATA[<p>react hooks 学习. <a href="https://zh-hans.reactjs.org/docs/hooks-faq.html#which-versions-of-react-include-hooks" target="_blank" rel="noopener">FAQ</a></p><a id="more"></a><h2 id="useState代替state"><a href="#useState代替state" class="headerlink" title="useState代替state"></a>useState代替state</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Example</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> [ count , setCount ] = useState(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;p&gt;You clicked &#123;count&#125; times&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">            &lt;button onClick=&#123;()=&gt;&#123;setCount(count+1)&#125;&#125;&gt;click me&lt;/</span>button&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="useEffect代替常用生命周期函数"><a href="#useEffect代替常用生命周期函数" class="headerlink" title="useEffect代替常用生命周期函数"></a>useEffect代替常用生命周期函数</h2><p>实现类似componentWillUnmount的效果,useEffect的第二个参数，它是一个数组，数组中可以写入很多状态对应的变量，意思是当<strong>状态值发生变化时，我们才进行解绑</strong>。但是当传空数组[]时，就是当组件将被销毁时才进行解绑，这也就实现了componentWillUnmount的生命周期函数</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">useEffect(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// 初始化，更新时</span></span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// 类似于销毁时</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,[]) <span class="comment">// [] 状态发生变化，在达到条件时才触发</span></span><br></pre></td></tr></table></figure><h2 id="useContext-让父子组件传值更简单"><a href="#useContext-让父子组件传值更简单" class="headerlink" title="useContext 让父子组件传值更简单"></a>useContext 让父子组件传值更简单</h2><p><code>useContext</code>跨越组件层级直接传递变量，实现共享</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> CountContext = createContext()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> [ count , setCount ] = useState(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;p&gt;You clicked &#123;count&#125; times&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">            &lt;button onClick=&#123;()=&gt;&#123;setCount(count+1)&#125;&#125;&gt;click me&lt;/</span>button&gt;</span><br><span class="line">            &lt;CountContext.Provider value=&#123;count&#125;&gt; <span class="comment">//共享出去</span></span><br><span class="line">                &lt;Child /&gt;</span><br><span class="line">            &lt;<span class="regexp">/CountContext.Provider&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 接收</span></span><br><span class="line">    <span class="keyword">const</span> count = useContext(CountContext) </span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="useReducer完成类似的Redux"><a href="#useReducer完成类似的Redux" class="headerlink" title="useReducer完成类似的Redux"></a>useReducer完成类似的Redux</h2><p>useReducer可以让代码具有更好的可读性和可维护性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ReducerDemo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> [ count , dispatch ] =useReducer(<span class="function">(<span class="params">state,action</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(action)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'add'</span>:</span><br><span class="line">                <span class="keyword">return</span> state+<span class="number">1</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'sub'</span>:</span><br><span class="line">                <span class="keyword">return</span> state<span class="number">-1</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> state</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">       &lt;div&gt;</span><br><span class="line">           &lt;h2&gt;现在的分数是&#123;count&#125;&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">           &lt;button onClick=&#123;()=&gt;dispatch('add')&#125;&gt;Increment&lt;/</span>button&gt;</span><br><span class="line">           &lt;button onClick=&#123;()=&gt;dispatch(<span class="string">'sub'</span>)&#125;&gt;Decrement&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">       &lt;/</span>div&gt;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>待续</p><h2 id="useCallback"><a href="#useCallback" class="headerlink" title="useCallback"></a>useCallback</h2><h2 id="useMemo"><a href="#useMemo" class="headerlink" title="useMemo"></a>useMemo</h2><h2 id="useRef"><a href="#useRef" class="headerlink" title="useRef"></a>useRef</h2><h2 id="useImperativeHandle"><a href="#useImperativeHandle" class="headerlink" title="useImperativeHandle"></a>useImperativeHandle</h2><h2 id="useLayoutEffect"><a href="#useLayoutEffect" class="headerlink" title="useLayoutEffect"></a>useLayoutEffect</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;react hooks 学习. &lt;a href=&quot;https://zh-hans.reactjs.org/docs/hooks-faq.html#which-versions-of-react-include-hooks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FAQ&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="react" scheme="https://blog.afacode.top/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>前端错误监控与错误上报</title>
    <link href="https://blog.afacode.top/2019/08/06/fe-error-listener/"/>
    <id>https://blog.afacode.top/2019/08/06/fe-error-listener/</id>
    <published>2019-08-06T14:25:50.000Z</published>
    <updated>2023-07-13T15:06:15.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="错误类型"><a href="#错误类型" class="headerlink" title="错误类型"></a>错误类型</h2><ol><li>及时运行错误(代码错误)<blockquote><p>try..catch<br>window.onerror</p></blockquote></li><li>资源加载错误<blockquote><p>object.onerror<br>performance.getEntries() //加载所有的资源链接,返回数组，间接判断<br>Error 事件捕获 </p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e)</span><br><span class="line">&#125;, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>js 跨域可以拿到错误吗，返回什么，怎么处理错误<br>返回<code>类型：Script error 出错行： 0 0  内容：null</code>,<br>script 增加 <code>crossorigin</code>；js后台加<code>Access-Control-Allow-Origin: *</code></p></blockquote><h2 id="错误上报："><a href="#错误上报：" class="headerlink" title="错误上报："></a>错误上报：</h2><ol><li>Ajax</li><li>利用Image对象上报</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://cdc.tencent.com/2018/09/13/frontend-exception-monitor-research/" target="_blank" rel="noopener">Tencent CDC（https://cdc.tencent.com/2018/09/13/frontend-exception-monitor-research/）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;错误类型&quot;&gt;&lt;a href=&quot;#错误类型&quot; class=&quot;headerlink&quot; title=&quot;错误类型&quot;&gt;&lt;/a&gt;错误类型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;及时运行错误(代码错误)&lt;blockquote&gt;
&lt;p&gt;try..catch&lt;br&gt;window.onerror</summary>
      
    
    
    
    
    <category term="错误上报" scheme="https://blog.afacode.top/tags/%E9%94%99%E8%AF%AF%E4%B8%8A%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>小程序搜索结果全文关键字高亮</title>
    <link href="https://blog.afacode.top/2019/07/31/miniapp-wepy-search-high-light/"/>
    <id>https://blog.afacode.top/2019/07/31/miniapp-wepy-search-high-light/</id>
    <published>2019-07-31T14:44:18.000Z</published>
    <updated>2023-07-13T15:06:15.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>小程序动态数据全文关键字高亮</p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><p>得到搜索结果，使用数据副本</p><ol><li>使用正则匹配高亮关键词,</li><li>在切割为数组，<br>数据显示时， </li><li>将数组循环输出 判断是否有高亮关键词增加特殊样式</li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>复制数据时注意使用深度拷贝<br>使用JSON.parse(JSON.stringify(realDataList))拷贝数据特殊数据会有bug<br>参考<a href="https://www.jianshu.com/p/ad3750e8db26" target="_blank" rel="noopener">https://www.jianshu.com/p/ad3750e8db26</a></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>本人使用 wepy</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"view-search"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"view-search-input"</span> <span class="attr">value</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;keyName&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">placeholder</span>=<span class="string">"输入搜索关键词"</span> <span class="attr">bindinput</span>=<span class="string">"bindInput"</span> <span class="attr">maxlength</span>=<span class="string">"11"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;listDataCopy&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">wx:key</span>=<span class="string">"*this"</span> <span class="attr">style</span>=<span class="string">'border:1rpx solid #FAFAFA;'</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'oneText'</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:for</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.fund_name&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">wx:key</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;index&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item == keyName ? 'searchHigh' : '' &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123;item&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'oneText'</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:for</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.fund_id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">wx:key</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;index&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item == keyName ? 'searchHigh' : '' &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123;item&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">export default class Rice extends wepy.page &#123;</span></span><br><span class="line"><span class="xml">  data = &#123;</span></span><br><span class="line"><span class="xml">    keyName: null,</span></span><br><span class="line"><span class="xml">    listData: [</span></span><br><span class="line"><span class="xml">      &#123;"id":"1", "fund_id": "150084", "fund_name": "广发深证100指数分级B" &#125;,</span></span><br><span class="line"><span class="xml">      &#123; "id": "2",  "fund_id": "450011", "fund_name": "国富研究精选混合" &#125;,</span></span><br><span class="line"><span class="xml">      &#123; "id": "3", "fund_id": "000008", "fund_name": "嘉实中证500ETF联接" &#125;</span></span><br><span class="line"><span class="xml">    ], // 内容原始数组</span></span><br><span class="line"><span class="xml">    listDataCopy: [], // 用来搜索的复制数组</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">  methods = &#123;</span></span><br><span class="line"><span class="xml">    bindInput(e) &#123;</span></span><br><span class="line"><span class="xml">      this.keyName = this.trim(e.detail.value)</span></span><br><span class="line"><span class="xml">      this.searchTap()</span></span><br><span class="line"><span class="xml">    &#125;,   </span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">  trim(s) &#123; </span></span><br><span class="line"><span class="xml">    return s.replace(/(^\s*)|(\s*$)/g, "");</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">  getInf(str, key) &#123;</span></span><br><span class="line"><span class="xml">    return str.replace(new RegExp(`$&#123;key&#125;`, 'g'), `%%$&#123;key&#125;%%`).split('%%')</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">  searchTap() &#123;</span></span><br><span class="line"><span class="xml">    const realDataList = this.listData</span></span><br><span class="line"><span class="xml">    let copyDataList =  JSON.parse(JSON.stringify(realDataList))</span></span><br><span class="line"><span class="xml">    for (let i = 0; i <span class="tag">&lt; <span class="attr">realDataList.length</span>; <span class="attr">i</span>++) &#123;</span></span></span><br><span class="line"><span class="xml">      let single =  realDataList[i]</span></span><br><span class="line"><span class="xml">      let singleCopy = copyDataList[i]</span></span><br><span class="line"><span class="xml">      singleCopy["fund_name"] = this.getInf(single["fund_name"], this.keyName)</span></span><br><span class="line"><span class="xml">      singleCopy["fund_id"] = this.getInf(single["fund_id"], this.keyName)</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    this.listDataCopy = copyDataList</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">  onLoad() &#123;</span></span><br><span class="line"><span class="xml">    this.token_access = this.$parent.globalData.token_access</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span>&gt;</span></span></span><br><span class="line"><span class="xml">.view-search &#123;</span></span><br><span class="line"><span class="xml">  padding: 12rpx 30rpx;</span></span><br><span class="line"><span class="xml">  box-sizing: border-box;</span></span><br><span class="line"><span class="xml">  position: relative;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.view-search-input &#123;</span></span><br><span class="line"><span class="xml">  height: 70rpx;</span></span><br><span class="line"><span class="xml">  line-height: 70rpx;</span></span><br><span class="line"><span class="xml">  border: 2rpx solid #ccc;</span></span><br><span class="line"><span class="xml">  border-radius: 10rpx;</span></span><br><span class="line"><span class="xml">  box-sizing: border-box;</span></span><br><span class="line"><span class="xml">  padding: 0px 70rpx 0px 20rpx;</span></span><br><span class="line"><span class="xml">  font-size: 32rpx;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.searchHigh &#123;</span></span><br><span class="line"><span class="xml">  color: #ff0000;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.oneText &#123;</span></span><br><span class="line"><span class="xml">    line-height: 50rpx;</span></span><br><span class="line"><span class="xml">    margin: 15;</span></span><br><span class="line"><span class="xml">    text-align: left;</span></span><br><span class="line"><span class="xml">    color: #9B9B9B;</span></span><br><span class="line"><span class="xml">    font-size: 32rpx;</span></span><br><span class="line"><span class="xml">    text-indent:1rem;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.currentText &#123;</span></span><br><span class="line"><span class="xml">    color: #0099FF;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;小程序动态数据全文关键字高亮&lt;/p&gt;
&lt;h2 id=&quot;解决思路&quot;&gt;&lt;a href=&quot;#解决思路&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
    <category term="wechat" scheme="https://blog.afacode.top/tags/wechat/"/>
    
    <category term="wepy" scheme="https://blog.afacode.top/tags/wepy/"/>
    
  </entry>
  
  <entry>
    <title>webpack资源收集</title>
    <link href="https://blog.afacode.top/2019/07/28/webpack-collection/"/>
    <id>https://blog.afacode.top/2019/07/28/webpack-collection/</id>
    <published>2019-07-28T14:09:15.000Z</published>
    <updated>2023-07-13T15:06:15.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="webpack-教程资源收集"><a href="#webpack-教程资源收集" class="headerlink" title="webpack 教程资源收集"></a>webpack 教程资源收集</h3><p><a href="https://github.com/kraaas/webpack-tutorial-collection" target="_blank" rel="noopener">转载</a></p><h5 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://webpack.js.org/" target="_blank" rel="noopener">官方文档</a></h5><h5 id="中文文档"><a href="#中文文档" class="headerlink" title="中文文档"></a><a href="https://webpack.docschina.org/" target="_blank" rel="noopener">中文文档</a></h5><hr><h4 id="four-webpack-4-0"><a href="#four-webpack-4-0" class="headerlink" title=":four: webpack 4.0"></a>:four: webpack 4.0</h4><ul><li><a href="https://mp.weixin.qq.com/s/tvhEkWTuSs8X0d5N_s79oA" target="_blank" rel="noopener">(译)webpack4.0正式版重大更新与特性详细清单</a>  <code>译者：疯狂的技术宅</code></li><li><a href="https://mp.weixin.qq.com/s/mF56rpzmqdSyti1iJu4tCw" target="_blank" rel="noopener">(译)webpack 4正式发布，速度最高可提升98%！！</a>  <code>译者：怡红公子</code></li><li><a href="https://mp.weixin.qq.com/s/ScQdoysvLq8Pbc04LJII9w" target="_blank" rel="noopener">webpack4初探</a>  <code>作者：自然醒</code></li></ul><h5 id="v-初级教程"><a href="#v-初级教程" class="headerlink" title=":v: 初级教程"></a>:v: 初级教程</h5><ul><li><a href="https://github.com/petehunt/webpack-howto" target="_blank" rel="noopener">webpack-howto</a>  <code>作者：Pete Hunt</code></li><li><a href="http://segmentfault.com/a/1190000002551952" target="_blank" rel="noopener">Webpack 入门指迷</a>  <code>作者：题叶</code>  　</li><li><a href="https://github.com/ruanyf/webpack-demos" target="_blank" rel="noopener">webpack-demos</a> <code>作者：ruanyf</code></li><li><a href="http://www.cnblogs.com/vajoy/p/4650467.html" target="_blank" rel="noopener">一小时包教会 —— webpack 入门指南</a>  <code>作者：VaJoy Larn</code>　　</li><li><a href="http://www.w3ctech.com//topic/1557" target="_blank" rel="noopener">webpack 入门及实践</a>  <code>作者：zhouweicsu</code>　　</li><li><a href="http://zhuanlan.zhihu.com/FrontendMagazine/20367175" target="_blank" rel="noopener">Webpack傻瓜式指南（一）</a>  <code>译者：前端外刊评论</code>　　</li><li><a href="http://zhuanlan.zhihu.com/FrontendMagazine/20397902" target="_blank" rel="noopener">Webpack傻瓜式指南（二）</a>  <code>译者：前端外刊评论</code>　</li><li><a href="http://www.jianshu.com/p/42e11515c10f" target="_blank" rel="noopener">入门Webpack，看这篇就够了</a>  <code>作者：zhangwang </code>　</li></ul><h5 id="muscle-进阶教程"><a href="#muscle-进阶教程" class="headerlink" title=":muscle: 进阶教程"></a>:muscle: 进阶教程</h5><ul><li><a href="http://web.jobbole.com/84847/" target="_blank" rel="noopener">webpack使用优化</a>  <code>作者：alloyteam</code>　　</li><li><a href="http://www.alloyteam.com/2016/01/webpack-loader-1/" target="_blank" rel="noopener">如何开发一个 Webpack Loader ( 一 )</a>  <code>作者：alloyteam</code>　　</li><li><a href="https://github.com/cssmagic/blog/issues/56" target="_blank" rel="noopener">基于 Webpack 和 ES6 打造 JavaScript 类库</a>  <code>译者：CSS魔法</code>  </li><li><a href="http://www.h-simon.com/42/" target="_blank" rel="noopener">webpack常用配置总结</a> <code>作者：小凡哥</code></li><li><a href="https://github.com/chemdemo/chemdemo.github.io/issues/13" target="_blank" rel="noopener">(译)Webpack——令人困惑的地方</a> <code>作者：chemdemo</code></li><li><a href="https://github.com/chemdemo/chemdemo.github.io/issues/10" target="_blank" rel="noopener">基于webpack搭建前端工程解决方案探索</a> <code>作者：chemdemo</code></li><li><a href="https://github.com/icepy/_posts/issues/25" target="_blank" rel="noopener">webpack在PC项目中的应用</a> <code>作者：icepy</code></li><li><a href="https://github.com/icepy/_posts/issues/34" target="_blank" rel="noopener">webpack实践最后一篇</a> <code>作者：icepy</code></li><li><a href="https://github.com/wyvernnot/webpack_performance" target="_blank" rel="noopener">webpack_performance</a> <code>作者：wyvernnot</code></li><li><a href="https://segmentfault.com/a/1190000005770042" target="_blank" rel="noopener">如何 10 倍提高你的 Webpack 构建效率</a> <code>作者：紅白</code></li><li><a href="http://acgtofe.com/posts/2016/02/full-live-reload-for-express-with-webpack" target="_blank" rel="noopener">Express结合Webpack的全栈自动刷新</a> <code>来源：ACGTOFE</code></li><li><a href="https://segmentfault.com/a/1190000005866410#articleHeader11" target="_blank" rel="noopener">webpack 单页面应用实战</a> <code>作者：hsw</code></li><li><a href="https://segmentfault.com/a/1190000006843916#articleHeader5" target="_blank" rel="noopener">webpack多页应用架构系列</a> <code>作者：array_huang</code></li></ul><h4 id="fire-webpack-2-0"><a href="#fire-webpack-2-0" class="headerlink" title=":fire: webpack 2.0"></a>:fire: webpack 2.0</h4><ul><li><a href="https://github.com/cssmagic/blog/issues/58" target="_blank" rel="noopener">Webpack2 有哪些新东西</a>  <code>译者：cssmagic</code></li><li><a href="https://www.zhihu.com/question/41922432" target="_blank" rel="noopener">如何评价 Webpack 2 新引入的 Tree-shaking 代码优化技术?</a> <code>来源：知乎</code></li><li><a href="https://medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233#.hqv8bdir5" target="_blank" rel="noopener">Webpack 2 Tree Shaking Configuration</a> <code>来源：Medium</code></li><li><a href="https://github.com/egoist/vuepack" target="_blank" rel="noopener">Vue 2 + Webpack 2 脚手架</a> <code>作者：egoist</code></li><li><a href="https://github.com/vuets/webpack2-simple-vue2" target="_blank" rel="noopener">webpack2-simple-vue2</a> <code>来源：vuets</code></li><li><a href="https://github.com/ParryQiu/DevOpenClub-Tech-Webpack2" target="_blank" rel="noopener">超清 Webpack 2 视频教程 (持续更新)</a> <code>作者：Parry</code></li></ul><h5 id="diamond-shape-with-a-dot-inside-React-amp-webpack"><a href="#diamond-shape-with-a-dot-inside-React-amp-webpack" class="headerlink" title=":diamond_shape_with_a_dot_inside: React &amp; webpack"></a>:diamond_shape_with_a_dot_inside: React &amp; webpack</h5><ul><li><a href="https://github.com/erikras/react-redux-universal-hot-example" target="_blank" rel="noopener">react-redux-universal-hot-example</a> <code>作者：erikras</code> </li><li><a href="https://github.com/chemdemo/webpack-bootstrap" target="_blank" rel="noopener">webpack-seed</a> <code>作者：chemdemo</code>  </li><li><a href="http://www.cnblogs.com/skylar/p/React-Webpack-ES6.html" target="_blank" rel="noopener">Webpack+React+ES6开发模式入门指南</a> <code>作者：大额_skylar</code></li><li><a href="http://www.oschina.net/translate/react-static-site" target="_blank" rel="noopener">使用 React 和 Webpack 构建静态网站</a> <code>来源：开源中国</code></li><li><a href="https://segmentfault.com/a/1190000005037309" target="_blank" rel="noopener">手把手教你基于ES6架构自己的React Boilerplate项目</a> <code>作者：lhc</code></li><li><a href="https://github.com/ModusCreateOrg/budgeting-sample-app-webpack2" target="_blank" rel="noopener">budgeting-sample-app-webpack2</a> <code>来源：Modus Create</code></li></ul><h5 id="a-Angular-amp-webpack"><a href="#a-Angular-amp-webpack" class="headerlink" title=":a: Angular &amp; webpack"></a>:a: Angular &amp; webpack</h5><ul><li><a href="http://dmachat.github.io/angular-webpack-cookbook/" target="_blank" rel="noopener">angular-webpack-cookbook</a> <code>作者：Drew Machat</code></li><li><a href="https://github.com/preboot/angular-webpack" target="_blank" rel="noopener">angular-webpack</a> <code>来源：preboot</code></li><li><a href="https://github.com/preboot/angular2-webpack" target="_blank" rel="noopener">angular2-webpack</a> <code>来源：preboot</code></li><li><a href="https://github.com/AngularClass/angular2-webpack-starter" target="_blank" rel="noopener">angular2-webpack-starter</a> <code>来源：AngularClass</code></li><li><a href="https://segmentfault.com/a/1190000004358725" target="_blank" rel="noopener">es6+angular1.X+webpack 实现按路由功能打包项目</a> <code>作者：yang_j_j</code></li><li><a href="https://segmentfault.com/a/1190000004514747" target="_blank" rel="noopener">(译) 通过 Webpack 实现 AngularJS 的延迟加载</a> <code>作者：Cheng_Gu</code></li><li><a href="https://segmentfault.com/a/1190000003915443" target="_blank" rel="noopener">Webpack + Angular的组件化实践</a> <code>作者：王伟嘉</code></li></ul><h5 id="man-Vue-amp-webpack"><a href="#man-Vue-amp-webpack" class="headerlink" title=":man: Vue &amp; webpack"></a>:man: Vue &amp; webpack</h5><ul><li><a href="https://github.com/vuejs-templates/webpack" target="_blank" rel="noopener">vue-webpack-boilerplate</a>  <code>来源：vue官方</code></li><li><a href="https://github.com/Coffcer/vue-chat" target="_blank" rel="noopener">vue-chat</a> <code>作者：Coffcer</code></li><li><a href="http://guowenfh.github.io/2016/03/24/vue-webpack-01-base/" target="_blank" rel="noopener">webpack入坑之旅系列</a> <code>作者：guowenfh</code></li><li><a href="https://github.com/JsAaron/vue-gulp-webpack" target="_blank" rel="noopener">vue-gulp-webpack单页面组件开发</a> <code>作者：JsAaron</code>  </li><li><a href="https://segmentfault.com/a/1190000005891026" target="_blank" rel="noopener">使用 Vuex + Vue.js 构建单页应用</a> <code>作者：离尘不理人</code></li><li><a href="https://github.com/vingojw/vue-vueRouter-webpack" target="_blank" rel="noopener">vue-vueRouter-webpack</a> <code>作者：vingojw</code></li><li><a href="http://div.io/topic/1343?page=1#5517" target="_blank" rel="noopener">Vue.js 和 Webpack</a> <code>作者：djyde</code>　　</li><li><a href="https://www.talkingcoder.com/article/6309726065044556372" target="_blank" rel="noopener">Vue+Webpack使用规范</a></li><li><a href="https://github.com/egoist/vuepack" target="_blank" rel="noopener">Vue 2 + Webpack 2 脚手架</a> <code>作者：egoist</code></li><li><a href="https://github.com/vuets/webpack2-simple-vue2" target="_blank" rel="noopener">webpack2-simple-vue2</a> <code>来源：vuets</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;webpack-教程资源收集&quot;&gt;&lt;a href=&quot;#webpack-教程资源收集&quot; class=&quot;headerlink&quot; title=&quot;webpack 教程资源收集&quot;&gt;&lt;/a&gt;webpack 教程资源收集&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://githu</summary>
      
    
    
    
    
    <category term="webpack" scheme="https://blog.afacode.top/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript代码检查</title>
    <link href="https://blog.afacode.top/2019/07/24/typescript-lint/"/>
    <id>https://blog.afacode.top/2019/07/24/typescript-lint/</id>
    <published>2019-07-24T13:13:21.000Z</published>
    <updated>2023-07-13T15:06:15.433Z</updated>
    
    <content type="html"><![CDATA[<p>目前 TypeScript 的代码检查主要有两个方案：使用 <code>TSLint</code> 或使用 <code>ESLint + typescript-eslint-parser</code></p><a id="more"></a><h2 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h2><p>由于 ESLint 默认使用 <a href="https://github.com/eslint/espree" target="_blank" rel="noopener">Espree</a> 进行语法解析，无法识别 TypeScript 的一些语法，故我们需要安装 <code>typescript-eslint-parser</code> 替代掉默认的解析器.</p><p>由于 <code>typescript-eslint-parser</code> 对一部分 <code>ESLint</code> 规则支持性不好，故我们需要安装 <code>eslint-plugin-typescript</code>，弥补一些支持性不好的规则</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> eslint <span class="comment">--save-dev</span></span><br><span class="line">npm <span class="keyword">install</span> typescript-eslint-parser <span class="comment">--save-dev</span></span><br><span class="line">npm <span class="keyword">install</span> eslint-<span class="keyword">plugin</span>-typescript <span class="comment">--save-dev</span></span><br><span class="line">npm <span class="keyword">install</span> <span class="comment">--save-dev eslint-plugin-react # 检查 tsx 文件</span></span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>一般为根目录<code>.eslintrc.js</code> 或 <code>.eslintrc.json</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span>.<span class="keyword">exports</span> = &#123;</span><br><span class="line">    parser: <span class="string">'typescript-eslint-parser'</span>,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="string">'typescript'</span></span><br><span class="line">    ],</span><br><span class="line">    rules: &#123;</span><br><span class="line">        <span class="comment">// @fixable 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外</span></span><br><span class="line">        <span class="string">'eqeqeq'</span>: [</span><br><span class="line">            <span class="string">'error'</span>,</span><br><span class="line">            <span class="string">'always'</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">null</span>: <span class="string">'ignore'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// 类和接口的命名必须遵守帕斯卡命名法，比如 PersianCat</span></span><br><span class="line">        <span class="string">'typescript/class-name-casing'</span>: <span class="string">'error'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上配置中，我们指定了两个规则，其中 eqeqeq 是 ESLint 原生的规则（它要求必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外），typescript/class-name-casing 是 eslint-plugin-typescript 为 ESLint 增加的规则（它要求类和接口的命名必须遵守帕斯卡命名法，比如 PersianCat）</p><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>检查整个项目的 ts 文件<br>package.json</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"eslint"</span>: <span class="string">"eslint src --ext .ts, tsx"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>npm run eslint</code></p></blockquote><h2 id="TSLint"><a href="#TSLint" class="headerlink" title="TSLint"></a>TSLint</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> tslint</span><br></pre></td></tr></table></figure><h3 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h3><p><code>tslint.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"rules"</span>: &#123;</span><br><span class="line">        <span class="comment">// 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外</span></span><br><span class="line">        <span class="attr">"triple-equals"</span>: [</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"allow-null-check"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"linterOptions"</span>: &#123;</span><br><span class="line">        <span class="attr">"exclude"</span>: [</span><br><span class="line">            <span class="string">"**/node_modules/**"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="检查-1"><a href="#检查-1" class="headerlink" title="检查"></a>检查</h2><p>检查整个项目的 ts 文件<br><code>package.json</code></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"tslint"</span>: <span class="string">"tslint --project . src/**/*.ts src/**/*.tsx"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>npm run eslint</code></p></blockquote><p><a href="https://ts.xcatliu.com/engineering/lint" target="_blank" rel="noopener">来源</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目前 TypeScript 的代码检查主要有两个方案：使用 &lt;code&gt;TSLint&lt;/code&gt; 或使用 &lt;code&gt;ESLint + typescript-eslint-parser&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="typescript" scheme="https://blog.afacode.top/tags/typescript/"/>
    
    <category term="eslint" scheme="https://blog.afacode.top/tags/eslint/"/>
    
    <category term="tslint" scheme="https://blog.afacode.top/tags/tslint/"/>
    
  </entry>
  
  <entry>
    <title>nginx 学习</title>
    <link href="https://blog.afacode.top/2019/07/11/nginx-learn/"/>
    <id>https://blog.afacode.top/2019/07/11/nginx-learn/</id>
    <published>2019-07-11T15:21:33.000Z</published>
    <updated>2023-07-13T15:06:15.419Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 基础 demo</p><a id="more"></a><h2 id="etc-nginx-nginx-conf"><a href="#etc-nginx-nginx-conf" class="headerlink" title="/etc/nginx/nginx.conf"></a><code>/etc/nginx/nginx.conf</code></h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#运行用户</span></span><br><span class="line"><span class="attribute">user</span> nginx;</span><br><span class="line"><span class="comment">#启动进程,通常设置成和cpu的数量相等</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#全局错误日志及PID文件</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#主进程PID文件</span></span><br><span class="line"><span class="attribute">pid</span>        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#工作模式及连接数上限</span></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="comment">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,</span></span><br><span class="line">    <span class="comment">#仅用于linux2.6以上内核,可以大大提高nginx的性能</span></span><br><span class="line">    <span class="attribute">use</span>   <span class="literal">epoll</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">#单个后台worker process进程的最大并发链接数    </span></span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 并发总数是 worker_processes 和 worker_connections 的乘积</span></span><br><span class="line">    <span class="comment"># 即 max_clients = worker_processes * worker_connections</span></span><br><span class="line">    <span class="comment"># 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么</span></span><br><span class="line">    <span class="comment"># 为什么上面反向代理要除以4，应该说是一个经验值</span></span><br><span class="line">    <span class="comment"># 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000</span></span><br><span class="line">    <span class="comment"># worker_connections 值的设置跟物理内存大小有关</span></span><br><span class="line">    <span class="comment"># 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数</span></span><br><span class="line">    <span class="comment"># 而系统可以打开的最大文件数和内存大小成正比，一般1GB内存的机器上可以打开的文件数大约是10万左右</span></span><br><span class="line">    <span class="comment"># 我们来看看360M内存的VPS可以打开的文件句柄数是多少：</span></span><br><span class="line">    <span class="comment"># $ cat /proc/sys/fs/file-max</span></span><br><span class="line">    <span class="comment"># 输出 34336</span></span><br><span class="line">    <span class="comment"># 32000 &lt; 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内</span></span><br><span class="line">    <span class="comment"># 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置</span></span><br><span class="line">    <span class="comment"># 使得并发总数小于操作系统可以打开的最大文件数目</span></span><br><span class="line">    <span class="comment"># 其实质也就是根据主机的物理CPU和内存进行配置</span></span><br><span class="line">    <span class="comment"># 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。</span></span><br><span class="line">    <span class="comment"># ulimit -SHn 65535</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#设定mime类型,类型由mime.type文件定义。include包含一些配置文件</span></span><br><span class="line">    <span class="attribute">include</span>    mime.types;</span><br><span class="line">    <span class="comment"># 默认为二进制</span></span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="comment">#设定日志格式</span></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，</span></span><br><span class="line">    <span class="comment">#对于普通应用，必须设为 on,</span></span><br><span class="line">    <span class="comment">#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，</span></span><br><span class="line">    <span class="comment">#以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span></span><br><span class="line">    <span class="attribute">sendfile</span>     <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#连接超时时间</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="attribute">tcp_nodelay</span>     <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#开启gzip压缩</span></span><br><span class="line">    <span class="attribute">gzip</span>  <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]."</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定请求缓冲</span></span><br><span class="line">    <span class="attribute">client_header_buffer_size</span>    <span class="number">128k</span>;</span><br><span class="line">    <span class="attribute">large_client_header_buffers</span>  <span class="number">4</span> <span class="number">128k</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># include包含一些配置文件 设定虚拟主机配置</span></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="etc-nginx-conf-d-default-conf"><a href="#etc-nginx-conf-d-default-conf" class="headerlink" title="/etc/nginx/conf.d/default.conf"></a><code>/etc/nginx/conf.d/default.conf</code></h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设定虚拟主机配置</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#侦听80端口</span></span><br><span class="line">    <span class="attribute">listen</span>    <span class="number">80</span>;</span><br><span class="line">    <span class="comment">#定义使用 www.nginx.cn访问</span></span><br><span class="line">    <span class="attribute">server_name</span>  www.nginx.cn;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#定义服务器的默认网站根目录位置</span></span><br><span class="line">    <span class="attribute">root</span> /home/tpm/html;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#设定本虚拟主机的访问日志</span></span><br><span class="line">    <span class="attribute">access_log</span>  logs/nginx.access.log  main;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#默认请求</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#定义首页索引文件的名称</span></span><br><span class="line">        <span class="attribute">index</span> index.php index.html index.htm;   </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 定义错误提示页面</span></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#静态文件，nginx自己处理</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ ^/(images|javascript|js|css|flash|media|static)/</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#资源过期时间 30天，静态文件不怎么更新，过期可以设大一点，</span></span><br><span class="line">        <span class="comment">#如果频繁更新，则可以设置得小一点。</span></span><br><span class="line">        <span class="attribute">expires</span> <span class="number">30d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#禁止访问 .htxxx 文件</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ /.ht</span> &#123;</span><br><span class="line">        <span class="attribute">deny</span> all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx-install"><a href="#nginx-install" class="headerlink" title="nginx install"></a>nginx install</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu</span><br><span class="line">sudo apt-get install nginx</span><br><span class="line">--------------------------</span><br><span class="line">centos</span><br><span class="line">sudo yum install epel-release</span><br><span class="line">＃更新存储库并安装Nginx </span><br><span class="line">sudo yum update </span><br><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><h2 id="如何使用nginx配置负载均衡"><a href="#如何使用nginx配置负载均衡" class="headerlink" title="如何使用nginx配置负载均衡"></a><a href="http://www.nginx.cn/4996.html" target="_blank" rel="noopener">如何使用nginx配置负载均衡</a></h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">＃定义要包含在负载均衡方案中的服务器。  </span><br><span class="line">＃最好使用服务器的私有IP以获得更好的性能和安全性。 </span><br><span class="line">http &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">       server <span class="number">10.1</span><span class="number">.0</span><span class="number">.101</span>;</span><br><span class="line">       server <span class="number">10.1</span><span class="number">.0</span><span class="number">.102</span>;</span><br><span class="line">       server <span class="number">10.1</span><span class="number">.0</span><span class="number">.103</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    ＃该服务器接受到端口<span class="number">80</span>的所有流量并将其传递给上游。</span><br><span class="line">    ＃请注意，上游名称和proxy_pass需要匹配。</span><br><span class="line">    server &#123;</span><br><span class="line">       listen <span class="number">80</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">           proxy_pass http:<span class="comment">//backend;</span></span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="屏蔽ip"><a href="#屏蔽ip" class="headerlink" title="屏蔽ip"></a><a href="http://www.nginx.cn/2487.html" target="_blank" rel="noopener">屏蔽ip</a></h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;nginx 基础 demo&lt;/p&gt;</summary>
    
    
    
    
    <category term="nginx" scheme="https://blog.afacode.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>(预告)前端脚手架工具cli与webpack自定义react环境</title>
    <link href="https://blog.afacode.top/2019/06/25/node-cli-webpack-config-preview/"/>
    <id>https://blog.afacode.top/2019/06/25/node-cli-webpack-config-preview/</id>
    <published>2019-06-25T15:16:16.000Z</published>
    <updated>2023-07-13T15:06:15.419Z</updated>
    
    <content type="html"><![CDATA[<p>以前也学习了前端cli与webpack自定义配置环境，自己也写了一个脚手架cli,但是当时的脚手架cli直接硬处理，直接clone下来，不能自定义配置。工作忙也就放下了，也看了一些其他优秀的cli, 环境配置，感觉自己也可以hold助，现在打算重新拾起来。</p><p><strong>先预定下来</strong></p><ul><li>目标：</li></ul><ol><li>一个cli,可以选择一些loader与lint，react第三方库选择：如 redux,mobx</li><li>TS|JS + webpack + react + mobx|redux</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以前也学习了前端cli与webpack自定义配置环境，自己也写了一个脚手架cli,但是当时的脚手架cli直接硬处理，直接clone下来，不能自定义配置。工作忙也就放下了，也看了一些其他优秀的cli, 环境配置，感觉自己也可以hold助，现在打算重新拾起来。&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    
    <category term="-cli - webpack" scheme="https://blog.afacode.top/tags/cli-webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack打包，文件删除</title>
    <link href="https://blog.afacode.top/2019/06/20/webpack-dist-node-env/"/>
    <id>https://blog.afacode.top/2019/06/20/webpack-dist-node-env/</id>
    <published>2019-06-20T15:16:18.000Z</published>
    <updated>2023-07-13T15:06:15.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="build-build-js"><a href="#build-build-js" class="headerlink" title="build/build.js"></a>build/build.js</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ora = <span class="built_in">require</span>(<span class="string">'ora'</span>)</span><br><span class="line"><span class="keyword">const</span> rm = <span class="built_in">require</span>(<span class="string">'rimraf'</span>) <span class="comment">// 删除</span></span><br><span class="line"><span class="keyword">const</span> chalk = <span class="built_in">require</span>(<span class="string">'chalk'</span>) <span class="comment">// 颜色</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>)</span><br><span class="line"><span class="keyword">const</span> webpackConfig = <span class="built_in">require</span>(<span class="string">'./webpack.config'</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">'./utils'</span>)</span><br><span class="line"><span class="keyword">const</span> APP_ENV = process.env.APP_ENV ? process.env.APP_ENV : <span class="string">'prod'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> spinner = ora(chalk.green(<span class="string">`<span class="subst">$&#123;process.env.NODE_ENV&#125;</span>: <span class="subst">$&#123;APP_ENV&#125;</span>环境编译打包开始...`</span>))</span><br><span class="line">  .start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm(resolve(<span class="string">'dist'</span>), <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line">  webpack(webpackConfig, <span class="function">(<span class="params">err, stats</span>) =&gt;</span> &#123;</span><br><span class="line">    spinner.stop()</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line"></span><br><span class="line">    process.stdout.write(stats.toString(&#123;</span><br><span class="line">      colors: <span class="literal">true</span>,</span><br><span class="line">      modules: <span class="literal">false</span>,</span><br><span class="line">      children: <span class="literal">false</span>,</span><br><span class="line">      chunks: <span class="literal">false</span>,</span><br><span class="line">      chunkModules: <span class="literal">false</span></span><br><span class="line">    &#125;)+ <span class="string">'\n\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stats.hasErrors()) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(chalk.red.bold(<span class="string">'编译打包失败.\n'</span>))</span><br><span class="line">      process.exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(chalk.blue(<span class="string">'打包完成.\n'</span>))</span><br><span class="line">  &#125;)  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"dev"</span>: <span class="string">"cross-env NODE_ENV=development webpack-dev-server --color --config ./build/webpack.config.js"</span>,</span><br><span class="line">  <span class="string">"start"</span>: <span class="string">"npm run dev"</span>,</span><br><span class="line">  <span class="string">"build"</span>: <span class="string">"cross-env NODE_ENV=production node ./build/build.js"</span>,</span><br><span class="line">  <span class="string">"build:prod"</span>: <span class="string">"cross-env APP_ENV=prod npm run build"</span>,</span><br><span class="line">  <span class="string">"build:qa"</span>: <span class="string">"cross-env APP_ENV=qa npm run build"</span>,</span><br><span class="line">  <span class="string">"demo"</span>: <span class="string">"node ./build/utils.js"</span>,</span><br><span class="line">  <span class="string">"test"</span>: <span class="string">"jest"</span></span><br><span class="line">&#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;build-build-js&quot;&gt;&lt;a href=&quot;#build-build-js&quot; class=&quot;headerlink&quot; title=&quot;build/build.js&quot;&gt;&lt;/a&gt;build/build.js&lt;/h2&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    
    <category term="webpack" scheme="https://blog.afacode.top/tags/webpack/"/>
    
    <category term="ora" scheme="https://blog.afacode.top/tags/ora/"/>
    
    <category term="chalk" scheme="https://blog.afacode.top/tags/chalk/"/>
    
  </entry>
  
  <entry>
    <title>scrapy导出JSON格式</title>
    <link href="https://blog.afacode.top/2019/06/18/scrapy-save-to-json/"/>
    <id>https://blog.afacode.top/2019/06/18/scrapy-save-to-json/</id>
    <published>2019-06-18T15:13:34.000Z</published>
    <updated>2023-07-13T15:06:15.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建json保存的pipeline"><a href="#创建json保存的pipeline" class="headerlink" title="创建json保存的pipeline"></a>创建json保存的pipeline</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">import codecs <span class="comment"># 可以处理好编码，避免各种编码繁杂工作</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonPipeline</span>(<span class="title">object</span>):</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">self</span>.file = codecs.open(<span class="string">'demo.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(<span class="keyword">self</span>, item, spider)</span></span><span class="symbol">:</span></span><br><span class="line">    line = json.dumps(dict(item), ensure_ascii=False) + <span class="string">"\n"</span></span><br><span class="line">    <span class="keyword">self</span>.file.write(line)</span><br><span class="line">    <span class="keyword">return</span> item</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">spider_closed</span><span class="params">(<span class="keyword">self</span>, spider)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">self</span>.file.close()</span><br></pre></td></tr></table></figure><h2 id="Scrapy自带写入json"><a href="#Scrapy自带写入json" class="headerlink" title="Scrapy自带写入json"></a>Scrapy自带写入json</h2><p>scrapy.exports中提供的导出方式:</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  <span class="symbol">'BaseItemExporter</span>', </span><br><span class="line">  <span class="symbol">'PprintItemExporter</span>', </span><br><span class="line">  <span class="symbol">'PickleItemExporter</span>',        </span><br><span class="line">  <span class="symbol">'CsvItemExporter</span>', </span><br><span class="line">  <span class="symbol">'XmlItemExporter</span>', </span><br><span class="line">  <span class="symbol">'JsonLinesItemExporter</span>',     </span><br><span class="line">  <span class="symbol">'JsonItemExporter</span>', </span><br><span class="line">  <span class="symbol">'MarshalItemExporter</span>'</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">from scrapy.exporters import JsonItemExporter</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span>: </span><br><span class="line">  <span class="keyword">self</span>.file = open(<span class="string">'demo.json'</span>, <span class="string">'wb'</span>) </span><br><span class="line">  <span class="keyword">self</span>.exporter = JsonItemExporter(<span class="keyword">self</span>.file, encoding=<span class="string">"utf-8"</span>, ensure_ascii=False) </span><br><span class="line">  <span class="keyword">self</span>.exporter.start_exporting() </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_exporting</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">  <span class="keyword">self</span>.file.write(b<span class="string">"[\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">finish_exporting</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">  <span class="keyword">self</span>.file.write(b<span class="string">"\n]"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(<span class="keyword">self</span>, spider)</span></span>: </span><br><span class="line">  <span class="keyword">self</span>.exporter.finish_exporting() </span><br><span class="line">  <span class="keyword">self</span>.file.close() </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(<span class="keyword">self</span>, item, spider)</span></span>: </span><br><span class="line">  <span class="keyword">self</span>.exporter.export_item(item) </span><br><span class="line">  <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><blockquote><p>在settings 设置 ITEM_PIPELINES 开启</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建json保存的pipeline&quot;&gt;&lt;a href=&quot;#创建json保存的pipeline&quot; class=&quot;headerlink&quot; title=&quot;创建json保存的pipeline&quot;&gt;&lt;/a&gt;创建json保存的pipeline&lt;/h2&gt;&lt;figure class</summary>
      
    
    
    
    
    <category term="scrapy" scheme="https://blog.afacode.top/tags/scrapy/"/>
    
    <category term="json" scheme="https://blog.afacode.top/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>mac+brew 安装 mysql</title>
    <link href="https://blog.afacode.top/2019/06/15/mac-brew-install-mysql/"/>
    <id>https://blog.afacode.top/2019/06/15/mac-brew-install-mysql/</id>
    <published>2019-06-15T09:00:38.000Z</published>
    <updated>2023-07-13T15:06:15.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="brew-工具，如果没有的话"><a href="#brew-工具，如果没有的话" class="headerlink" title="brew 工具，如果没有的话"></a>brew 工具，如果没有的话</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 homebrew，是的你没看错，在终端里粘贴以下命令即可</span></span><br><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/ruby -e "$(curl -fsSL https:/</span><span class="regexp">/raw.githubusercontent.com/</span>Homebrew<span class="regexp">/install/m</span>aster<span class="regexp">/install)"</span></span><br></pre></td></tr></table></figure><h2 id="查看mysql包情况"><a href="#查看mysql包情况" class="headerlink" title="查看mysql包情况"></a>查看mysql包情况</h2><blockquote><p>查看当前最新稳定包<code>brew info mysql</code></p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/mac-afacode%202019-06-15%2017.15.02-2019615171527.png" alt="mysql msg" title="">                </div>                <div class="image-caption">mysql msg</div>            </figure><ol><li>MYSQL的版本</li><li>它存在一些冲突包，没有办法和他们共存</li><li>安装后默认是没有密码的，如果你想安全一点，可以执行 <code>mysql_secure_installation</code> 来进行引导安全设置</li><li>你可以将MYSQL设置为开机启动， <code>brew services start mysql</code></li><li>你也可以每次都手动启动或关闭MYSQL <code>mysql.server start/stop/restart</code></li></ol><blockquote><p>查看当前包信息<code>brew search mysql</code></p></blockquote><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><blockquote><p><code>brew install mysql</code> 可以在mysql后面跟指定版本<code>mysql@5.7</code></p></blockquote><ul><li>如果遇到权限问题，会有提示,按照提示完成<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/mac-afacode%202019-06-15%2017.08.36-201961517166.png" alt="权限问题" title="">                </div>                <div class="image-caption">权限问题</div>            </figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) <span class="regexp">/usr/</span>local<span class="regexp">/share/m</span>an<span class="regexp">/man5 /u</span>sr<span class="regexp">/local/</span>share<span class="regexp">/man/m</span>an7</span><br><span class="line">chmod u+w <span class="regexp">/usr/</span>local<span class="regexp">/share/m</span>an<span class="regexp">/man5 /u</span>sr<span class="regexp">/local/</span>share<span class="regexp">/man/m</span>an</span><br></pre></td></tr></table></figure></li></ul><h2 id="MYSQL使用"><a href="#MYSQL使用" class="headerlink" title="MYSQL使用"></a>MYSQL使用</h2><ul><li>重启 <code>brew service restart mysql</code></li><li>设置为开机启动 <code>brew services start mysql</code></li><li>关闭 <code>brew services stop mysql</code></li><li>手动启动或关闭 <code>mysql.server start/stop/restart</code></li><li>查看状态 <code>brew services list</code><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name  Status <span class="built_in"> User </span>   Plist</span><br><span class="line">mysql started afacode /Users/<span class="built_in">..</span><span class="built_in">..</span>/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br></pre></td></tr></table></figure><h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><blockquote><p><code>mysql_secure_installation</code> </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Press</span> <span class="string">y|Y</span> <span class="string">for</span> <span class="literal">Yes</span><span class="string">,</span> <span class="attr">any other key for No:</span> <span class="string">y</span>   <span class="string">//使用密码验证</span></span><br><span class="line"></span><br><span class="line"><span class="string">LOW</span>    <span class="string">Length</span> <span class="string">&gt;=</span> <span class="number">8</span></span><br><span class="line"><span class="string">MEDIUM</span> <span class="string">Length</span> <span class="string">&gt;=</span> <span class="number">8</span><span class="string">,</span> <span class="string">numeric,</span> <span class="string">mixed</span> <span class="string">case,</span> <span class="string">and</span> <span class="string">special</span> <span class="string">characters</span></span><br><span class="line"><span class="string">STRONG</span> <span class="string">Length</span> <span class="string">&gt;=</span> <span class="number">8</span><span class="string">,</span> <span class="string">numeric,</span> <span class="string">mixed</span> <span class="string">case,</span> <span class="string">special</span> <span class="string">characters</span> <span class="string">and</span> <span class="string">dictionary</span> <span class="string">file</span></span><br><span class="line"></span><br><span class="line"><span class="string">Please</span> <span class="string">enter</span> <span class="number">0</span> <span class="string">=</span> <span class="string">LOW,</span> <span class="number">1</span> <span class="string">=</span> <span class="string">MEDIUM</span> <span class="string">and</span> <span class="number">2</span> <span class="string">=</span> <span class="attr">STRONG:</span> <span class="number">0</span>  <span class="string">//</span> <span class="string">选择密码验证等级</span></span><br><span class="line"></span><br><span class="line"><span class="attr">New password:</span>    <span class="string">//</span> <span class="string">输入新密码</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Re-enter new password:</span> </span><br><span class="line"></span><br><span class="line"><span class="string">Do</span> <span class="string">you</span> <span class="string">wish</span> <span class="string">to</span> <span class="string">continue</span> <span class="string">with</span> <span class="string">the</span> <span class="string">password</span> <span class="string">provided?(Press</span> <span class="string">y|Y</span> <span class="string">for</span> <span class="literal">Yes</span><span class="string">,</span> <span class="string">any</span> <span class="string">other</span> <span class="string">key</span> <span class="string">for</span> <span class="literal">No</span><span class="string">)</span> <span class="string">:</span> <span class="string">y</span>   <span class="string">//是否希望继续提供密码保护</span></span><br><span class="line"></span><br><span class="line"><span class="string">Remove</span> <span class="string">anonymous</span> <span class="string">users?</span> <span class="string">(Press</span> <span class="string">y|Y</span> <span class="string">for</span> <span class="literal">Yes</span><span class="string">,</span> <span class="string">any</span> <span class="string">other</span> <span class="string">key</span> <span class="string">for</span> <span class="literal">No</span><span class="string">)</span> <span class="string">:</span> <span class="string">y</span>   <span class="string">//删除匿名用户</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">Disallow</span> <span class="string">root</span> <span class="string">login</span> <span class="string">remotely?</span> <span class="string">(Press</span> <span class="string">y|Y</span> <span class="string">for</span> <span class="literal">Yes</span><span class="string">,</span> <span class="string">any</span> <span class="string">other</span> <span class="string">key</span> <span class="string">for</span> <span class="literal">No</span><span class="string">)</span> <span class="string">:</span> <span class="string">n</span> <span class="string">//</span> <span class="string">是否禁止远程登录</span></span><br><span class="line"></span><br><span class="line"><span class="string">Remove</span> <span class="string">test</span> <span class="string">database</span> <span class="string">and</span> <span class="string">access</span> <span class="string">to</span> <span class="string">it?</span> <span class="string">(Press</span> <span class="string">y|Y</span> <span class="string">for</span> <span class="literal">Yes</span><span class="string">,</span> <span class="string">any</span> <span class="string">other</span> <span class="string">key</span> <span class="string">for</span> <span class="literal">No</span><span class="string">)</span> <span class="string">:</span> <span class="string">n</span>  <span class="string">//</span> <span class="string">是否删除测试库</span></span><br><span class="line"></span><br><span class="line"><span class="string">Reload</span> <span class="string">privilege</span> <span class="string">tables</span> <span class="string">now?</span> <span class="string">(Press</span> <span class="string">y|Y</span> <span class="string">for</span> <span class="literal">Yes</span><span class="string">,</span> <span class="string">any</span> <span class="string">other</span> <span class="string">key</span> <span class="string">for</span> <span class="literal">No</span><span class="string">)</span> <span class="string">:</span> <span class="string">y</span>  <span class="string">//</span> <span class="string">刷新数据库权限</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20190615-184621@2x-2019615184655.png" alt="安装过程" title="">                </div>                <div class="image-caption">安装过程</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20190615-184558@2x-2019615184646.png" alt="安装过程2" title="">                </div>                <div class="image-caption">安装过程2</div>            </figure></li></ul><h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><blockquote><p>mysql -uroot -p</p></blockquote><blockquote><p>show databases;</p></blockquote><blockquote><p>use mysql;</p></blockquote><blockquote><p>show tables;</p></blockquote><blockquote><p>exit;</p></blockquote><h2 id="navicat连接"><a href="#navicat连接" class="headerlink" title="navicat连接"></a>navicat连接</h2><h3 id="报错-2059-Authentication-plugin-39-caching-sha2-password-39-cannot-be-loaded-dlope"><a href="#报错-2059-Authentication-plugin-39-caching-sha2-password-39-cannot-be-loaded-dlope" class="headerlink" title="报错 2059 - Authentication plugin &#39;caching_sha2_password&#39; cannot be loaded dlope"></a>报错 <code>2059 - Authentication plugin &#39;caching_sha2_password&#39; cannot be loaded dlope</code></h3><p><code>2059 - Authentication plugin &#39;caching_sha2_password&#39; cannot be loaded: dlopen(../Frameworks/caching_sha2_password.so, 2): image not found</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20190616-100036@2x-201961610056.png" alt="2059 error" title="">                </div>                <div class="image-caption">2059 error</div>            </figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER<span class="built_in"> USER </span><span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'密码'</span>;</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/WX20190616-095947@2x-201961610116.png" alt="success" title="">                </div>                <div class="image-caption">success</div>            </figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;brew-工具，如果没有的话&quot;&gt;&lt;a href=&quot;#brew-工具，如果没有的话&quot; class=&quot;headerlink&quot; title=&quot;brew 工具，如果没有的话&quot;&gt;&lt;/a&gt;brew 工具，如果没有的话&lt;/h2&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
    <category term="mysql" scheme="https://blog.afacode.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>selenium 不加载图片</title>
    <link href="https://blog.afacode.top/2019/06/13/python-spdier-selenium-tips-1/"/>
    <id>https://blog.afacode.top/2019/06/13/python-spdier-selenium-tips-1/</id>
    <published>2019-06-13T15:11:14.000Z</published>
    <updated>2023-07-13T15:06:15.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python-selenium-不加载图片"><a href="#python-selenium-不加载图片" class="headerlink" title="python selenium 不加载图片"></a>python selenium 不加载图片</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">chrome_options = webdriver.<span class="constructor">ChromeOptions()</span></span><br><span class="line">prefs = &#123;<span class="string">"profile.managed_default_content_settings.images"</span>:<span class="number">2</span>&#125;</span><br><span class="line">chrome_options.add<span class="constructor">_experimental_option(<span class="string">"prefs"</span>,<span class="params">prefs</span>)</span></span><br><span class="line">            </span><br><span class="line">driver = webdriver.<span class="constructor">Chrome(<span class="params">chrome_options</span>=<span class="params">chrome_options</span>)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;python-selenium-不加载图片&quot;&gt;&lt;a href=&quot;#python-selenium-不加载图片&quot; class=&quot;headerlink&quot; title=&quot;python selenium 不加载图片&quot;&gt;&lt;/a&gt;python selenium 不加载图片&lt;/</summary>
      
    
    
    
    <category term="python" scheme="https://blog.afacode.top/categories/python/"/>
    
    
    <category term="python" scheme="https://blog.afacode.top/tags/python/"/>
    
    <category term="selenium" scheme="https://blog.afacode.top/tags/selenium/"/>
    
  </entry>
  
  <entry>
    <title>React does not recognize the computedMatch prop on a DOM element</title>
    <link href="https://blog.afacode.top/2019/06/11/react-router-fragment-err/"/>
    <id>https://blog.afacode.top/2019/06/11/react-router-fragment-err/</id>
    <published>2019-06-11T15:05:58.000Z</published>
    <updated>2023-07-13T15:06:15.432Z</updated>
    
    <content type="html"><![CDATA[<p>完整的警告是：<br>Warning: React does not recognize the computedMatch prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase computedmatch instead. If you accidentally passed it from a parent component, remove it from the DOM element.</p><blockquote><p>版本：</p></blockquote><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"react"</span>: <span class="string">"^16.8.6"</span>,</span><br><span class="line"><span class="string">"react-dom"</span>: <span class="string">"^16.8.6"</span>,</span><br><span class="line"><span class="string">"react-redux"</span>: <span class="string">"^7.0.3"</span>,</span><br><span class="line"><span class="string">"react-router-dom"</span>: <span class="string">"^5.0.1"</span>,</span><br></pre></td></tr></table></figure><p><strong>引起警告的原因是</strong>： 在<code>react-router-dom</code>的<code>&lt;Switch&gt;</code>中使用了<code>&lt;div&gt;</code></p><p>解决办法很简单，把<code>&lt;Switch&gt;</code>增加一层<code>&lt;Fragment&gt;</code>就行了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Switch&gt;</span><br><span class="line">+       <span class="xml"><span class="tag">&lt;<span class="name">Fragment</span>&gt;</span></span></span><br><span class="line">        &lt;div className="App"&gt;</span><br><span class="line">          &lt;header className="App-header"&gt;  </span><br><span class="line">            &lt;Link to='/'&gt;Home&lt;/Link&gt;</span><br><span class="line">            &lt;Link to='/about'&gt;About&lt;/Link&gt;</span><br><span class="line">            &lt;Link to='/users'&gt;Users&lt;/Link&gt;</span><br><span class="line">            &lt;Route exact path='/' component=&#123;Index&#125; /&gt;</span><br><span class="line">            &lt;Route exact path='/about' component=&#123;About&#125; /&gt;</span><br><span class="line">            &lt;Route exact path='/users' component=&#123;Users&#125; /&gt;</span><br><span class="line">          &lt;/header&gt;</span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">+       <span class="tag">&lt;/<span class="name">Fragment</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;完整的警告是：&lt;br&gt;Warning: React does not recognize the computedMatch prop on a DOM element. If you intentionally want it to appear in the DOM a</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="react" scheme="https://blog.afacode.top/tags/react/"/>
    
    <category term="react-router" scheme="https://blog.afacode.top/tags/react-router/"/>
    
  </entry>
  
  <entry>
    <title>修改SSH端口与端口分配规则分类</title>
    <link href="https://blog.afacode.top/2019/06/05/linux-ssh-port/"/>
    <id>https://blog.afacode.top/2019/06/05/linux-ssh-port/</id>
    <published>2019-06-05T15:11:54.000Z</published>
    <updated>2023-07-13T15:06:15.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改SSH默认端口"><a href="#修改SSH默认端口" class="headerlink" title="修改SSH默认端口"></a>修改SSH默认端口</h2><blockquote><p>打开 <code>vi /etc/ssh/sshd_config</code></p></blockquote><blockquote><p><code>Port 22</code> 修改22端口号为自己的 1098</p></blockquote><blockquote><p>保存重启 <code>service sshd restart</code></p></blockquote><blockquote><p>修改防火墙了 阿里云服务器，可以到安全组配置里增加相应端口：<strong>端口范围1098/1098</strong></p></blockquote><blockquote><p>测试</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用root账户、默认的22端口登录</span></span><br><span class="line">ssh IP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用test账户、默认的22端口登录</span></span><br><span class="line">ssh test@IP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用test账户、自定义的1098端口登录</span></span><br><span class="line">ssh -p 1098 test@IP</span><br></pre></td></tr></table></figure><h2 id="端口分配规则分类"><a href="#端口分配规则分类" class="headerlink" title="端口分配规则分类"></a>端口分配规则分类</h2><p>TCP/IP 协议中的端口在报头中占2个字节即16位，范围是从0-65535。端口号用来表示和区别网络中的不同应用程序 </p><ol><li>公认端口（Well Known Ports）：0-1023之间的端口号。这些端口由 IANA 分配管理。IANA 把这些端口分配给最重要的一些应用程序，让所有的用户都知道，当一种新的应用程序出现后，IANA必须为它指派一个公认端口。</li></ol><blockquote><p>常用的公认端口有： </p></blockquote><ul><li>FTP : 21 </li><li>TELNET : 23 </li><li>SMTP : 25 </li><li>DNS : 53 </li><li>TFTP : 69 </li><li>HTTP : 80 </li><li>SNMP : 161 </li></ul><ol start="2"><li>注册端口（Registered Ports）：从1024-49151。是公司和其他用户向互联网名称与数字地址分配机构（ICANN）登记的端口号，利用因特网的传输控制协议（TCP）和用户数据报协议（UDP）进行通信的应用软件需要使用这些端口。在大多数情况下，这些应用软件和普通程序一样可以被非特权用户打开。 </li><li>客户端使用的端口号：49152~65535.这类端口号仅在客户进程运行时才动态选择，因此又叫做短暂端口号。被保留给客户端进程选择暂时使用的。也可以理解为，客户端启动的时候操作系统随机分配一个端口用来和服务器通信，客户端进程关闭下次打开时，又重新分配一个新的端口</li></ol><blockquote><p>我们一般是使用1024-49151</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;修改SSH默认端口&quot;&gt;&lt;a href=&quot;#修改SSH默认端口&quot; class=&quot;headerlink&quot; title=&quot;修改SSH默认端口&quot;&gt;&lt;/a&gt;修改SSH默认端口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;打开 &lt;code&gt;vi /etc/ssh/sshd_con</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.afacode.top/tags/linux/"/>
    
    <category term="ssh" scheme="https://blog.afacode.top/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>scrapy爬虫总体笔记记录</title>
    <link href="https://blog.afacode.top/2019/05/27/python-scrapy-text/"/>
    <id>https://blog.afacode.top/2019/05/27/python-scrapy-text/</id>
    <published>2019-05-27T15:53:25.000Z</published>
    <updated>2023-07-13T15:06:15.421Z</updated>
    
    <content type="html"><![CDATA[<p>scrapy爬虫 - 记忆笔记 - 只供自己查找</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>pip3 install scrapy</code></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p><code>scrapy startproject example</code></p><h3 id="创建爬虫"><a href="#创建爬虫" class="headerlink" title="创建爬虫"></a>创建爬虫</h3><p><code>scrapy genspider book_spider</code></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p><code> scrapy crawl book_spider -o books.csv</code></p><h2 id="选择器-提取数据"><a href="#选择器-提取数据" class="headerlink" title="选择器(提取数据)"></a>选择器(提取数据)</h2><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p><a href="http://www.scrapyd.cn/doc/146.html" target="_blank" rel="noopener">css选择器</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选中所有的img</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'img'</span>)</span><br><span class="line"><span class="comment"># 选中div后代中的img（后代元素包括子代、孙代等）</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'div img'</span>)</span><br><span class="line"><span class="comment"># 选中body子元素中的div元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'body&gt;div'</span>)</span><br><span class="line"><span class="comment"># 选中包含style属性的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'[style]'</span>)</span><br><span class="line"><span class="comment"># 选中属性id值为images-1的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'[id=images-1]'</span>)</span><br><span class="line"><span class="comment"># 选中CLASS属性包含img的a元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'a.img'</span>)</span><br><span class="line"><span class="comment"># 选中CLASS属性包含img的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'.img'</span>)</span><br><span class="line"><span class="comment"># 选中所有a的文本</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'a::text'</span>).extract()</span><br><span class="line"><span class="comment"># 选中所有a的href属性文本 extract_first()</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'a::attr(href)'</span>).extract()</span><br></pre></td></tr></table></figure><h3 id="regx"><a href="#regx" class="headerlink" title="regx"></a>regx</h3><h3 id="Splash"><a href="#Splash" class="headerlink" title="Splash"></a>Splash</h3><p>Splash 是 Scrapy 官方推荐的 JavaScript 渲染引擎，是一款轻量级的无界面浏览器，类似于 PhantomJS</p><blockquote><p>pip3 install scrapy-splash</p></blockquote><ul><li>SplashRequest,用户只需使用scrapy_splash.SplashRequest（替代scrapy.Request）提交请求即可<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from scrapy_splash import SplashRequest</span><br><span class="line"><span class="function"><span class="title">SplashRequest</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></li><li>下面是 SplashRequest 构造器方法中的一些常用参数。 <ul><li>① url ：与scrapy.Request中的url相同，也就是待爬取页面的url（注意，不是Splash服务器地址）。</li><li>② headers: 与scrapy.Request中的headers相同。</li><li>③ cookies：与scrapy.Request中的cookies相同。</li><li>④ args：传递给Splash的参数（除url以外），如wait、timeout、images、js_source等。</li></ul></li></ul><hr><ul><li>创建项目</li><li>setting.py<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 1. Splash服务器地址</span></span><br><span class="line">SPLASH_URL = <span class="string">'http://localhost:8050'</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 2. 开启Splash的两个下载中间件并调整HttpCompressionMiddleware的次序</span></span><br><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line"><span class="string">'scrapy_splash.SplashCookiesMiddleware'</span>: <span class="number">723</span>,</span><br><span class="line"><span class="string">'scrapy_splash.SplashMiddleware'</span>: <span class="number">725</span>,</span><br><span class="line"><span class="string">'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware'</span>: <span class="number">810</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># 3. 设置去重过滤器</span></span><br><span class="line">DUPEFILTER_CLASS = <span class="string">'scrapy_splash.SplashAwareDupeFilter'</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 4. 用来支持cache_args（可选）</span></span><br><span class="line">SPIDER_MIDDLEWARES = &#123;</span><br><span class="line"><span class="string">'scrapy_splash.SplashDeduplicateArgsMiddleware'</span>: <span class="number">100</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改Spider<br><code># 把 ScrapyRequest(url) 改为SplashRequest(url, args={&#39;images&#39;:0,&#39;timeout&#39;=3})</code></li></ul><h3 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h3><p><a href="http://www.scrapyd.cn/doc/186.html" target="_blank" rel="noopener">xpath</a></p><h2 id="spider-函数解析"><a href="#spider-函数解析" class="headerlink" title="spider 函数解析"></a>spider 函数解析</h2><h3 id="请求-打开页面"><a href="#请求-打开页面" class="headerlink" title="请求(打开页面)"></a>请求(打开页面)</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">simpleUrl</span>(<span class="title">scrapy</span>.<span class="title">Spider</span>):</span></span><br><span class="line">    name = <span class="string">"simpleUrl"</span></span><br><span class="line">    start_urls = [<span class="string">'http://books.toscrape.com/'</span>]</span><br><span class="line">    或者</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        urls = [ <span class="comment">#爬取的链接由此方法通过下面链接爬取页面</span></span><br><span class="line">     <span class="string">'http://lab.scrapyd.cn/page/1/'</span>,</span><br><span class="line">     <span class="string">'http://lab.scrapyd.cn/page/2/'</span>,</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> <span class="symbol">urls:</span></span><br><span class="line">    <span class="comment">#发送请求</span></span><br><span class="line">     <span class="keyword">yield</span> scrapy.Request(url=url, callback=<span class="keyword">self</span>.parse)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(<span class="keyword">self</span>, response)</span></span><span class="symbol">:</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="抓取数据"><a href="#抓取数据" class="headerlink" title="抓取数据"></a>抓取数据</h3><ul><li>有些数据信息需要提取两个页面才能完成，那么如何把上一个def中的数据，传入下一个def中呢<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构造字典 meta=&#123;'_book_item':book_item&#125;，通过scrapy.Request传入</span></span><br><span class="line"><span class="comment"># 下一个def 通过book_item = response.meta['_book_item']获得数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(<span class="keyword">self</span>, response)</span></span><span class="symbol">:</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">yield</span> scrapy.Request(url, headers= &#123;<span class="string">'User-Agent'</span><span class="symbol">:<span class="string">'Mozilla/5.0'</span></span>&#125;, callback=<span class="keyword">self</span>.book_parse, meta=&#123;<span class="string">'_book_item'</span><span class="symbol">:book_item</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_book</span><span class="params">(<span class="keyword">self</span>, response)</span></span><span class="symbol">:</span></span><br><span class="line">    book_item = response.meta[<span class="string">'_book_item'</span>]</span><br></pre></td></tr></table></figure></li><li>scrapy 爬网站 显示 Filtered offsite request to 错误</li></ul><p>官方对这个的解释，是你要request的地址和allow_domain里面的冲突，从而被过滤掉。可以停用过滤功能<br><code>yield Request(url, callback=self.parse_item, dont_filter=True)</code></p><h2 id="中间件-pipeline"><a href="#中间件-pipeline" class="headerlink" title="中间件(pipeline)"></a>中间件(pipeline)</h2><ol><li>Item Pipeline 可以处理、存储数据</li><li>处理从 spider 发送的，由Item 封装的数据</li><li>页面数据抓取用spider解析，其他用Item Pipeline</li><li>主要的三个模块： <ul><li>① process_item(item, spider)：处理数据 </li><li>② open_spider(self, spider)：打开文件或数据库 </li><li>③ close_spider(self, spider)：关闭文件或数据库</li><li></li></ul></li><li>处理数据步骤： <ul><li>① 打开pipelines.py，修改文件 </li><li>② 打开setting.py，修改配置文件</li></ul></li></ol><h3 id="图片下载中间件"><a href="#图片下载中间件" class="headerlink" title="图片下载中间件"></a>图片下载中间件</h3><p>打开<code>pipeline.py</code>进行中间件编写，这里的话主要继承了scrapy的：<code>ImagesPipeline</code>这个类，我们需要在里面实现：<code>def get_media_requests(self, item, info)</code>这个方法，这个方法主要是把蜘蛛yield过来的图片链接执行下载</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">ImagespiderPipeline</span>(<span class="symbol">ImagesPipeline</span>):</span><br><span class="line"></span><br><span class="line">    <span class="symbol">def</span> <span class="symbol">get_media_requests</span>(<span class="symbol">self, <span class="symbol">item</span>, <span class="symbol">info</span></span>):</span><br><span class="line">        # 循环每一张图片地址下载，若传过来的不是集合则无需循环直接<span class="symbol">yield</span></span><br><span class="line">        <span class="symbol">for</span> <span class="symbol">image_url</span> <span class="symbol">in</span> <span class="symbol">item</span>['<span class="symbol">imgurl</span>']:</span><br><span class="line">            <span class="symbol">yield</span> <span class="symbol">Request</span>(<span class="symbol">image_url</span>)</span><br></pre></td></tr></table></figure><blockquote><p>设置，启动图片下载 <code>settings</code></p></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#图片存储位置</span></span><br><span class="line">IMAGES_STORE = <span class="string">'D:\ImageSpider'</span></span><br><span class="line"><span class="meta">#启动图片下载中间件</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'ImageSpider.pipelines.ImagespiderPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片重命名、放入不同文件夹"><a href="#图片重命名、放入不同文件夹" class="headerlink" title="图片重命名、放入不同文件夹"></a>图片重命名、放入不同文件夹</h3><p><code>ImagesPipeline</code>的一些实现，你会发现里面有这么一个方法：<code>def file_path(self, request, response=None, info=None)</code> 这个方法便是图片重命名以及目录归类的方法，我们只需要重写里面的一些内容，便可轻松实现scrapy图片重命名，图片保存不同目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImagespiderPipeline</span><span class="params">(ImagesPipeline)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># 重命名，若不重写这函数，图片名为哈希，就是一串乱七八糟的名字</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_path</span><span class="params">(self, request, response=None, info=None)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提取url前面名称作为图片名。</span></span><br><span class="line">        image_guid = request.url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="comment"># 接收上面meta传递过来的图片名称</span></span><br><span class="line">        name = request.meta[<span class="string">'name'</span>]</span><br><span class="line">        <span class="comment"># 过滤windows字符串，不经过这么一个步骤，你会发现有乱码或无法下载</span></span><br><span class="line">        name = re.sub(<span class="string">r'[？\\*|“&lt;&gt;:/]'</span>, <span class="string">''</span>, name)</span><br><span class="line">        <span class="comment"># 分文件夹存储的关键：&#123;0&#125;对应着name；&#123;1&#125;对应着image_guid</span></span><br><span class="line">        filename = <span class="string">u'&#123;0&#125;/&#123;1&#125;'</span>.format(name, image_guid)</span><br><span class="line">        <span class="keyword">return</span> filename</span><br></pre></td></tr></table></figure><h3 id="图片防盗链下载-middlewares-py"><a href="#图片防盗链下载-middlewares-py" class="headerlink" title="图片防盗链下载 middlewares.py"></a>图片防盗链下载 <code>middlewares.py</code></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> signals</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AoisolasSpiderMiddleware</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span><span class="params">(self, request, spider)</span>:</span></span><br><span class="line">        <span class="string">'''设置headers和切换请求头'''</span></span><br><span class="line">        referer = request.url</span><br><span class="line">        <span class="keyword">if</span> referer:</span><br><span class="line">            request.headers[<span class="string">'referer'</span>] = referer</span><br></pre></td></tr></table></figure><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><p> 版本 <code>&gt;3.4</code> PyMySQL，  <code>2 - &lt;3.4</code> MySQLdb </p><blockquote><p>pip3 install pymysql</p></blockquote><ul><li>必须实现 <code>process_item(self, item, spider)</code> 方法</li></ul><p>这个方法有两个参数，一个是item，一个是spider。item就是爬取到的数据，执行完数据库插入之后，需要执行返回，也就是需要：return item，无论你是插入mysql、mongodb还是其他数据库，都必须实现这么一个方法</p><ul><li><code>open_spider(self, spider)</code> 爬虫打开时执行</li><li><code>close_spider(self, spider)</code> 爬虫关闭时执行<blockquote><p>根据自己的需要，按需实现，并非必须方法！</p></blockquote></li></ul><blockquote><p>新建 MySQLPipline.py mysql中间件</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySQLPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 连接数据库</span></span><br><span class="line">        self.connect = pymysql.connect(</span><br><span class="line">            host=<span class="string">'127.0.0.1'</span>,  <span class="comment"># 数据库地址</span></span><br><span class="line">            port=<span class="number">3306</span>,  <span class="comment"># 数据库端口</span></span><br><span class="line">            db=<span class="string">'scrapyMysql'</span>,  <span class="comment"># 数据库名</span></span><br><span class="line">            user=<span class="string">'root'</span>,  <span class="comment"># 数据库用户名</span></span><br><span class="line">            passwd=<span class="string">'root'</span>,  <span class="comment"># 数据库密码</span></span><br><span class="line">            charset=<span class="string">'utf8'</span>,  <span class="comment"># 编码方式</span></span><br><span class="line">            use_unicode=<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 通过cursor执行增删查改</span></span><br><span class="line">        self.cursor = self.connect.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        self.cursor.execute(</span><br><span class="line">            <span class="string">"""insert into chuanke(name, type, view, price ,teacher, url)</span></span><br><span class="line"><span class="string">            value (%s, %s, %s, %s, %s, %s)"""</span>,<span class="comment">#纯属python操作mysql知识，不熟悉请恶补</span></span><br><span class="line">            (item[<span class="string">'name'</span>],<span class="comment"># item里面定义的字段和表字段对应</span></span><br><span class="line">             item[<span class="string">'type'</span>],</span><br><span class="line">             item[<span class="string">'view'</span>],</span><br><span class="line">             item[<span class="string">'price'</span>],</span><br><span class="line">             item[<span class="string">'teacher'</span>],</span><br><span class="line">             item[<span class="string">'url'</span>]))</span><br><span class="line">             </span><br><span class="line">        <span class="comment"># 提交sql语句</span></span><br><span class="line">        self.connect.commit()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> item  <span class="comment"># 必须实现返回</span></span><br></pre></td></tr></table></figure><blockquote><p>settings.py启用MySQLPipline</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'scrapyMysql.MySQLPipeline.MySQLPipeline'</span>: <span class="number">1</span>,</span><br><span class="line">     <span class="meta">#格式为：<span class="string">'项目名.文件名.类名'</span>：优先级（越小越大）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h3><blockquote><p>pip3 install pymongo</p></blockquote><ul><li>创建Pipeline,类似mysql。 InputmongodbPipeline</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import pymongo</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InputmongodbPipeline</span>(<span class="title">object</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="comment"># 建立MongoDB数据库连接</span></span><br><span class="line">        client = pymongo.MongoClient(<span class="string">'127.0.0.1'</span>, <span class="number">27017</span>)</span><br><span class="line">        <span class="comment"># 连接所需数据库,ScrapyChina为数据库名</span></span><br><span class="line">        db = client[<span class="string">'ScrapyChina'</span>]</span><br><span class="line">        <span class="comment"># 连接所用集合，也就是我们通常所说的表，mingyan为表名</span></span><br><span class="line">        <span class="keyword">self</span>.post = db[<span class="string">'mingyan'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(<span class="keyword">self</span>, item, spider)</span></span><span class="symbol">:</span></span><br><span class="line">        postItem = dict(item)  <span class="comment"># 把item转化成字典形式</span></span><br><span class="line">        <span class="keyword">self</span>.post.insert(postItem)  <span class="comment"># 向数据库插入一条记录</span></span><br><span class="line">        <span class="keyword">return</span> item  <span class="comment"># 会在控制台输出原item数据，可以选择不写</span></span><br></pre></td></tr></table></figure><blockquote><p>setting.py</p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ITEM_PIPELINES</span> = &#123;</span><br><span class="line">   <span class="string">'InputMongodb.inputMongodbPipeline.InputmongodbPipeline'</span>: 300,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapy存入mongodb比起存入mysql要简单得多，我们不用创建表，只需在程序里面创建相应库名、表名即可</p><h2 id="部署-scrapyd"><a href="#部署-scrapyd" class="headerlink" title="部署 scrapyd"></a>部署 scrapyd</h2><p>在每台Linux机子上安装好scrapyd，并开启scrapyd服务；然后我们在windows客户端，也就是开发爬虫的这台电脑，安装上scrapyd的客户端<code>scrapyd-client</code>，通过scrapyd-client把不同网站的爬虫发送到不同的服务器，然后我们只需在windows上就行<strong>修改、启动、停止</strong>爬虫操作，更自动化的是scrapyd给我提供了很python接口，我们可以通过python编程控制蜘蛛的运行</p><blockquote><p>pip3 install scrapyd-client 安装在开发机</p></blockquote><ul><li>scrapyd的话一般安装在Linux上面，负责开启Linux端口，供scrapyd-client调用<blockquote><p>pip3 install scrapyd </p></blockquote></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;scrapy爬虫 - 记忆笔记 - 只供自己查找&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://blog.afacode.top/categories/python/"/>
    
    
    <category term="mysql" scheme="https://blog.afacode.top/tags/mysql/"/>
    
    <category term="python" scheme="https://blog.afacode.top/tags/python/"/>
    
    <category term="scrapy" scheme="https://blog.afacode.top/tags/scrapy/"/>
    
    <category term="mongodb" scheme="https://blog.afacode.top/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Mac Python Selenium+WebDriver(chromedriver)安装下载</title>
    <link href="https://blog.afacode.top/2019/05/25/python-selenium-webdriver-install/"/>
    <id>https://blog.afacode.top/2019/05/25/python-selenium-webdriver-install/</id>
    <published>2019-05-25T14:21:55.000Z</published>
    <updated>2023-07-13T15:06:15.421Z</updated>
    
    <content type="html"><![CDATA[<p>Selenium 是一个开源测试框架，用来对web应用(比如网站)做自动化测试用的，因为它可以驱动浏览器，诸如Chrome，Firefox，IE等，所以可以较为真实的模拟人自动去点击网站的各个按钮，翻页，填写表单等，这样节省了很多测试时间</p><a id="more"></a><h2 id="selenium安装"><a href="#selenium安装" class="headerlink" title="selenium安装"></a>selenium安装</h2><blockquote><p>pip3 install selenium<br>pip3 list 查看</p></blockquote><h2 id="chromedriver安装"><a href="#chromedriver安装" class="headerlink" title="chromedriver安装"></a>chromedriver安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">chromedriver下载地址|镜像</a> 注意chrome对应的版本</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>将可执行文件配置到环境变量或将文件移动到属于环境变量的目录里</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mv chromedriver /usr/<span class="built_in">local</span>/bin</span><br><span class="line">或修改~/.profile文件</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/usr/local/bin/chromedriver"</span></span><br><span class="line"><span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>命令行下直接执行chromedriver命令了打印出</p><blockquote><p>chromedriver</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Starting ChromeDriver 74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@&#123;#29&#125;) on<span class="built_in"> port </span>9515</span><br><span class="line">Only local connections are allowed.</span><br><span class="line">Please protect ports used by ChromeDriver <span class="keyword">and</span> related test frameworks <span class="keyword">to</span> prevent access by malicious code.</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/mac-afacode%202019-05-25%2022.31.15-2019525223137.png" alt="mac-afacode 2019-05-25 22.31.15-2019525223137" title="">                </div>                <div class="image-caption">mac-afacode 2019-05-25 22.31.15-2019525223137</div>            </figure><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">browser.<span class="builtin-name">get</span>(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line"><span class="builtin-name">print</span>(browser.page_source)</span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Selenium 是一个开源测试框架，用来对web应用(比如网站)做自动化测试用的，因为它可以驱动浏览器，诸如Chrome，Firefox，IE等，所以可以较为真实的模拟人自动去点击网站的各个按钮，翻页，填写表单等，这样节省了很多测试时间&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://blog.afacode.top/categories/python/"/>
    
    
    <category term="python" scheme="https://blog.afacode.top/tags/python/"/>
    
    <category term="selenium" scheme="https://blog.afacode.top/tags/selenium/"/>
    
    <category term="webDriver" scheme="https://blog.afacode.top/tags/webDriver/"/>
    
    <category term="chromedriver" scheme="https://blog.afacode.top/tags/chromedriver/"/>
    
  </entry>
  
  <entry>
    <title>项目开发工作</title>
    <link href="https://blog.afacode.top/2019/05/21/project-summary/"/>
    <id>https://blog.afacode.top/2019/05/21/project-summary/</id>
    <published>2019-05-21T09:33:50.000Z</published>
    <updated>2023-07-13T15:06:15.421Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发工作"><a href="#开发工作" class="headerlink" title="开发工作"></a>开发工作</h2><h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><ol><li>必须对开发过程中的各种事件（例如：谁到什么时间完成了什么事情）进行管理和共享。</li><li>各类工作成果以及新的知识技巧等必须在团队<strong>内部共享</strong>。</li><li>管理工作成果的变更，既要防止成果被破坏，又要保证各个成员利用现有成果并行作业。</li><li>能够证明团队开发出的软件在<strong>任何时候</strong>都是可以<strong>正常运行</strong>的。</li><li>尽可能的使用<strong>自动化</strong>的工作流程，让团队成员能够正确的实施开发、测试和部署</li></ol><h3 id="项目遵循流程"><a href="#项目遵循流程" class="headerlink" title="项目遵循流程"></a>项目遵循流程</h3><blockquote><p>需求评审 -&gt; 视觉评审 -&gt; 接口约定 -&gt; 需求评估 -&gt; TC评审 -&gt; 并行独立开发 -&gt; 联调 -&gt; 测试 -&gt; 发布</p></blockquote><ol><li>模块划分</li><li>任务分配</li><li>项目进度表（每日更新）</li></ol><blockquote><p>一般发布的流程： 1. 代码提交 2. 打包构建 3. 备份服务器当前文件 - 回滚使用 4. 将构建结果同步到服务器目录 5. 合并代码到Master - 保证后续的代码都是最新的</p></blockquote><h3 id="团队开发工具"><a href="#团队开发工具" class="headerlink" title="团队开发工具"></a>团队开发工具</h3><ul><li>版本控制：Git</li><li>代码托管：<a href="https://about.gitlab.com/" target="_blank" rel="noopener">Gitlab</a>、Github</li><li>敏捷闭环工具：<a href="https://www.zentao.net/" target="_blank" rel="noopener">禅道</a>、<a href="https://www.atlassian.com/software/jira/features" target="_blank" rel="noopener">JIRA</a></li><li>持续集成：<a href="https://jenkins.io/" target="_blank" rel="noopener">Jenkins</a>、<a href="https://travis-ci.org/" target="_blank" rel="noopener">ravis-CI</a></li></ul><h2 id="公司组织架构图"><a href="#公司组织架构图" class="headerlink" title="公司组织架构图"></a>公司组织架构图</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/company_architecture-201952117729.png" alt="技术部门组织" title="">                </div>                <div class="image-caption">技术部门组织</div>            </figure><h2 id="行为准则"><a href="#行为准则" class="headerlink" title="行为准则"></a>行为准则</h2><p>1、七项习惯：<strong>积极主动+以终为始+要事第一+双赢思维+知彼解己统合综效+不断更新</strong></p><p>2、成熟模式图：依赖- 独立- 互赖</p><p>5、习惯：知识+技巧+意愿</p><p>6、自由选择：自觉+想象力+良知+独立意志</p><p>7、人生价值：经验价值+创造价值+态度价值</p><p>8、关注圈和影响圈</p><p>9、使命宣言 - 心灵演练 - 角色 - 目标 - 计划 - 调整</p><p>10、管理不同于领导：领导是有哲学基础更近乎艺术的右脑活动，左脑管理右脑领导</p><p>11、情感帐户：理解别人+注意细节+信守承诺+阐明期望+诚恳正直+勇于道歉</p><p>12、双赢要领：品德+关系+协议+制度+流程</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开发工作&quot;&gt;&lt;a href=&quot;#开发工作&quot; class=&quot;headerlink&quot; title=&quot;开发工作&quot;&gt;&lt;/a&gt;开发工作&lt;/h2&gt;&lt;h3 id=&quot;原则&quot;&gt;&lt;a href=&quot;#原则&quot; class=&quot;headerlink&quot; title=&quot;原则&quot;&gt;&lt;/a&gt;原则&lt;/h</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>修改Mac系统的默认截图保存路径/文件名</title>
    <link href="https://blog.afacode.top/2019/05/21/macos-screen/"/>
    <id>https://blog.afacode.top/2019/05/21/macos-screen/</id>
    <published>2019-05-21T03:43:15.000Z</published>
    <updated>2023-07-13T15:06:15.416Z</updated>
    
    <content type="html"><![CDATA[<p>修改Mac系统的默认截图保存路径/文件名</p><a id="more"></a><h2 id="修改Mac系统的默认截图保存路径"><a href="#修改Mac系统的默认截图保存路径" class="headerlink" title="修改Mac系统的默认截图保存路径"></a>修改Mac系统的默认截图保存路径</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. defaults <span class="keyword">write</span> com.apple.screencapture <span class="keyword">location</span> <span class="title">~/Pictures</span>/screen` </span><br><span class="line"><span class="comment"># ~/Pictures/screen为你需要图片保存的位置</span></span><br><span class="line"><span class="number">2</span>. killall SystemUIServer</span><br><span class="line"><span class="number">3</span>. command+shift+<span class="number">3</span> <span class="comment"># 测试</span></span><br></pre></td></tr></table></figure><h2 id="更换截图默认文件名"><a href="#更换截图默认文件名" class="headerlink" title="更换截图默认文件名"></a>更换截图默认文件名</h2><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> defaults <span class="keyword">write</span> <span class="keyword">com</span>.apple.screencapture <span class="keyword">name</span> <span class="string">"mac-afacode"</span></span><br><span class="line"><span class="number">2.</span> killall SystemUIServer</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;修改Mac系统的默认截图保存路径/文件名&lt;/p&gt;</summary>
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
    <category term="macos" scheme="https://blog.afacode.top/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>阿里云配置ssl证书</title>
    <link href="https://blog.afacode.top/2019/05/20/aliyun-ssl/"/>
    <id>https://blog.afacode.top/2019/05/20/aliyun-ssl/</id>
    <published>2019-05-20T13:17:12.000Z</published>
    <updated>2023-07-13T15:06:15.410Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云配置ssl免费证书，使用期只有一年</p><a id="more"></a><h2 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h2><h3 id="阿里云后台-产品与服务-gt-SSL证书（应用安全）"><a href="#阿里云后台-产品与服务-gt-SSL证书（应用安全）" class="headerlink" title="阿里云后台 产品与服务 -&gt; SSL证书（应用安全）"></a>阿里云后台 <strong>产品与服务</strong> -&gt; SSL证书（应用安全）</h3><h3 id="选择免费-DV-SSL"><a href="#选择免费-DV-SSL" class="headerlink" title="选择免费 DV SSL"></a>选择免费 DV SSL</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/屏幕快照%202019-05-21%2011.16.05-2019521112140.png" alt="屏幕快照 2019-05-21 11.16.05-2019521112140" title="">                </div>                <div class="image-caption">屏幕快照 2019-05-21 11.16.05-2019521112140</div>            </figure><h2 id="证书签发申请"><a href="#证书签发申请" class="headerlink" title="证书签发申请"></a>证书签发申请</h2><h3 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/屏幕快照%202019-05-21%2011.23.02-2019521112839.png" alt="屏幕快照 2019-05-21 11.23.02-2019521112839" title="">                </div>                <div class="image-caption">屏幕快照 2019-05-21 11.23.02-2019521112839</div>            </figure><h3 id="填写信息"><a href="#填写信息" class="headerlink" title="填写信息"></a>填写信息</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/1558409353479-2019521112942.jpg" alt="1558409353479-2019521112942" title="">                </div>                <div class="image-caption">1558409353479-2019521112942</div>            </figure><h3 id="等待审核"><a href="#等待审核" class="headerlink" title="等待审核"></a>等待审核</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;阿里云配置ssl免费证书，使用期只有一年&lt;/p&gt;</summary>
    
    
    
    
    <category term="ssl" scheme="https://blog.afacode.top/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>vuex和redux记录</title>
    <link href="https://blog.afacode.top/2019/05/18/vuex-redux-compare/"/>
    <id>https://blog.afacode.top/2019/05/18/vuex-redux-compare/</id>
    <published>2019-05-18T09:57:25.000Z</published>
    <updated>2023-07-13T15:06:15.438Z</updated>
    
    <content type="html"><![CDATA[<p>vuex和redux的用法，区别</p><a id="more"></a><h2 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h2><p>状态管理库，无论是Redux，还是Mobx，vuex这些，其本质都是为了解决状态管理混乱，无法有效同步的问题，它们都支持：</p><ul><li>统一维护管理应用状态；</li><li>某一状态只有一个可信数据来源（通常命名为store，指状态容器）；</li><li>操作更新状态方式统一，并且可控（通常以action方式提供更新状态的途径）；<br>react </li><li>支持将store与React组件连接，如react-redux，mobx-react；通常使用状态管理库后，我们将React组件从业务上划分为两类：<ul><li>容器组件（Container Components）：负责处理具体业务和状态数据，将业务或状态处理函数传入展示型组件；</li><li>展示型组件（Presentation Components）：负责展示视图，视图交互回调内调用传入的处理函数；</li></ul></li></ul><h2 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/vuex@2x-20195181406.png" alt="vuex@2x-20195181406" title="">                </div>                <div class="image-caption">vuex@2x-20195181406</div>            </figure><ol><li>vuex 通过 commit 提交 mutations 修改 state. 只能进行<strong>同步操作</strong>，且方法名只能全局唯一</li><li>vuex 通过 dispatch 触发 actions, 然后由 commit 来触发 mutation 的调用, 间接更新 state。包含<strong>同步/异步</strong>操作，支持多个同名方法，按照注册的顺序依次触发</li><li>vuex 的 getters 读取 state 在操作，同 computed, <strong>缓存</strong>，只有相关 state 改变才会更新，<strong>不会改变 state</strong></li></ol><blockquote><p>State =&gt; (commit) =&gt; mutation=&gt; state <br><br>​&gt; State =&gt; (getter) =&gt; tmp(state) <br><br>​&gt; State =&gt; (dispatch) =&gt; action =&gt; (commit) =&gt; state <br> </p></blockquote><h3 id="vuex-localStorage"><a href="#vuex-localStorage" class="headerlink" title="vuex/localStorage"></a>vuex/localStorage</h3><p>vuex 是 vue 的状态管理器，存储的数据是响应式的。但是并不会保存起来，刷新之后就回到了初始状态，具体做法应该在vuex里数据改变的时候把数据拷贝一份保存到localStorage里面，刷新之后，如果localStorage里有保存的数据，取出来再替换store里的state</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">let <span class="keyword">default</span>City = <span class="string">"上海"</span></span><br><span class="line">try &#123;   // 用户关闭了本地存储功能，此时在外层加个try...catch</span><br><span class="line">  if (!<span class="keyword">default</span>City)&#123;</span><br><span class="line">    <span class="keyword">default</span>City = JSON.parse(window.localStorage.getItem('<span class="keyword">default</span>City'))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;catch(e)&#123;&#125;</span><br><span class="line">export <span class="keyword">default</span> new Vuex.Store(&#123;</span><br><span class="line">  <span class="keyword">state</span>: &#123;</span><br><span class="line">    city: <span class="keyword">default</span>City</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    changeCity(<span class="keyword">state</span>, city) &#123;</span><br><span class="line">      <span class="keyword">state</span>.city = city</span><br><span class="line">      try &#123;</span><br><span class="line">      window.localStorage.<span class="built_in">set</span>Item('<span class="keyword">default</span>City', JSON.stringify(<span class="keyword">state</span>.city));</span><br><span class="line">      // 数据改变的时候把数据拷贝一份保存到localStorage里面</span><br><span class="line">      &#125; catch (e) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>由于vuex里，我们保存的状态，都是数组，而localStorage只支持字符串，所以需要用JSON转换</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JSON.stringify(state.subscribe<span class="class">List);</span>   //<span class="built_in"> array </span>-&gt; string 序列化</span><br><span class="line">JSON.parse(window.localStorage.getItem(<span class="string">"subscribeList"</span>));    // string -&gt;<span class="built_in"> array </span>反序列号</span><br></pre></td></tr></table></figure><h2 id="redux"><a href="#redux" class="headerlink" title="redux"></a>redux</h2><p>Redux 和 React 之间没有关系。Redux 支持 React、Angular、Ember、jQuery 甚至纯 JavaScript。</p><ul><li>redux<ul><li>有Actions、Reducer、Store这三层</li><li>通过createStore(reducer)得到store，换名话说store包含了reducer的逻辑实现</li><li>通过store.dispath(action)去调用reducer，从而改变state</li><li>通过store.getState()获取在reducer改变的state</li></ul></li><li>react-redux<ul><li>react-redux作用就是本来没有关系的 Redux 和 React 关联在一起</li><li>它有组件Provier和方法connect</li><li>connect将 React 的state和 Redux 的actions合并成一个对象props，再将这个对象和component生成一个新的组件</li><li>Provider负责将 Redux 的store当属性传connect的新组件，从面将 React 和 Redux 关联到了一起</li><li>当新组件调用action的时候，Provider.store就会映射调用reducer从而改变state，当state发生改变，就会触发新组件的render，重新更新组件</li></ul></li><li>redux-thunk<ul><li><code>redux-thunk</code>异步<blockquote><p>目录：</p></blockquote></li></ul></li><li>src/index.js</li><li>src/store/store.js</li><li>src/store/actions/…</li><li>src/store/reducers/…</li><li>src/store/reducers/index.js<blockquote><p>src/index.js 引入store</p></blockquote></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store/store'</span></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">    &lt;Demo /&gt;</span><br><span class="line">  &lt;<span class="regexp">/Provider&gt;, </span></span><br><span class="line"><span class="regexp">  document.getElementById('root')</span></span><br><span class="line"><span class="regexp">)</span></span><br></pre></td></tr></table></figure><blockquote><p>src/store/store.js 统一一个store</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  &#123; createStore, applyMiddleware &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">'redux-thunk'</span></span><br><span class="line"><span class="keyword">import</span> &#123; composeWithDevTools &#125; <span class="keyword">from</span> <span class="string">'redux-devtools-extension'</span></span><br><span class="line"><span class="keyword">import</span> rootReducer <span class="keyword">from</span> <span class="string">'./reducers'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> store = createStore(</span><br><span class="line">  rootReducer, </span><br><span class="line">  composeWithDevTools(applyMiddleware(thunk))</span><br><span class="line">  )</span><br><span class="line"><span class="comment">// 第二个参数为thunk中间件 用来处理函数类型的action</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><blockquote><p>src/store/reducers/index.js 合并多个reducer</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"><span class="keyword">import</span> productsReducer <span class="keyword">from</span> <span class="string">'./products-reducer'</span></span><br><span class="line"><span class="keyword">import</span> cartReducer <span class="keyword">from</span> <span class="string">'./cart-reducer'</span></span><br><span class="line"><span class="keyword">import</span> asyncNumReducer <span class="keyword">from</span> <span class="string">'./async-num-reducer'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> allReducers = &#123;</span><br><span class="line">  products: productsReducer,</span><br><span class="line">  shoppingCart: cartReducer,</span><br><span class="line">  asyncCount: asyncNumReducer</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 多个reducer合并成一个rootReducer</span></span><br><span class="line"><span class="keyword">const</span> rootReducer = combineReducers(allReducers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> rootReducer</span><br></pre></td></tr></table></figure><blockquote><p>在业务组建使用 使用<code>this.props.count</code> 读取store状态，<code>this.props.plus()</code>使用reducer</p></blockquote><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import &#123; connect &#125; <span class="keyword">from</span> 'react-redux'</span><br><span class="line">import &#123; plus &#125; <span class="keyword">from</span> '../store/actions/async-num-actions'</span><br><span class="line">import &#123; addToCart &#125; <span class="keyword">from</span> '../store/actions/cart-actions'</span><br><span class="line">const mapStateToProps = (<span class="keyword">state</span>) =&gt; &#123;</span><br><span class="line">  return &#123;</span><br><span class="line">    count: <span class="keyword">state</span>.asyncCount.count,</span><br><span class="line">    cart: <span class="keyword">state</span>.shoppingCart.cart</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">const mapDispatchToProps = &#123;</span><br><span class="line">  plus, addToCart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Demo = connect(mapStateToProps, mapDispatchToProps)(Demo)</span><br><span class="line">export <span class="keyword">default</span> Demo</span><br></pre></td></tr></table></figure><h2 id="异同"><a href="#异同" class="headerlink" title="异同"></a>异同</h2><ol><li>都是单向数据</li><li>action都可异步</li><li>redux是只能通过dispatch触发action，从而用reducer更新state, 类似vuex的commit</li></ol><hr><p>待更新</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;vuex和redux的用法，区别&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vuex" scheme="https://blog.afacode.top/tags/vuex/"/>
    
    <category term="redux" scheme="https://blog.afacode.top/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>域名跳转</title>
    <link href="https://blog.afacode.top/2019/05/14/nginx-1/"/>
    <id>https://blog.afacode.top/2019/05/14/nginx-1/</id>
    <published>2019-05-14T15:11:29.000Z</published>
    <updated>2023-07-13T15:06:15.418Z</updated>
    
    <content type="html"><![CDATA[<p>想让我的域名<code>afacode.top</code>默认跳转到<code>https://blog.afacode.top</code></p><a id="more"></a><h2 id="域名跳转-nginx"><a href="#域名跳转-nginx" class="headerlink" title="域名跳转-nginx"></a>域名跳转-nginx</h2><blockquote><p>ubuntu 14.04</p></blockquote><blockquote><p>vim /etc/nginx/sites-available/default</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="attribute">server_name</span> www.afacode.top;</span><br><span class="line">  <span class="comment"># 跳转地址</span></span><br><span class="line"><span class="attribute">return</span> <span class="number">301</span> https://blog.afacode.top<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>service nginx restart</p></blockquote><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;想让我的域名&lt;code&gt;afacode.top&lt;/code&gt;默认跳转到&lt;code&gt;https://blog.afacode.top&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://blog.afacode.top/categories/linux/"/>
    
    
    <category term="nginx" scheme="https://blog.afacode.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Vue 的 computed 和 watch 的区别</title>
    <link href="https://blog.afacode.top/2019/05/09/vue-computed-watch/"/>
    <id>https://blog.afacode.top/2019/05/09/vue-computed-watch/</id>
    <published>2019-05-09T15:26:15.000Z</published>
    <updated>2023-07-13T15:06:15.434Z</updated>
    
    <content type="html"><![CDATA[<p>Vue 的 computed 和 watch 的区别…</p><a id="more"></a><h2 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h2><p>是一个计算属性,类似于过滤器,对绑定到view的数据进行处理<br>computed比较适合对多个变量或者对象进行处理后返回一个结果值，也就是数多个变量中的某一个值发生了变化则我们监控的这个值也就会发生变化，举例：购物车里面的商品列表和总金额之间的关系，只要商品列表里面的商品数量发生变化，或减少或增多或删除商品，总金额都应该发生变化。这里的这个总金额使用computed属性来进行计算是最好的选择</p><h3 id="get用法"><a href="#get用法" class="headerlink" title="get用法"></a>get用法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">data</span>: &#123;</span><br><span class="line">  <span class="attribute">firstName</span>: <span class="string">'Foo'</span>,</span><br><span class="line">  lastName: <span class="string">'Bar'</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="selector-tag">computed</span>: &#123;</span><br><span class="line">  <span class="attribute">fullName</span>: <span class="built_in">function</span>() &#123;</span><br><span class="line">    return this.firstName + <span class="string">' '</span> + this.lastName</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="get-set用法"><a href="#get-set用法" class="headerlink" title="get, set用法"></a>get, set用法</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  fullName：&#123;</span><br><span class="line">   <span class="keyword">get</span>()&#123;<span class="comment">//回调函数 当需要读取当前属性值是执行，根据相关数据计算并返回当前属性的值</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span><br><span class="line">    &#125;,</span><br><span class="line">   <span class="keyword">set</span>(<span class="keyword">val</span>)&#123;<span class="comment">//监视当前属性值的变化，当属性值发生变化时执行，更新相关的属性数据</span></span><br><span class="line">       <span class="comment">//val就是fullName的最新属性值</span></span><br><span class="line">       console.log(<span class="keyword">val</span>)</span><br><span class="line">        <span class="keyword">const</span> names = <span class="keyword">val</span>.split(<span class="string">' '</span>);</span><br><span class="line">        console.log(names)</span><br><span class="line">        <span class="keyword">this</span>.firstName = names[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">this</span>.lastName = names[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>在得知 computed 属性发生变化之后， Vue 内部并不立即去重新计算出新的 computed 属性值，而是仅仅标记为 dirty ，下次访问的时候，再重新计算，然后将计算结果缓存起来。</p><p>这样的设计，会避免一些不必要的计算</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        a: <span class="number">1</span>,</span><br><span class="line">        b: <span class="number">2</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line">computed: &#123;</span><br><span class="line">    c() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.a + <span class="keyword">this</span>.b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">created() &#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>.c)</span><br><span class="line">    </span><br><span class="line">    setInterval(() =&gt; &#123;</span><br><span class="line">        <span class="keyword">this</span>.a++</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一次访问 this.c 的时候，记录了依赖项 a 、 b ，虽然后续通过 setInterval 不停地修改 this.a ，造成 this.c 一直是 dirty 状态，但是由于并没有再访问 this.c ，所以重新计算 this.c 的值是毫无意义的，如果不做无意义的计算反倒会提升一些性能。</p><h2 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h2><p>watch是一个观察,监听</p><h3 id="watch用法"><a href="#watch用法" class="headerlink" title="watch用法"></a>watch用法</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span>: &#123;</span><br><span class="line">    firstName: <span class="string">'Foo'</span>,</span><br><span class="line">    lastName: <span class="string">'Bar'</span>,</span><br><span class="line">    fullName: <span class="string">'Foo Bar'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">     firstName: function (<span class="keyword">val</span>) &#123;</span><br><span class="line">     <span class="keyword">this</span>.fullName = <span class="keyword">val</span> + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span><br><span class="line">  &#125;,</span><br><span class="line">  lastName: function (<span class="keyword">val</span>) &#123;</span><br><span class="line">     <span class="keyword">this</span>.fullName = <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">val</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂数据类型"><a href="#复杂数据类型" class="headerlink" title="复杂数据类型"></a>复杂数据类型</h3><ol><li>需用深度监听</li><li>深度监听虽然可以监听到对象的变化,但是无法监听到具体对象里面那个属性的变化,console.log打印的结果,发现oldVal和newVal值是一样的(原因是它们索引同一个对象/数组。Vue 不会保留修改之前值的副本) <a href="https://cn.vuejs.org/v2/api/#vm-watch" target="_blank" rel="noopener">官网介绍</a></li><li>深度监听对应的函数名必须为<code>**handler**</code>,否则无效果,因为watcher里面对应的是对handler的调用<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">watch</span>:&#123;</span><br><span class="line">  <span class="attribute">secondChange</span>:&#123;</span><br><span class="line">    <span class="built_in">handler</span>(oldVal,newVal)&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(oldVal)</span><br><span class="line">      console.<span class="built_in">log</span>(newVal)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="selector-tag">deep</span><span class="selector-pseudo">:true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="监听对象单个属性"><a href="#监听对象单个属性" class="headerlink" title="监听对象单个属性"></a>监听对象单个属性</h3></li><li>可以直接用<code>对象.属性</code>的方法拿到属性</li><li>用computed作为中间件转化,因为computed可以取到对应的属性值<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    first: &#123;</span><br><span class="line">      second:<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line">watch: &#123;</span><br><span class="line">  first.second:<span class="function"><span class="keyword">function</span>(<span class="params">newVal,oldVal</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(newVal,oldVal)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. </span></span><br><span class="line">computed: &#123;</span><br><span class="line">  secondChange()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.first.second</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">watch: &#123;</span><br><span class="line">  secondChange()&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'second属性值变化了'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="computed和watch的区别"><a href="#computed和watch的区别" class="headerlink" title="computed和watch的区别"></a>computed和watch的区别</h2></li></ol><h3 id="computed-1"><a href="#computed-1" class="headerlink" title="computed"></a>computed</h3><ol><li>是计算值，</li><li>应用：就是简化tempalte里面计算和处理props或$emit的传值</li><li>具有缓存性，页面重新渲染值不变化,计算属性会立即返回之前的计算结果，而不必再次执行函数</li></ol><h3 id="watch-1"><a href="#watch-1" class="headerlink" title="watch"></a>watch</h3><ol><li>是观察的动作，</li><li>应用：监听props，$emit或本组件的值执行异步操作</li><li>无缓存性，页面重新渲染时值不变化也会执行</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Vue 的 computed 和 watch 的区别…&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vscode插件,写Markdown时可以快捷上传本地图片获取七牛图床外链七牛云</title>
    <link href="https://blog.afacode.top/2019/04/23/hexo-vscode-qiniu-upload/"/>
    <id>https://blog.afacode.top/2019/04/23/hexo-vscode-qiniu-upload/</id>
    <published>2019-04-23T14:53:43.000Z</published>
    <updated>2023-07-13T15:06:15.414Z</updated>
    
    <content type="html"><![CDATA[<p>推荐: 一个 VS Code 插件，编写 Markdown 时可以快捷上传本地图片获取七牛图床外链</p><a id="more"></a><h2 id="vscode插件-写Markdown时可以快捷上传本地图片获取七牛图床外链七牛云"><a href="#vscode插件-写Markdown时可以快捷上传本地图片获取七牛图床外链七牛云" class="headerlink" title="vscode插件,写Markdown时可以快捷上传本地图片获取七牛图床外链七牛云"></a>vscode插件,写Markdown时可以快捷上传本地图片获取七牛图床外链七牛云</h2><ul><li><p>github地址<a href="https://github.com/yscoder/vscode-qiniu-upload-image" target="_blank" rel="noopener">vscode-qiniu-upload-imag</a></p></li><li><p><a href="https://imys.net/20160726/vscode-extension-qiniu-upload.html" target="_blank" rel="noopener">作者的博客介绍</a></p></li></ul><p>配置如下(自己的):</p><blockquote><p>七牛图片上传空间: 你的七牛云存储空间名称</p></blockquote><blockquote><p>七牛图床域名: 你自己图片对外链接的域名</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://imgs.afacode.top/1557910868343-201951517225.jpg" alt="1557910868343-201951517225" title="=300x300">                </div>                <div class="image-caption">=300x300</div>            </figure><p>配置完成重启一下vs code即可使用</p><blockquote><p>推荐一个Markdown预览插件 <code>Markdown Preview Enhanced</code></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;推荐: 一个 VS Code 插件，编写 Markdown 时可以快捷上传本地图片获取七牛图床外链&lt;/p&gt;</summary>
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="vscode" scheme="https://blog.afacode.top/tags/vscode/"/>
    
    <category term="hexo" scheme="https://blog.afacode.top/tags/hexo/"/>
    
    <category term="七牛云" scheme="https://blog.afacode.top/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>vue组件之间的通信</title>
    <link href="https://blog.afacode.top/2019/04/14/vue-props/"/>
    <id>https://blog.afacode.top/2019/04/14/vue-props/</id>
    <published>2019-04-14T14:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.435Z</updated>
    
    <content type="html"><![CDATA[<p>vue组件之间的通信:父–&gt;子、子–&gt;父、非父子</p><a id="more"></a><p><a href="https://segmentfault.com/a/1190000019208626?_ea=11267445" target="_blank" rel="noopener">vue组件间通信六种方式（完整版）</a>转载</p><h2 id="vue组件之间的通信"><a href="#vue组件之间的通信" class="headerlink" title="vue组件之间的通信"></a>vue组件之间的通信</h2><p><a href="https://cn.vuejs.org/v2/guide/components-props.html" target="_blank" rel="noopener">vue.js官网prop</a><br>(不谈vuex)</p><h3 id="父–-gt-子-props"><a href="#父–-gt-子-props" class="headerlink" title="父–&gt;子 props"></a>父–&gt;子 props</h3><p>prop是单向绑定</p><blockquote><p>Prop 类型</p></blockquote><ul><li><code>String</code></li><li><code>Number</code></li><li><code>Boolean</code></li><li><code>Array</code></li><li><code>Object</code></li><li><code>Date</code></li><li><code>Function</code></li><li><code>Symbol</code></li></ul><blockquote><p>Prop 验证</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  <span class="comment">// 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)</span></span><br><span class="line">  propA: <span class="built_in">Number</span>,</span><br><span class="line">  <span class="comment">// 多个可能的类型</span></span><br><span class="line">  propB: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span><br><span class="line">  propC: &#123;</span><br><span class="line">    <span class="keyword">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">    required: <span class="literal">true</span>,  <span class="comment">// 必填</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="number">100</span> <span class="comment">//带有默认值的数字</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 带有默认值的对象</span></span><br><span class="line">  propE: &#123;</span><br><span class="line">    <span class="keyword">type</span>: <span class="built_in">Object</span>,</span><br><span class="line">    <span class="comment">// 对象或数组默认值必须从一个工厂函数获取</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> &#123; message: <span class="string">'hello'</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 自定义验证函数</span></span><br><span class="line">  propF: &#123;</span><br><span class="line">    validator: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 这个值必须匹配下列字符串中的一个</span></span><br><span class="line">      <span class="keyword">return</span> [<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">**父组件代码**</span><br><span class="line">传递静态或动态</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header-box</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">:titleTxt</span>=<span class="string">"showTitleTxt"</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">"My journey with Vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">header-box</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">blog-post</span> &gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">'./header'</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">'index'</span>,</span></span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="actionscript">            <span class="string">'header-box'</span>: Header</span></span><br><span class="line">        &#125;,</span><br><span class="line">        data () &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                showTitleTxt: <span class="string">'首页'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">**子组件代码**</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123;thisTitleTxt&#125;&#125;</span><span class="xml">-</span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123;name&#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    export default &#123;</span></span><br><span class="line"><span class="xml">        name: 'header-box',</span></span><br><span class="line"><span class="xml">        props: &#123;</span></span><br><span class="line"><span class="xml">            titleTxt: String,</span></span><br><span class="line"><span class="xml">            name: String</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        data () &#123;</span></span><br><span class="line"><span class="xml">            return &#123;</span></span><br><span class="line"><span class="xml">                thisTitleTxt: this.titleTxt</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="子–-gt-父"><a href="#子–-gt-父" class="headerlink" title="子–&gt;父"></a>子–&gt;父</h3><blockquote><p>子组件向父组件传递分为两种类型。<br>1、子组件改变父组件传递的props（你会发现通过props中的Object类型参数传输数据，可以通过子组件改变数据内容。这种方式是可行的，但是不推荐使用，因为官方定义prop是单向绑定）<br>2、通过$on和$emit</p></blockquote><ol><li>不推荐<blockquote><p>父组建代码同上</p></blockquote></li></ol><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">**子组件代码**</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">header</span> @<span class="attr">click</span>=<span class="string">"changeTitleTxt"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123;thisTitleTxt.name&#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    export default &#123;</span></span><br><span class="line"><span class="xml">        name: 'header-box',</span></span><br><span class="line"><span class="xml">        props: &#123;</span></span><br><span class="line"><span class="xml">            titleTxt: Object</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        data () &#123;</span></span><br><span class="line"><span class="xml">            return &#123;</span></span><br><span class="line"><span class="xml">                thisTitleTxt: this.titleTxt.name</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        metheds: &#123;</span></span><br><span class="line"><span class="xml">            changeTitleTxt () &#123;</span></span><br><span class="line"><span class="xml">                this.titleTxt.name = '切换'</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li><em>通过$on,$emit</em> <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">*通过<span class="variable">$on</span>,<span class="variable">$emit</span>*</span><br><span class="line">**父组件代码**</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"counter-event-example"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="xquery">&#123;&#123; total &#125;</span><span class="xml">&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">      </span><span class="xml"><span class="tag">&lt;<span class="name">button-counter</span> <span class="attr">v-on:increment</span>=<span class="string">"incrementTotal"</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    import ButtonCounter from './buttonCounter'</span></span><br><span class="line"><span class="xml">    export default </span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">       <span class="built_in"> name</span>: <span class="string">'index'</span>,</span></span><br><span class="line"><span class="xquery">        components: &#123;</span></span><br><span class="line"><span class="xquery">            <span class="string">'button-conuter'</span>: ButtonCounter</span></span><br><span class="line"><span class="xquery">        &#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">        data () </span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="xquery">                total: <span class="number">0</span></span></span><br><span class="line"><span class="xquery">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        methods: </span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">            incrementTotal (val) &#123;</span></span><br><span class="line"><span class="xquery">                打印值分别是 val</span></span><br><span class="line"><span class="xquery">                this.total++</span></span><br><span class="line"><span class="xquery">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>incrementTotal<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">**子组件代码**</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"incrementCounter"</span>&gt;</span></span><span class="xquery">&#123;&#123;counter&#125;</span><span class="xml">&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    export default </span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">       <span class="built_in"> name</span>: <span class="string">'button-counter'</span>,</span></span><br><span class="line"><span class="xquery">        data () &#123;</span></span><br><span class="line"><span class="xquery">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="xquery">                counter: <span class="number">0</span></span></span><br><span class="line"><span class="xquery">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        metheds: </span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">            incrementCounter () &#123;</span></span><br><span class="line"><span class="xquery">                // 可传额外参数 this.<span class="variable">$emit</span>(<span class="string">'increment'</span>,this.counter,<span class="built_in"> true</span>);</span></span><br><span class="line"><span class="xquery">                this.<span class="variable">$emit</span>(<span class="string">'increment'</span>)</span></span><br><span class="line"><span class="xquery">                this.counter++</span></span><br><span class="line"><span class="xquery">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="非父子，比如兄弟组建"><a href="#非父子，比如兄弟组建" class="headerlink" title="非父子，比如兄弟组建"></a>非父子，比如兄弟组建</h3><blockquote><p>通过使用一个空的Vue实例作为中央事件总线，（这里也可以使用app实例，而不需要新建一个空Vue实例）</p></blockquote></li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">**main.<span class="keyword">js**</span></span><br><span class="line"><span class="keyword">let </span><span class="keyword">bus </span>= new Vue()</span><br><span class="line">Vue.prototype.<span class="keyword">bus </span>= <span class="keyword">bus</span></span><br><span class="line"><span class="keyword">或者</span></span><br><span class="line"><span class="keyword">**main.js**</span></span><br><span class="line"><span class="keyword">new </span>Vue(&#123;</span><br><span class="line"><span class="symbol">  el:</span> <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line"><span class="symbol">  template:</span> <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line"><span class="symbol">  components:</span> &#123; App &#125;,</span><br><span class="line">  <span class="keyword">beforeCreate </span>() &#123;</span><br><span class="line">    Vue.prototype.<span class="keyword">bus </span>= this</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">**header组件传递给footer**</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">header</span> @<span class="attr">click</span>=<span class="string">"changeTitle"</span>&gt;</span></span><span class="template-variable">&#123;&#123;title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">export default &#123;</span></span><br><span class="line"><span class="xml">    name: 'header',</span></span><br><span class="line"><span class="xml">    data () &#123;</span></span><br><span class="line"><span class="xml">        return &#123;</span></span><br><span class="line"><span class="xml">            title: '头部'</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    methods: &#123;</span></span><br><span class="line"><span class="xml">        changeTitle () &#123;</span></span><br><span class="line"><span class="xml">            this.bus.$emit('toChangeTitle','首页')</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">**footer组件**</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><span class="template-variable">&#123;&#123;txt&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">export default &#123;</span></span><br><span class="line"><span class="xml">    name: 'footer',</span></span><br><span class="line"><span class="xml">    mounted () &#123;</span></span><br><span class="line"><span class="xml">        this.bus.$on('toChangeTitle', function (title) &#123;</span></span><br><span class="line"><span class="xml">            console.log(title)</span></span><br><span class="line"><span class="xml">        &#125;)</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    data () &#123;</span></span><br><span class="line"><span class="xml">        return &#123;</span></span><br><span class="line"><span class="xml">            txt: '尾部'</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;vue组件之间的通信:父–&amp;gt;子、子–&amp;gt;父、非父子&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>react-native 集成极光推送, iOS/andriod</title>
    <link href="https://blog.afacode.top/2019/04/10/react-native-jpush/"/>
    <id>https://blog.afacode.top/2019/04/10/react-native-jpush/</id>
    <published>2019-04-10T12:42:42.000Z</published>
    <updated>2023-07-13T15:06:15.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-native-集成极光推送，iOS-andriod"><a href="#react-native-集成极光推送，iOS-andriod" class="headerlink" title="react-native 集成极光推送，iOS/andriod"></a>react-native 集成极光推送，iOS/andriod</h2><p><a href="https://github.com/jpush/jpush-react-native/tree/master/example" target="_blank" rel="noopener">react-native 集成极光推送官方demo</a></p><ol><li>极光 appkey  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"<span class="selector-tag">jcore-react-native</span>": "^1<span class="selector-class">.3</span><span class="selector-class">.2</span>",</span><br><span class="line">"<span class="selector-tag">jpush-react-native</span>": "^2<span class="selector-class">.5</span><span class="selector-class">.3</span>",</span><br><span class="line">"<span class="selector-tag">react</span>": "16<span class="selector-class">.6</span><span class="selector-class">.0-alpha</span><span class="selector-class">.8af6728</span>",</span><br><span class="line">"<span class="selector-tag">react-native</span>": "0<span class="selector-class">.57</span><span class="selector-class">.4</span>",</span><br><span class="line"><span class="selector-tag">Xcode</span>: <span class="selector-tag">version</span> 10<span class="selector-class">.2</span>(10<span class="selector-tag">E125</span>)</span><br><span class="line"><span class="selector-tag">Android</span> <span class="selector-tag">Studio</span> 3<span class="selector-class">.3</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>时间 2019-04-10</p></blockquote><ul><li><p><code>npm install jpush-react-native jcore-react-native --save</code></p></li><li><p><code>react-native link jpush-react-native react-native link jcore-react-native</code> <br>然后会要求输入AppKey 极光应用获取一个AppKey</p></li><li><p>解决IOS XcodeLibraries文件夹下有没有<br> RCTJpushModule.xcodproj<br> 和<br> RCTJcoreModule.xcodproj文件<br> rnpm link jpush-react-native<br> rnpm link jcore-react-native<br> 没有安装 rnpm 先 npm install rnpm -g </p></li></ul><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ul><li> android/settings.gradle<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> ':jpush-react-native'</span><br><span class="line">project(':jpush-react-native').projectDir = <span class="keyword">new</span> <span class="constructor">File(<span class="params">rootProject</span>.<span class="params">projectDir</span>, '..<span class="operator">/</span><span class="params">node_modules</span><span class="operator">/</span><span class="params">jpush</span>-<span class="params">react</span>-<span class="params">native</span><span class="operator">/</span><span class="params">android</span>')</span></span><br><span class="line"><span class="keyword">include</span> ':jcore-react-native'</span><br><span class="line">project(':jcore-react-native').projectDir = <span class="keyword">new</span> <span class="constructor">File(<span class="params">rootProject</span>.<span class="params">projectDir</span>, '..<span class="operator">/</span><span class="params">node_modules</span><span class="operator">/</span><span class="params">jcore</span>-<span class="params">react</span>-<span class="params">native</span><span class="operator">/</span><span class="params">android</span>')</span></span><br></pre></td></tr></table></figure></li><li>android/app/build.gradle<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        manifestPlaceholders = [</span><br><span class="line">                JPUSH_APPKEY: <span class="string">"你的appkey"</span>,</span><br><span class="line">                APP_CHANNEL : <span class="string">"default"</span></span><br><span class="line">        ]</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="keyword">implementation</span> project(<span class="string">':jcore-react-native'</span>)</span><br><span class="line">    <span class="keyword">implementation</span> project(<span class="string">':jpush-react-native'</span>)</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">implementation</span> fileTree(dir: <span class="string">"libs"</span>, include: [<span class="string">"*.jar"</span>])</span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">"com.android.support:appcompat-v7:$&#123;rootProject.ext.supportLibVersion&#125;"</span></span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">"com.facebook.react:react-native:+"</span>  <span class="comment">// From node_modules</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>android/app/src/main/java/com/…/MainActivity.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> cn.jpush.android.api.JPushInterface;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ReactActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// SplashScreen.show(this);  // here</span></span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        JPushInterface.init(<span class="keyword">this</span>); <span class="comment">//新加</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 新加</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        JPushInterface.onPause(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        JPushInterface.onResume(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 新加</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>android/app/src/main/java/com/…/MainApplication.java<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.jpush.reactnativejpush.<span class="type">JPushPackage</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> <span class="title">implements</span> <span class="title">ReactApplication</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">List</span>&lt;<span class="type">ReactPackage</span>&gt; getPackages() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="type">Arrays</span>.&lt;<span class="type">ReactPackage</span>&gt;asList(</span><br><span class="line">             </span><br><span class="line">        <span class="keyword">new</span> <span class="type">MainReactPackage</span>(),</span><br><span class="line">        <span class="keyword">new</span> <span class="type">JPushPackage</span>(!<span class="type">BuildConfig</span>.<span class="type">DEBUG</span>, !<span class="type">BuildConfig</span>.<span class="type">DEBUG</span>) <span class="comment">// 新加</span></span><br><span class="line">            </span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>android/app/src/main/AndroidManifest.xml<figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span>&gt;</span></span></span><br><span class="line"><span class="xml">    ...</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta-data</span></span></span></span><br><span class="line"><span class="xml">        android:name="JPUSH_APPKEY"</span></span><br><span class="line"><span class="xml">        android:value="$</span><span class="template-variable">&#123;JPUSH_APPKEY&#125;</span><span class="xml">" /&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta-data</span></span></span></span><br><span class="line"><span class="xml">        android:name="JPUSH_CHANNEL"</span></span><br><span class="line"><span class="xml">        android:value="$</span><span class="template-variable">&#123;APP_CHANNEL&#125;</span><span class="xml">" /&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><ul><li>Xcode 打开，检查 /Libraies是否有RCTJpushModule.xcodproj<br> 和<br> RCTJcoreModule.xcodproj，没有上面有方法</li><li>target/项目名/Build Phases/Link Binary with Libraries中加入如下库<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">libz.tbd</span><br><span class="line">CoreTelephony.framework</span><br><span class="line">Security.framework</span><br><span class="line">CFNetwork.framework</span><br><span class="line">CoreFoundation.framework</span><br><span class="line">SystemConfiguration.framework</span><br><span class="line">Foundation.framework</span><br><span class="line">UIKit.framework</span><br><span class="line">UserNotifications.framework</span><br><span class="line">libresolv.tbd</span><br></pre></td></tr></table></figure></li><li><code> UserNotifications.framework 设置status为Optiona l</code></li><li>项目/capacities/push notifications on 打开</li><li>target/项目名/Build Settings/Header Search Paths是否加入,没有就加入<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(SRCROOT)/../node_modules/jcore-react-native/ios/RCTJCoreModule</span><br><span class="line">$(SRCROOT)/../node_modules/jpush-react-native/ios/RCTJPushModule</span><br><span class="line">* ios/Podfile</span><br><span class="line"><span class="string">``</span><span class="string">`js</span></span><br><span class="line"><span class="string">// 查看是否写入，没有就添加</span></span><br><span class="line"><span class="string">target 'DbysDriver' do</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"> ...</span></span><br><span class="line"><span class="string">  pod 'JPushRN', :path =&gt; '../node_modules/jpush-react-native'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  pod 'JCoreRN', :path =&gt; '../node_modules/jcore-react-native'</span></span><br><span class="line"><span class="string"> ...</span></span><br><span class="line"><span class="string">end</span></span><br></pre></td></tr></table></figure></li><li>ios/项目名/AppDelegate.m<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看是否写入，没有就写入，导入如下头文件</span></span><br><span class="line">#import &lt;RCTJPushModule.h&gt;</span><br><span class="line">#ifdef NSFoundationVersionNumber_iOS_9_x_Max</span><br><span class="line">#import &lt;UserNotifications/UserNotifications.h&gt;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"><span class="comment">// didFinishLaunchingWithOptions 方法里面添加如下代码</span></span><br><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</span><br><span class="line">&#123; </span><br><span class="line">  <span class="comment">// 新加的，没有就写入</span></span><br><span class="line">  JPUSHRegisterEntity * entity = [[JPUSHRegisterEntity alloc] init];</span><br><span class="line">     entity.types = UNAuthorizationOptionAlert|UNAuthorizationOptionBadge|UNAuthorizationOptionSound;</span><br><span class="line">     [JPUSHService registerForRemoteNotificationConfig:entity delegate:self];</span><br><span class="line"></span><br><span class="line">  [JPUSHService setupWithOption:launchOptions appKey:@<span class="string">"你的极光appkey"</span></span><br><span class="line">                        channel:nil apsForProduction:nil];</span><br><span class="line"></span><br><span class="line">  NSURL *jsCodeLocation;</span><br><span class="line">  ...    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这些代码，一般不需要手动添加，会自动写入</span></span><br><span class="line">...</span><br><span class="line">- (<span class="keyword">void</span>)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken</span><br><span class="line">&#123;</span><br><span class="line">  [JPUSHService registerDeviceToken:deviceToken];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo</span><br><span class="line">  <span class="comment">// 取得 APNs 标准信息内容</span></span><br><span class="line">&#123;</span><br><span class="line">  [[NSNotificationCenter defaultCenter] postNotificationName:kJPFDidReceiveRemoteNotification object:userInfo];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification</span><br><span class="line">&#123;</span><br><span class="line">  [[NSNotificationCenter defaultCenter] postNotificationName:kJPFDidReceiveRemoteNotification object: notification.userInfo];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(<span class="keyword">void</span> (^)   (UIBackgroundFetchResult))completionHandler</span><br><span class="line">&#123;</span><br><span class="line">  [[NSNotificationCenter defaultCenter] postNotificationName:kJPFDidReceiveRemoteNotification object:userInfo];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iOS 10 Support</span></span><br><span class="line">- (<span class="keyword">void</span>)jpushNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(<span class="keyword">void</span> (^)(NSInteger))completionHandler</span><br><span class="line">&#123;</span><br><span class="line">  NSDictionary * userInfo = notification.request.content.userInfo;</span><br><span class="line">  if ([notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123;</span><br><span class="line">    [JPUSHService handleRemoteNotification:userInfo];</span><br><span class="line">    [[NSNotificationCenter defaultCenter] postNotificationName:kJPFDidReceiveRemoteNotification object:userInfo];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  completionHandler(UNNotificationPresentationOptionAlert); <span class="comment">// 需要执行这个方法，选择是否提醒用户，有Badge、Sound、Alert三种类型可以选择设置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iOS 10 Support</span></span><br><span class="line">- (<span class="keyword">void</span>)jpushNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(<span class="keyword">void</span> (^)())completionHandler</span><br><span class="line">&#123;</span><br><span class="line">  NSDictionary * userInfo = response.notification.request.content.userInfo;</span><br><span class="line">  if ([response.notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123;</span><br><span class="line">    [JPUSHService handleRemoteNotification:userInfo];</span><br><span class="line">    [[NSNotificationCenter defaultCenter] postNotificationName:kJPFOpenNotification object:userInfo];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  completionHandler();</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;react-native-集成极光推送，iOS-andriod&quot;&gt;&lt;a href=&quot;#react-native-集成极光推送，iOS-andriod&quot; class=&quot;headerlink&quot; title=&quot;react-native 集成极光推送，iOS/andrio</summary>
      
    
    
    
    <category term="react native" scheme="https://blog.afacode.top/categories/react-native/"/>
    
    
    <category term="react native" scheme="https://blog.afacode.top/tags/react-native/"/>
    
    <category term="极光推送" scheme="https://blog.afacode.top/tags/%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81/"/>
    
    <category term="app" scheme="https://blog.afacode.top/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>sequelize基础知识学习整理</title>
    <link href="https://blog.afacode.top/2019/03/11/node-sequelize-base/"/>
    <id>https://blog.afacode.top/2019/03/11/node-sequelize-base/</id>
    <published>2019-03-11T13:58:15.000Z</published>
    <updated>2023-07-13T15:06:15.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sequelize基础知识学习整理"><a href="#sequelize基础知识学习整理" class="headerlink" title="sequelize基础知识学习整理"></a>sequelize基础知识学习整理</h2><p><a href="http://docs.sequelizejs.com/" target="_blank" rel="noopener">sequelize文档</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install --save sequelize</span><br><span class="line"><span class="comment"># And one of the following:</span></span><br><span class="line">npm install --save pg pg-hstore</span><br><span class="line">npm install --save mysql2</span><br><span class="line">npm install --save sqlite3</span><br><span class="line">npm install --save tedious // MSSQL</span><br></pre></td></tr></table></figure><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Sequelize = <span class="built_in">require</span>(<span class="string">'sequelize'</span>);</span><br><span class="line"><span class="keyword">const</span> sequelize = <span class="keyword">new</span> Sequelize(<span class="string">'database'</span>, <span class="string">'username'</span>, <span class="string">'password'</span>, &#123;</span><br><span class="line">  host: <span class="string">'localhost'</span>,</span><br><span class="line">port: port,</span><br><span class="line">  dialect: <span class="string">'mysql'</span>|<span class="string">'sqlite'</span>|<span class="string">'postgres'</span>|<span class="string">'mssql'</span>,</span><br><span class="line">  operatorsAliases: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  pool: &#123;</span><br><span class="line">    max: <span class="number">5</span>,</span><br><span class="line">    min: <span class="number">0</span>,</span><br><span class="line">    acquire: <span class="number">30000</span>,</span><br><span class="line">    idle: <span class="number">10000</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// SQLite only</span></span><br><span class="line">  storage: <span class="string">'path/to/database.sqlite'</span></span><br><span class="line">&#125;);</span><br><span class="line">sequelize</span><br><span class="line">  .authenticate()</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Connection has been established successfully.'</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'Unable to connect to the database:'</span>, err);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="model"><a href="#model" class="headerlink" title="model"></a>model</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> User = sequelize.define(<span class="string">'user'</span>, &#123;</span><br><span class="line">  firstName: &#123;</span><br><span class="line">    type: Sequelize.STRING</span><br><span class="line">  &#125;,</span><br><span class="line">  lastName: &#123;</span><br><span class="line">    type: Sequelize.STRING</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  freezeTableName: <span class="literal">true</span> <span class="comment">// 模型名字与表名相同</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="comment">// force: true 如果表已经存在，将会丢弃表</span></span><br><span class="line">User.sync();</span><br><span class="line"><span class="comment">// User.sync(&#123;force: true&#125;)</span></span><br></pre></td></tr></table></figure><h4 id="mdoel-类型"><a href="#mdoel-类型" class="headerlink" title="mdoel 类型"></a>mdoel 类型</h4><p>以下是 Sequelize 支持的一些数据类型.有关完整和更新的列表, 参阅<a href="http://docs.sequelizejs.com/variable/index.html#static-variable-DataTypes" target="_blank" rel="noopener">DataTypes</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">Sequelize.STRING                      <span class="comment">// VARCHAR(255)</span></span><br><span class="line">Sequelize.STRING(<span class="number">1234</span>)                <span class="comment">// VARCHAR(1234)</span></span><br><span class="line">Sequelize.STRING.BINARY               <span class="comment">// VARCHAR BINARY</span></span><br><span class="line">Sequelize.TEXT                        <span class="comment">// TEXT</span></span><br><span class="line">Sequelize.TEXT(<span class="string">'tiny'</span>)                <span class="comment">// TINYTEXT</span></span><br><span class="line"></span><br><span class="line">Sequelize.INTEGER                     <span class="comment">// INTEGER</span></span><br><span class="line">Sequelize.BIGINT                      <span class="comment">// BIGINT</span></span><br><span class="line">Sequelize.BIGINT(<span class="number">11</span>)                  <span class="comment">// BIGINT(11)</span></span><br><span class="line"></span><br><span class="line">Sequelize.FLOAT                       <span class="comment">// FLOAT</span></span><br><span class="line">Sequelize.FLOAT(<span class="number">11</span>)                   <span class="comment">// FLOAT(11)</span></span><br><span class="line">Sequelize.FLOAT(<span class="number">11</span>, <span class="number">12</span>)               <span class="comment">// FLOAT(11,12)</span></span><br><span class="line"></span><br><span class="line">Sequelize.REAL                        <span class="comment">// REAL         仅限于PostgreSQL.</span></span><br><span class="line">Sequelize.REAL(<span class="number">11</span>)                    <span class="comment">// REAL(11)     仅限于PostgreSQL.</span></span><br><span class="line">Sequelize.REAL(<span class="number">11</span>, <span class="number">12</span>)                <span class="comment">// REAL(11,12)  仅限于PostgreSQL.</span></span><br><span class="line"></span><br><span class="line">Sequelize.DOUBLE                      <span class="comment">// DOUBLE</span></span><br><span class="line">Sequelize.DOUBLE(<span class="number">11</span>)                  <span class="comment">// DOUBLE(11)</span></span><br><span class="line">Sequelize.DOUBLE(<span class="number">11</span>, <span class="number">12</span>)              <span class="comment">// DOUBLE(11,12)</span></span><br><span class="line"></span><br><span class="line">Sequelize.DECIMAL                     <span class="comment">// DECIMAL</span></span><br><span class="line">Sequelize.DECIMAL(<span class="number">10</span>, <span class="number">2</span>)              <span class="comment">// DECIMAL(10,2)</span></span><br><span class="line"></span><br><span class="line">Sequelize.DATE                        <span class="comment">// DATETIME 针对 mysql / sqlite, TIMESTAMP WITH TIME ZONE 针对 postgres</span></span><br><span class="line">Sequelize.DATE(<span class="number">6</span>)                     <span class="comment">// DATETIME(6) 针对 mysql 5.6.4+. 小数秒支持多达6位精度</span></span><br><span class="line">Sequelize.DATEONLY                    <span class="comment">// DATE 不带时间.</span></span><br><span class="line">Sequelize.BOOLEAN                     <span class="comment">// TINYINT(1)</span></span><br><span class="line"></span><br><span class="line">Sequelize.ENUM(<span class="string">'value 1'</span>, <span class="string">'value 2'</span>)  <span class="comment">// 一个允许具有 “value 1” 和 “value 2” 的 ENUM</span></span><br><span class="line">Sequelize.ARRAY(Sequelize.TEXT)       <span class="comment">// 定义一个数组。 仅限于 PostgreSQL。</span></span><br><span class="line">Sequelize.ARRAY(Sequelize.ENUM)       <span class="comment">// 定义一个 ENUM 数组. 仅限于 PostgreSQL。</span></span><br><span class="line"></span><br><span class="line">Sequelize.JSON                        <span class="comment">// JSON 列. 仅限于 PostgreSQL, SQLite and MySQL.</span></span><br><span class="line">Sequelize.JSONB                       <span class="comment">// JSONB 列. 仅限于 PostgreSQL .</span></span><br><span class="line"></span><br><span class="line">Sequelize.BLOB                        <span class="comment">// BLOB (PostgreSQL 二进制)</span></span><br><span class="line">Sequelize.BLOB(<span class="string">'tiny'</span>)                <span class="comment">// TINYBLOB (PostgreSQL 二进制. 其他参数是 medium 和 long)</span></span><br><span class="line"></span><br><span class="line">Sequelize.UUID                        <span class="comment">// PostgreSQL 和 SQLite 的 UUID 数据类型, CHAR(36) BINARY 针对于 MySQL (使用默认值: Sequelize.UUIDV1 或 Sequelize.UUIDV4 来让 sequelize 自动生成 ID)</span></span><br><span class="line"></span><br><span class="line">Sequelize.CIDR                        <span class="comment">// PostgreSQL 的 CIDR 数据类型</span></span><br><span class="line">Sequelize.INET                        <span class="comment">// PostgreSQL 的 INET 数据类型</span></span><br><span class="line">Sequelize.MACADDR                     <span class="comment">// PostgreSQL 的 MACADDR</span></span><br><span class="line"></span><br><span class="line">Sequelize.RANGE(Sequelize.INTEGER)    <span class="comment">// 定义 int4range 范围. 仅限于 PostgreSQL.</span></span><br><span class="line">Sequelize.RANGE(Sequelize.BIGINT)     <span class="comment">// 定义 int8range 范围. 仅限于 PostgreSQL.</span></span><br><span class="line">Sequelize.RANGE(Sequelize.DATE)       <span class="comment">// 定义 tstzrange 范围. 仅限于 PostgreSQL.</span></span><br><span class="line">Sequelize.RANGE(Sequelize.DATEONLY)   <span class="comment">// 定义 daterange 范围. 仅限于 PostgreSQL.</span></span><br><span class="line">Sequelize.RANGE(Sequelize.DECIMAL)    <span class="comment">// 定义 numrange 范围. 仅限于 PostgreSQL.</span></span><br><span class="line"></span><br><span class="line">Sequelize.ARRAY(Sequelize.RANGE(Sequelize.DATE)) <span class="comment">// 定义 tstzrange 范围的数组. 仅限于 PostgreSQL.</span></span><br><span class="line"></span><br><span class="line">Sequelize.GEOMETRY                    <span class="comment">// 空间列.  仅限于 PostgreSQL (具有 PostGIS) 或 MySQL.</span></span><br><span class="line">Sequelize.GEOMETRY(<span class="string">'POINT'</span>)           <span class="comment">// 具有几何类型的空间列.  仅限于 PostgreSQL (具有 PostGIS) 或 MySQL.</span></span><br><span class="line">Sequelize.GEOMETRY(<span class="string">'POINT'</span>, <span class="number">4326</span>)     <span class="comment">// 具有几何类型和SRID的空间列.  仅限于 PostgreSQL (具有 PostGIS) 或 MySQL.</span></span><br></pre></td></tr></table></figure><h4 id="mdoel-defaultValue"><a href="#mdoel-defaultValue" class="headerlink" title="mdoel defaultValue"></a>mdoel defaultValue</h4><h4 id="find-使用"><a href="#find-使用" class="headerlink" title="find 使用"></a>find 使用</h4><h5 id="find-搜索数据库中的一个特定元素"><a href="#find-搜索数据库中的一个特定元素" class="headerlink" title="find 搜索数据库中的一个特定元素"></a>find 搜索数据库中的一个特定元素</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 搜索已知的ids</span></span><br><span class="line">Project.findById(<span class="number">123</span>).then(<span class="function"><span class="params">project</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// project 将是 Project的一个实例，并具有在表中存为 id 123 条目的内容。</span></span><br><span class="line">  <span class="comment">// 如果没有定义这样的条目，你将获得null</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索属性</span></span><br><span class="line">Project.findOne(&#123; </span><br><span class="line">where: &#123;</span><br><span class="line">title: <span class="string">'aProject'</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;).then(<span class="function"><span class="params">project</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// project 将是 Projects 表中 title 为 'aProject'  的第一个条目 || null</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Project.findOne(&#123;</span><br><span class="line">  where: &#123;<span class="attr">title</span>: <span class="string">'aProject'</span>&#125;,</span><br><span class="line">  attributes: [<span class="string">'id'</span>, [<span class="string">'name'</span>, <span class="string">'title'</span>]]</span><br><span class="line">&#125;).then(<span class="function"><span class="params">project</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// project 将是 Projects 表中 title 为 'aProject'  的第一个条目 || null</span></span><br><span class="line">  <span class="comment">// project.title 将包含 project 的 name</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="findOrCreate-搜索特定元素或创建它（如果不可用）"><a href="#findOrCreate-搜索特定元素或创建它（如果不可用）" class="headerlink" title="findOrCreate 搜索特定元素或创建它（如果不可用）"></a>findOrCreate 搜索特定元素或创建它（如果不可用）</h5><p>我们有一个空的数据库，一个 User 模型有一个 username 和 job</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">User</span><br><span class="line">  .findOrCreate(&#123;</span><br><span class="line">where: &#123;<span class="attr">username</span>: <span class="string">'sdepold'</span>&#125;, </span><br><span class="line">defaults: &#123;<span class="attr">job</span>: <span class="string">'Technical Lead JavaScript'</span>&#125;</span><br><span class="line">&#125;)</span><br><span class="line">  .spread(<span class="function">(<span class="params">user, created</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(user.get(&#123;</span><br><span class="line">      plain: <span class="literal">true</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="built_in">console</span>.log(created)</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    findOrCreate 返回一个包含已找到或创建的对象的数组，找到或创建的对象和一个布尔值，如果创建一个新对象将为true，否则为false，像这样:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    [ &#123;</span></span><br><span class="line"><span class="comment">        username: 'sdepold',</span></span><br><span class="line"><span class="comment">        job: 'Technical Lead JavaScript',</span></span><br><span class="line"><span class="comment">        id: 1</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      true ]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在上面的例子中，".spread" 将数组分成2部分，并将它们作为参数传递给回调函数，在这种情况下将它们视为 "user" 和 "created" 。（所以“user”将是返回数组的索引0的对象，并且 "created" 将等于 "true"。）</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>创建了一个新的实例.所以当我们已经有一个实例了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">User.create(&#123; <span class="attr">username</span>: <span class="string">'fnord'</span>, <span class="attr">job</span>: <span class="string">'omnomnom'</span> &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> User.findOrCreate(&#123;</span><br><span class="line">where: &#123;<span class="attr">username</span>: <span class="string">'fnord'</span>&#125;, </span><br><span class="line">defaults: &#123;<span class="attr">job</span>: <span class="string">'something else'</span>&#125;</span><br><span class="line">&#125;))</span><br><span class="line">  .spread(<span class="function">(<span class="params">user, created</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(user.get(&#123;</span><br><span class="line">      plain: <span class="literal">true</span></span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="built_in">console</span>.log(created)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    在这个例子中，findOrCreate 返回一个如下的数组：</span></span><br><span class="line"><span class="comment">    [ &#123;</span></span><br><span class="line"><span class="comment">        username: 'fnord',</span></span><br><span class="line"><span class="comment">        job: 'omnomnom',</span></span><br><span class="line"><span class="comment">        id: 2</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      false</span></span><br><span class="line"><span class="comment">    ]</span></span><br><span class="line"><span class="comment">    由findOrCreate返回的数组通过 ".spread" 扩展为两部分，并且这些部分将作为2个参数传递给回调函数，在这种情况下将其视为 "user" 和 "created".（所以“user”将是返回数组的索引0的对象，并且 "created" 将等于 "false"。）</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h5 id="findAndCountAll-在数据库中搜索多个元素，返回数据和总计数"><a href="#findAndCountAll-在数据库中搜索多个元素，返回数据和总计数" class="headerlink" title="findAndCountAll - 在数据库中搜索多个元素，返回数据和总计数"></a>findAndCountAll - 在数据库中搜索多个元素，返回数据和总计数</h5><p>处理程序成功将始终接收具有两个属性的对象：</p><ul><li>count - 一个整数，总数记录匹配where语句和关联的其它过滤器</li><li>rows - 一个数组对象，记录在limit和offset范围内匹配where语句和关联的其它过滤器</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Project</span><br><span class="line">  .findAndCountAll(&#123;</span><br><span class="line">where: &#123;</span><br><span class="line">title: &#123;</span><br><span class="line">[Op.like]: <span class="string">'foo%'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">offset: <span class="number">10</span>,</span><br><span class="line">limit: <span class="number">2</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(result.count)</span><br><span class="line"><span class="built_in">console</span>.log(result.rows);</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>它支持 include。 只有标记为 required 的 include 将被添加到计数部分：</p><p>假设您想查找附有个人资料的所有用户：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User.findAndCountAll(&#123;</span><br><span class="line">  include: [</span><br><span class="line">     &#123; <span class="attr">model</span>: Profile, <span class="attr">required</span>: <span class="literal">true</span>&#125;</span><br><span class="line">  ],</span><br><span class="line">  limit: <span class="number">3</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>因为 Profile 的 include 有 required 设置，这将导致内部连接，并且只有具有 profile 的用户将被计数。 如果我们从 include 中删除required，那么有和没有 profile 的用户都将被计数。 在include中添加一个 where 语句会自动使它成为 required：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User.findAndCountAll(&#123;</span><br><span class="line">  include: [</span><br><span class="line">     &#123; <span class="attr">model</span>: Profile, <span class="attr">where</span>: &#123; <span class="attr">active</span>: <span class="literal">true</span> &#125;&#125;</span><br><span class="line">  ],</span><br><span class="line">  limit: <span class="number">3</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上面的查询只会对具有 active profile 的用户进行计数，因为在将 where 语句添加到 include 时，required 被隐式设置为 true</p><p>传递给 findAndCountAll 的 options 对象与 findAll 相同（如下所述）</p><h5 id="findAll-搜索数据库中的多个元素"><a href="#findAll-搜索数据库中的多个元素" class="headerlink" title="findAll - 搜索数据库中的多个元素"></a>findAll - 搜索数据库中的多个元素</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找到多个条目</span></span><br><span class="line">Project.findAll().then(<span class="function"><span class="params">projects</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// projects 将是所有 Project 实例的数组</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以：</span></span><br><span class="line">Project.all().then(<span class="function"><span class="params">projects</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// projects 将是所有 Project 实例的数组</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索特定属性 - 使用哈希</span></span><br><span class="line">Project.findAll(&#123; <span class="attr">where</span>: &#123; <span class="attr">name</span>: <span class="string">'A Project'</span> &#125; &#125;).then(<span class="function"><span class="params">projects</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// projects将是一个具有指定 name 的 Project 实例数组</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在特定范围内进行搜索</span></span><br><span class="line">Project.findAll(&#123; <span class="attr">where</span>: &#123; <span class="attr">id</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] &#125; &#125;).then(<span class="function"><span class="params">projects</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// projects将是一系列具有 id 1,2 或 3 的项目</span></span><br><span class="line">  <span class="comment">// 这实际上是在做一个 IN 查询</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">Project.findAll(&#123;</span><br><span class="line">  where: &#123;</span><br><span class="line">    id: &#123;</span><br><span class="line">      [Op.and]: &#123;<span class="attr">a</span>: <span class="number">5</span>&#125;,           <span class="comment">// 且 (a = 5)</span></span><br><span class="line">      [Op.or]: [&#123;<span class="attr">a</span>: <span class="number">5</span>&#125;, &#123;<span class="attr">a</span>: <span class="number">6</span>&#125;],  <span class="comment">// (a = 5 或 a = 6)</span></span><br><span class="line">      [Op.gt]: <span class="number">6</span>,                <span class="comment">// id &gt; 6</span></span><br><span class="line">      [Op.gte]: <span class="number">6</span>,               <span class="comment">// id &gt;= 6</span></span><br><span class="line">      [Op.lt]: <span class="number">10</span>,               <span class="comment">// id &lt; 10</span></span><br><span class="line">      [Op.lte]: <span class="number">10</span>,              <span class="comment">// id &lt;= 10</span></span><br><span class="line">      [Op.ne]: <span class="number">20</span>,               <span class="comment">// id != 20</span></span><br><span class="line">      [Op.between]: [<span class="number">6</span>, <span class="number">10</span>],     <span class="comment">// 在 6 和 10 之间</span></span><br><span class="line">      [Op.notBetween]: [<span class="number">11</span>, <span class="number">15</span>], <span class="comment">// 不在 11 和 15 之间</span></span><br><span class="line">      [Op.in]: [<span class="number">1</span>, <span class="number">2</span>],           <span class="comment">// 在 [1, 2] 之中</span></span><br><span class="line">      [Op.notIn]: [<span class="number">1</span>, <span class="number">2</span>],        <span class="comment">// 不在 [1, 2] 之中</span></span><br><span class="line">      [Op.like]: <span class="string">'%hat'</span>,         <span class="comment">// 包含 '%hat'</span></span><br><span class="line">      [Op.notLike]: <span class="string">'%hat'</span>,       <span class="comment">// 不包含 '%hat'</span></span><br><span class="line">      [Op.iLike]: <span class="string">'%hat'</span>,         <span class="comment">// 包含 '%hat' (不区分大小写)  (仅限 PG)</span></span><br><span class="line">      [Op.notILike]: <span class="string">'%hat'</span>,      <span class="comment">// 不包含 '%hat'  (仅限 PG)</span></span><br><span class="line">      [Op.overlap]: [<span class="number">1</span>, <span class="number">2</span>],       <span class="comment">// &amp;&amp; [1, 2] (PG数组重叠运算符)</span></span><br><span class="line">      [Op.contains]: [<span class="number">1</span>, <span class="number">2</span>],      <span class="comment">// @&gt; [1, 2] (PG数组包含运算符)</span></span><br><span class="line">      [Op.contained]: [<span class="number">1</span>, <span class="number">2</span>],     <span class="comment">// &lt;@ [1, 2] (PG数组包含于运算符)</span></span><br><span class="line">      [Op.any]: [<span class="number">2</span>,<span class="number">3</span>],            <span class="comment">// 任何数组[2, 3]::INTEGER (仅限 PG)</span></span><br><span class="line">    &#125;,</span><br><span class="line">    status: &#123;</span><br><span class="line">      [Op.not]: <span class="literal">false</span>,           <span class="comment">// status 不为 FALSE</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 限制字段</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">await</span> User.findAll(&#123;</span><br><span class="line"><span class="string">'attributes'</span>: [<span class="string">'emp_id'</span>, <span class="string">'nick'</span>]</span><br><span class="line">&#125;);</span><br><span class="line">SELECT <span class="string">`emp_id`</span>, <span class="string">`nick`</span> FROM <span class="string">`users`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字段重命名</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">await</span> User.findAll(&#123;</span><br><span class="line"><span class="string">'attributes'</span>: [</span><br><span class="line"><span class="string">'emp_id'</span>, [<span class="string">'nick'</span>, <span class="string">'user_nick'</span>]</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line">SELECT <span class="string">`emp_id`</span>, <span class="string">`nick`</span> AS <span class="string">`user_nick`</span> FROM <span class="string">`users`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// where子句</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">await</span> User.findAll(&#123;</span><br><span class="line"><span class="string">'where'</span>: &#123;</span><br><span class="line"><span class="string">'id'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line"><span class="string">'nick'</span>: <span class="string">'a'</span>,</span><br><span class="line"><span class="string">'department'</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">SELECT <span class="string">`id`</span>, <span class="string">`emp_id`</span>, <span class="string">`nick`</span>, <span class="string">`department`</span>, <span class="string">`created_at`</span>, <span class="string">`updated_at`</span> </span><br><span class="line">FROM <span class="string">`user`</span> </span><br><span class="line">WHERE </span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`id`</span> IN (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) AND </span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`nick`</span>=<span class="string">'a'</span> AND </span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`department`</span> IS NULL;</span><br></pre></td></tr></table></figure><hr><p>操作符 where</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'$eq'</span>: <span class="number">1</span>,                <span class="comment">//  = 1</span></span><br><span class="line"><span class="string">'$ne'</span>: <span class="number">2</span>,                <span class="comment">//  != 2</span></span><br><span class="line"><span class="string">'$gt'</span>: <span class="number">6</span>,                <span class="comment">//  &gt; 6</span></span><br><span class="line"><span class="string">'$gte'</span>: <span class="number">6</span>,               <span class="comment">//  &gt;= 6</span></span><br><span class="line"><span class="string">'$lt'</span>: <span class="number">10</span>,               <span class="comment">//  &lt; 10</span></span><br><span class="line"><span class="string">'$lte'</span>: <span class="number">10</span>,              <span class="comment">//  &lt;= 10</span></span><br><span class="line"><span class="string">'$between'</span>: [<span class="number">6</span>, <span class="number">10</span>],     <span class="comment">//  BETWEEN 6 AND 10</span></span><br><span class="line"><span class="string">'$notBetween'</span>: [<span class="number">11</span>, <span class="number">15</span>], <span class="comment">//  NOT BETWEEN 11 AND 15</span></span><br><span class="line"><span class="string">'$in'</span>: [<span class="number">1</span>, <span class="number">2</span>],           <span class="comment">//  IN (1, 2)</span></span><br><span class="line"><span class="string">'$notIn'</span>: [<span class="number">3</span>, <span class="number">4</span>]         <span class="comment">//  NOT IN (3, 4)</span></span><br><span class="line"><span class="string">'$like'</span>: <span class="string">'%a%'</span>,          <span class="comment">//  LIKE '%a%'</span></span><br><span class="line"><span class="string">'$notLike'</span>: <span class="string">'%a'</span>         <span class="comment">//  NOT LIKE '%a'</span></span><br><span class="line"><span class="string">'$eq'</span>: <span class="literal">null</span>,             <span class="comment">//  IS NULL</span></span><br><span class="line"><span class="string">'$ne'</span>: <span class="literal">null</span>              <span class="comment">//  IS NOT NULL</span></span><br></pre></td></tr></table></figure><hr><ul><li>$and</li><li>$or</li><li>$not</li><li>order 排序</li><li>分页 User.findAll({<br>  ‘limit’: countPerPage, // 每页多少条<br>  ‘offset’: countPerPage * (currentPage - 1)// 跳过多少条<br>})</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// OR条件</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">await</span> User.findAll(&#123;</span><br><span class="line">    <span class="string">'where'</span>: &#123;</span><br><span class="line">        <span class="string">'$or'</span>: [</span><br><span class="line">            &#123;<span class="string">'id'</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;,</span><br><span class="line">            &#123;<span class="string">'nick'</span>: <span class="literal">null</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">SELECT <span class="string">`id`</span>, <span class="string">`emp_id`</span>, <span class="string">`nick`</span>, <span class="string">`department`</span>, <span class="string">`created_at`</span>, <span class="string">`updated_at`</span> </span><br><span class="line">FROM <span class="string">`user`</span> WHERE </span><br><span class="line">(</span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`id`</span> IN (<span class="number">1</span>, <span class="number">2</span>) OR </span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`nick`</span> IS NULL</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AND条件</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">await</span> User.findAll(&#123;</span><br><span class="line">    <span class="string">'where'</span>: &#123;</span><br><span class="line">        <span class="string">'$and'</span>: [</span><br><span class="line">            &#123;<span class="string">'id'</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;,</span><br><span class="line">            &#123;<span class="string">'nick'</span>: <span class="literal">null</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">SELECT <span class="string">`id`</span>, <span class="string">`emp_id`</span>, <span class="string">`nick`</span>, <span class="string">`department`</span>, <span class="string">`created_at`</span>, <span class="string">`updated_at`</span> </span><br><span class="line">FROM <span class="string">`user`</span> WHERE </span><br><span class="line">(</span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`id`</span> IN (<span class="number">1</span>, <span class="number">2</span>) AND </span><br><span class="line">    <span class="string">`user`</span>.<span class="string">`nick`</span> IS NULL</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NOT条件</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">await</span> User.findAll(&#123;</span><br><span class="line">    <span class="string">'where'</span>: &#123;</span><br><span class="line">        <span class="string">'$not'</span>: [</span><br><span class="line">            &#123;<span class="string">'id'</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;,</span><br><span class="line">            &#123;<span class="string">'nick'</span>: <span class="literal">null</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="改-update-使用"><a href="#改-update-使用" class="headerlink" title="改 update 使用"></a>改 update 使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法1：操作对象属性（不会操作db），调用save后操作db</span></span><br><span class="line">user.nick = <span class="string">'小白'</span>;</span><br><span class="line">user = <span class="keyword">yield</span> user.save();</span><br><span class="line"><span class="built_in">console</span>.log(user.get(&#123;<span class="string">'plain'</span>: <span class="literal">true</span>&#125;));</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 方法2：直接update操作db</span></span><br><span class="line">user.update(&#123;</span><br><span class="line">    <span class="string">'nick'</span>: <span class="string">'小白白'</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">user</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(user.get(&#123;<span class="string">'plain'</span>: <span class="literal">true</span>&#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="ffff"><a href="#ffff" class="headerlink" title="ffff"></a>ffff</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">User.findAll().then(<span class="function">(<span class="params">users</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(users)</span><br><span class="line">&#125;)</span><br><span class="line">findAll</span><br><span class="line">findOne</span><br><span class="line">findById</span><br><span class="line">findOrCreate</span><br><span class="line">findAndCountAll</span><br><span class="line"></span><br><span class="line">findAll(&#123;</span><br><span class="line">where: &#123;</span><br><span class="line">title: <span class="string">'afacode'</span></span><br><span class="line">&#125;,</span><br><span class="line">attributes: [<span class="string">'id'</span>, [<span class="string">'name'</span>, title]]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">findOrCreate(&#123;</span><br><span class="line">where: &#123;</span><br><span class="line">username: <span class="string">'afacode'</span></span><br><span class="line">&#125;,</span><br><span class="line">defaults: &#123;</span><br><span class="line">job: <span class="string">'FE'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;).spread(user, created) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>new Sequelize</li><li>sequelize.models 返回通过sequelize.define定义的所有模型对象</li><li>sequelize.define</li><li>sequelize.Utils</li><li>sequelize.Promise</li><li>sequelize.QueryTypes 查询类型枚举</li><li>sequelize.Validator</li><li>sequelize.Transaction 事务对象</li></ul><p>project.max(‘age’)</p><p>project.min(‘age’)</p><p>project.sum(‘age’)</p><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;sequelize基础知识学习整理&quot;&gt;&lt;a href=&quot;#sequelize基础知识学习整理&quot; class=&quot;headerlink&quot; title=&quot;sequelize基础知识学习整理&quot;&gt;&lt;/a&gt;sequelize基础知识学习整理&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;h</summary>
      
    
    
    
    <category term="node" scheme="https://blog.afacode.top/categories/node/"/>
    
    
    <category term="node" scheme="https://blog.afacode.top/tags/node/"/>
    
    <category term="sequelize" scheme="https://blog.afacode.top/tags/sequelize/"/>
    
  </entry>
  
  <entry>
    <title>node(koa2)微信公众号接口认证</title>
    <link href="https://blog.afacode.top/2019/01/13/koa-wechat/"/>
    <id>https://blog.afacode.top/2019/01/13/koa-wechat/</id>
    <published>2019-01-13T11:13:32.000Z</published>
    <updated>2023-07-13T15:06:15.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="node-koa2-微信公众号接口认证"><a href="#node-koa2-微信公众号接口认证" class="headerlink" title="node(koa2)微信公众号接口认证"></a>node(koa2)微信公众号接口认证</h2><p>使用微信测试号, 花生壳内网穿透, <br><br>需要注意 token 两边都是自定义, 需要保持一致</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">const</span> sha1 = <span class="built_in">require</span>(<span class="string">'sha1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  wechat: &#123;</span><br><span class="line">    appID: <span class="string">''</span>, <span class="comment">//填写你自己的appID</span></span><br><span class="line">    appSecret: <span class="string">''</span>,  <span class="comment">//填写你自己的appSecret</span></span><br><span class="line">    token: <span class="string">''</span>  <span class="comment">//填写你自己的token</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.use(<span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> token = config.wechat.token</span><br><span class="line">  <span class="keyword">const</span> signature = ctx.request.query.signature</span><br><span class="line">  <span class="keyword">const</span> nonce = ctx.request.query.nonce</span><br><span class="line">  <span class="keyword">const</span> timestamp = ctx.request.query.timestamp</span><br><span class="line">  <span class="keyword">const</span> echostr = ctx.request.query.echostr</span><br><span class="line">  <span class="keyword">let</span> str = [token, timestamp, nonce].sort().join(<span class="string">''</span>)</span><br><span class="line">  <span class="keyword">const</span> sha = sha1(str)</span><br><span class="line">  ctx.body = sha === signature ? echostr + <span class="string">''</span> : <span class="string">'failed'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">8999</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'node started port 8999'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="点击验证-显示配置成功即可-测试地址"><a href="#点击验证-显示配置成功即可-测试地址" class="headerlink" title="点击验证,显示配置成功即可 测试地址"></a>点击验证,显示配置成功即可 <a href="https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&t=sandbox/index" target="_blank" rel="noopener">测试地址</a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;node-koa2-微信公众号接口认证&quot;&gt;&lt;a href=&quot;#node-koa2-微信公众号接口认证&quot; class=&quot;headerlink&quot; title=&quot;node(koa2)微信公众号接口认证&quot;&gt;&lt;/a&gt;node(koa2)微信公众号接口认证&lt;/h2&gt;&lt;p&gt;使用</summary>
      
    
    
    
    <category term="node" scheme="https://blog.afacode.top/categories/node/"/>
    
    
    <category term="node" scheme="https://blog.afacode.top/tags/node/"/>
    
    <category term="koa" scheme="https://blog.afacode.top/tags/koa/"/>
    
    <category term="微信公众号" scheme="https://blog.afacode.top/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>git删除远程分支和本地分支</title>
    <link href="https://blog.afacode.top/2018/11/10/git-del-branch/"/>
    <id>https://blog.afacode.top/2018/11/10/git-del-branch/</id>
    <published>2018-11-10T13:07:39.000Z</published>
    <updated>2023-07-13T15:06:15.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git删除远程分支和本地分支"><a href="#git删除远程分支和本地分支" class="headerlink" title="git删除远程分支和本地分支"></a>git删除远程分支和本地分支</h2><p>当我们集体进行项目时，将自定义分支push到主分支master之后，如何删除远程的自定义分支呢</p><blockquote><ol><li><code>git branch -a</code> 查看所有分支<br><code>remote/origin/master</code>表示的是远程分支</li><li>删除远程分支<br><code>git push origin --delete demo</code>   可以删除远程分支demo</li><li>删除本地分支</li></ol><ul><li>3.1 切换到master分支 <code>git checkout  master</code></li><li>3.2 <code>git branch -D demo</code> 可以删除本地demo分支（在主分支中）</li></ul></blockquote><h2 id="git删除远程tag和本地tag"><a href="#git删除远程tag和本地tag" class="headerlink" title="git删除远程tag和本地tag"></a>git删除远程tag和本地tag</h2><blockquote><p>新建tag</p></blockquote><blockquote><p>上线代码需要打tag，在master分支打tag 打版本v1.0.0.0, 提交版本v1.0.0.0<br>  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> git tag -a v1<span class="number">.0</span><span class="number">.0</span><span class="number">.0</span> -m '注解打新版本v1<span class="number">.0</span><span class="number">.0</span><span class="number">.0</span>'</span><br><span class="line"><span class="number">2.</span> git push origin v1<span class="number">.0</span><span class="number">.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><br>删除本地tag <code>git tag -d v1.0.0.0</code></p></blockquote><blockquote><p>删除git远程tag <code>git push origin --delete tag v1.0.0.0</code></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;git删除远程分支和本地分支&quot;&gt;&lt;a href=&quot;#git删除远程分支和本地分支&quot; class=&quot;headerlink&quot; title=&quot;git删除远程分支和本地分支&quot;&gt;&lt;/a&gt;git删除远程分支和本地分支&lt;/h2&gt;&lt;p&gt;当我们集体进行项目时，将自定义分支push到</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="git" scheme="https://blog.afacode.top/tags/git/"/>
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>vue-router 钩子函数（路由拦截）</title>
    <link href="https://blog.afacode.top/2018/10/09/vue-router-1/"/>
    <id>https://blog.afacode.top/2018/10/09/vue-router-1/</id>
    <published>2018-10-09T14:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.436Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://router.vuejs.org/zh/" target="_blank" rel="noopener">Vue Router官网</a></p><h2 id="vue-router-钩子函数（路由拦截）"><a href="#vue-router-钩子函数（路由拦截）" class="headerlink" title="vue-router 钩子函数（路由拦截）"></a>vue-router 钩子函数（路由拦截）</h2><p>有的时候，当路由跳转前或跳转后、进入、离开某一个路由前、后，需要做某些操作，就可以使用路由钩子来监听路由的变化，比如最常见的登录权限验证，当用户满足条件时，才让其进入导航，否则就取消跳转，并跳到登录页面让其登录</p><h3 id="全局路由钩子"><a href="#全局路由钩子" class="headerlink" title="全局路由钩子"></a>全局路由钩子</h3><blockquote><p><strong>beforeEach, afterEach, beforeResolve</strong></p></blockquote><p><code>router.beforeResolve</code> 全局解析守卫(2.5.0+) 在beforeRouteEnter调用之后调用</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach(<span class="function"><span class="params">(to, <span class="keyword">from</span>, <span class="built_in">next</span>)</span> =&gt;</span> &#123;</span><br><span class="line">  console.log(to,<span class="keyword">from</span>)</span><br><span class="line">  <span class="keyword">if</span>(to.matched.some(res =&gt; res.meta.requireAuth)) &#123;</span><br><span class="line">    // 判断是否需要登录权限 &amp;&amp; 判断是否登录</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">next</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.beforeResolve(<span class="function"><span class="params">(to, <span class="keyword">from</span>, <span class="built_in">next</span>)</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">next</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function"><span class="params">(to, <span class="keyword">from</span>)</span> =&gt;</span> &#123;</span><br><span class="line">    //会在任意路由跳转后执行</span><br><span class="line">    // 不接受<span class="built_in">next</span>函数</span><br><span class="line">  console.log(<span class="string">'afterEach'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>to, from, 路由对象指的是平时通过this.$route获取到的路由对象</li><li>next() </li><li>next(false) url 不跳转</li><li>next  跳转新路由，当前的导航被中断，重新开始一个新的导航<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们可以这样跳转：<span class="keyword">next</span>(<span class="string">'path地址'</span>)或者<span class="keyword">next</span>(<span class="built_in">&#123;path</span>:<span class="string">''</span>&#125;)或者<span class="keyword">next</span>(<span class="built_in">&#123;name</span>:<span class="string">''</span>&#125;)</span><br><span class="line">且允许设置诸如<span class="built_in"> replace</span>:<span class="built_in"> true</span><span class="built_in">、name</span>: <span class="string">'home'</span> 之类的选项</span><br><span class="line">以及你用在router-link或router.push的对象选项。</span><br></pre></td></tr></table></figure></li></ul><h3 id="单个路由钩子"><a href="#单个路由钩子" class="headerlink" title="单个路由钩子"></a>单个路由钩子</h3><blockquote><p>只有<code>beforeEnter</code>，在进入前执行，to参数就是当前路由</p></blockquote><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">routes</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="name">path</span>: <span class="string">'/foo'</span>,</span><br><span class="line">    <span class="name">component</span>: Foo,</span><br><span class="line">    <span class="name">beforeEnter</span>: <span class="function"><span class="params">(to, <span class="keyword">from</span>, <span class="built_in">next</span>)</span> =&gt;</span> &#123;</span><br><span class="line">      // ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="组件内路由钩子"><a href="#组件内路由钩子" class="headerlink" title="组件内路由钩子"></a>组件内路由钩子</h3><blockquote><p><strong>beforeRouteEnter, beforeRouteUpdate(2.2), beforeRouteLeave</strong></p></blockquote><blockquote><p>beforeRouteEnter 不能获取组件实例 this，因为当守卫执行前，组件实例被没有被创建出来，剩下两个钩子则可以正常获取组件实例 this</p></blockquote><ul><li>beforeRouteEnter获取到this实例, 可以通过传一个回调给next来访问组件实例<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter (<span class="keyword">to</span>, from, <span class="keyword">next</span>) &#123;</span><br><span class="line">  <span class="keyword">next</span>(<span class="keyword">vm</span> =&gt; &#123;</span><br><span class="line">    // 通过 `<span class="keyword">vm</span>` 访问组件实例</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter (to, from, <span class="keyword">next</span>) &#123;</span><br><span class="line">  <span class="regexp">//</span> 在渲染该组件的对应路由被 confirm 前调用</span><br><span class="line">  <span class="regexp">//</span> 不！能！获取组件实例 `this`</span><br><span class="line">  <span class="regexp">//</span> 因为当守卫执行前，组件实例还没被创建</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteUpdate (to, from, <span class="keyword">next</span>) &#123;</span><br><span class="line">  <span class="regexp">//</span> 在当前路由改变，但是该组件被复用时调用</span><br><span class="line">  <span class="regexp">//</span> 举例来说，对于一个带有动态参数的路径 <span class="regexp">/foo/</span>:id，在 <span class="regexp">/foo/</span><span class="number">1</span> 和 <span class="regexp">/foo/</span><span class="number">2</span> 之间跳转的时候，</span><br><span class="line">  <span class="regexp">//</span> 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span><br><span class="line">  <span class="regexp">//</span> 可以访问组件实例 `this`</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteLeave (to, from, <span class="keyword">next</span>) &#123;</span><br><span class="line">  <span class="regexp">//</span> 导航离开该组件的对应路由时调用</span><br><span class="line">  <span class="regexp">//</span> 可以访问组件实例 `this`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整的路由导航解析流程-不包括其他生命周期"><a href="#完整的路由导航解析流程-不包括其他生命周期" class="headerlink" title="完整的路由导航解析流程(不包括其他生命周期)"></a>完整的路由导航解析流程(不包括其他生命周期)</h3><ul><li>触发进入其他路由。</li><li>调用要离开路由的组件守卫beforeRouteLeave</li><li>调用局前置守卫：beforeEach</li><li>在重用的组件里调用 beforeRouteUpdate</li><li>调用路由独享守卫 beforeEnter。</li><li>解析异步路由组件。</li><li>在将要进入的路由组件中调用beforeRouteEnter</li><li>调用全局解析守卫 beforeResolve</li><li>导航被确认。</li><li>调用全局后置钩子的 afterEach 钩子。</li><li>触发DOM更新(mounted)。</li><li>执行beforeRouteEnter 守卫中传给 next 的回调函数</li></ul><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://router.vuejs.org/zh/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue Router官网&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;vue-router-钩子函数（路由拦截）&quot;&gt;&lt;a href=&quot;#vue-r</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="vue router" scheme="https://blog.afacode.top/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>vue router</title>
    <link href="https://blog.afacode.top/2018/09/14/vue-router/"/>
    <id>https://blog.afacode.top/2018/09/14/vue-router/</id>
    <published>2018-09-14T14:34:55.000Z</published>
    <updated>2023-07-13T15:06:15.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue-router"><a href="#vue-router" class="headerlink" title="vue router"></a>vue router</h2><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/foo"</span>&gt;</span>Go to Foo<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">this.<span class="variable">$route</span>.params</span><br><span class="line"></span><br><span class="line">this.<span class="variable">$router</span>.go(-<span class="number">1</span>)</span><br><span class="line">this.<span class="variable">$router</span>.push(<span class="string">'/'</span>)</span><br><span class="line"></span><br><span class="line">routes: [</span><br><span class="line">    // 动态路径参数 以冒号开头</span><br><span class="line">    &#123;<span class="built_in"> path</span>: <span class="string">'/user/:id'</span>, component: User &#125;</span><br><span class="line">]</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>User </span><span class="xquery">&#123;&#123; <span class="variable">$route</span>.params<span class="built_in">.id</span> &#125;</span><span class="xml">&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>vue里的路由钩子</p><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vue-router&quot;&gt;&lt;a href=&quot;#vue-router&quot; class=&quot;headerlink&quot; title=&quot;vue router&quot;&gt;&lt;/a&gt;vue router&lt;/h2&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;</summary>
      
    
    
    
    <category term="js" scheme="https://blog.afacode.top/categories/js/"/>
    
    
    <category term="vue" scheme="https://blog.afacode.top/tags/vue/"/>
    
    <category term="vue router" scheme="https://blog.afacode.top/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>Mac os Terminal 使用</title>
    <link href="https://blog.afacode.top/2018/07/19/macos-terminal/"/>
    <id>https://blog.afacode.top/2018/07/19/macos-terminal/</id>
    <published>2018-07-19T08:22:02.000Z</published>
    <updated>2023-07-13T15:06:15.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="macOS-设置"><a href="#macOS-设置" class="headerlink" title="macOS 设置"></a>macOS 设置</h2><h3 id="Homebrew-安装"><a href="#Homebrew-安装" class="headerlink" title="Homebrew 安装"></a>Homebrew 安装</h3><p><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></p><blockquote><p>安装软件 <code>brew install 软件名</code></p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">安装,更新或卸载</span><br><span class="line">brew install nodejs</span><br><span class="line">brew<span class="built_in"> upgrade </span>nodejs</span><br><span class="line">brew <span class="builtin-name">remove</span> nodejs</span><br><span class="line">brew list                   # 列出当前安装的软件</span><br><span class="line">brew search nodejs          # 查询与 nodejs 相关的可用软件</span><br><span class="line">brew <span class="builtin-name">info</span> nodejs            # 查询 nodejs 的安装信息</span><br><span class="line"></span><br><span class="line">brew services管理各种服务的启停，有点像 linux 里面的 services</span><br></pre></td></tr></table></figure><h3 id="给MacOS终端CLI添加颜色-Terminal"><a href="#给MacOS终端CLI添加颜色-Terminal" class="headerlink" title="给MacOS终端CLI添加颜色 Terminal"></a>给MacOS终端CLI添加颜色 Terminal</h3><ul><li><code>vim ~/.bash_profile</code></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLICOLOR</span>=1</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LSCOLORS</span>=ExGxFxdaCxDaDahbadeche</span><br><span class="line"><span class="comment"># 修改苹果终端的样式与默认提示符的颜色</span></span><br><span class="line"><span class="comment"># 修改终端提示符（用户名颜色，主机名颜色、路径颜色）颜色</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PS1</span>=<span class="string">'\[\033[01;36m\]\u@\h\[\033[01;32m\] \W\$\[\033[00m\]'</span></span><br></pre></td></tr></table></figure><ul><li>更新刚配置的环境变量 <code>source .bash_profile</code></li></ul><h3 id="ll-ls-al-设置别名"><a href="#ll-ls-al-设置别名" class="headerlink" title="ll = ls -al 设置别名"></a>ll = ls -al 设置别名</h3><ul><li><code>vim ~/.bash_profile alias ll=&#39;ls -al&#39; </code></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line"></span><br><span class="line">cd ~ 回到home路径</span><br><span class="line">cd - 返回上一步</span><br><span class="line"></span><br><span class="line">mkdir 创建目录</span><br><span class="line">rmdir 删除空路径</span><br><span class="line">touch</span><br><span class="line">cp 复制文件和目录</span><br><span class="line">mv 移动、重命名文件或目录</span><br><span class="line">less 查看文件内容</span><br><span class="line">cat 查看文件内容</span><br><span class="line"><span class="keyword">exit</span> 退出命令行</span><br><span class="line"></span><br><span class="line">清除屏幕： ctrl + l or clear</span><br><span class="line">清除当前行： ctrl + u</span><br><span class="line">将光标移动到行尾：ctrl + e</span><br><span class="line">将光标移动到行首：ctrl + a</span><br><span class="line">清除至当前行尾： ctrl + k</span><br></pre></td></tr></table></figure><blockquote><p>Mac tree 命令，中文文件名乱码</p></blockquote><ul><li><p><code>tree -N</code></p></li><li><p><code>tree -L 2</code> 2层级</p></li></ul><h3 id="mac、linux终端-Idea-Terminal-显示git当前所在分支"><a href="#mac、linux终端-Idea-Terminal-显示git当前所在分支" class="headerlink" title="mac、linux终端 Idea Terminal 显示git当前所在分支"></a>mac、linux终端 Idea Terminal 显示git当前所在分支</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"></span><br><span class="line"># Git branch in prompt.</span><br><span class="line">parse_git_branch() &#123;</span><br><span class="line">    git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* <span class="symbol">\(</span>.*<span class="symbol">\)</span>/ (<span class="symbol">\1</span>)/'</span><br><span class="line">&#125;</span><br><span class="line">export PS1="<span class="symbol">\u</span>@<span class="symbol">\h</span> <span class="symbol">\W</span><span class="symbol">\[</span><span class="symbol">\0</span>33[32m<span class="symbol">\]</span><span class="symbol">\$</span>(parse_git_branch)<span class="symbol">\[</span><span class="symbol">\0</span>33[00m<span class="symbol">\]</span> $ "</span><br></pre></td></tr></table></figure><h3 id="mac-terminal-git-status-中文显示乱码"><a href="#mac-terminal-git-status-中文显示乱码" class="headerlink" title="mac terminal git status 中文显示乱码"></a>mac terminal git status 中文显示乱码</h3><ul><li><code>git config --global core.quotepath false</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;macOS-设置&quot;&gt;&lt;a href=&quot;#macOS-设置&quot; class=&quot;headerlink&quot; title=&quot;macOS 设置&quot;&gt;&lt;/a&gt;macOS 设置&lt;/h2&gt;&lt;h3 id=&quot;Homebrew-安装&quot;&gt;&lt;a href=&quot;#Homebrew-安装&quot; class</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
    <category term="macos" scheme="https://blog.afacode.top/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法学习</title>
    <link href="https://blog.afacode.top/2018/03/09/markdown/"/>
    <id>https://blog.afacode.top/2018/03/09/markdown/</id>
    <published>2018-03-09T13:08:25.000Z</published>
    <updated>2023-07-13T15:06:15.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo" title="">                </div>                <div class="image-caption">cmd-markdown-logo</div>            </figure><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C-todo-%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li><input disabled="" type="checkbox"> 支持以 PDF 格式导出文稿</li><li><input disabled="" type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li><input checked="" disabled="" type="checkbox"> 新增 Todo 列表功能</li><li><input checked="" disabled="" type="checkbox"> 修复 LaTex 公式渲染问题</li><li><input checked="" disabled="" type="checkbox"> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-%E6%B5%81%E7%A8%8B%E5%9B%BE" target="_blank" rel="noopener">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: Start</span><br><span class="line">op&#x3D;&gt;operation: Your Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-%E5%BA%8F%E5%88%97%E5%9B%BE" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-%E7%94%98%E7%89%B9%E5%9B%BE" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-%E9%AB%98%E9%98%B6%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor" title="">                </div>                <div class="image-caption">tool-editor</div>            </figure><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager" title="">                </div>                <div class="image-caption">tool-manager</div>            </figure><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager" title="">                </div>                <div class="image-caption">tool-manager</div>            </figure><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list" title="">                </div>                <div class="image-caption">file-list</div>            </figure><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日    </p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;欢迎使用-Cmd-Markdown-编辑阅读器&quot;&gt;&lt;a href=&quot;#欢迎使用-Cmd-Markdown-编辑阅读器&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 Cmd Markdown 编辑阅读器&quot;&gt;&lt;/a&gt;欢迎使用 Cmd Markdown</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
    <category term="markdown" scheme="https://blog.afacode.top/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>python类(学习)</title>
    <link href="https://blog.afacode.top/2017/11/16/python-class/"/>
    <id>https://blog.afacode.top/2017/11/16/python-class/</id>
    <published>2017-11-16T15:07:39.000Z</published>
    <updated>2023-07-13T15:06:15.421Z</updated>
    
    <content type="html"><![CDATA[<p>[学习]python类，继承</p><a id="more"></a><h2 id="学习-python类，继承"><a href="#学习-python类，继承" class="headerlink" title="[学习]python类，继承"></a>[学习]python类，继承</h2><p>转载<a href="https://www.yuanrenxue.com/python/python-class-inheritance.html" target="_blank" rel="noopener">https://www.yuanrenxue.com/python/python-class-inheritance.html</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, name, age, height)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">self</span>.name = name</span><br><span class="line">        <span class="keyword">self</span>.age = age</span><br><span class="line">        <span class="keyword">self</span>.height = height</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">look</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        print(<span class="keyword">self</span>.name, <span class="string">'is looking'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">walk</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        print(<span class="keyword">self</span>.name, <span class="string">'is walking'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span>(<span class="title">Person</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, name, age, height)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">super</span>().__init_<span class="number">_</span>(name, age, height)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">teach</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        print(<span class="keyword">self</span>.name, <span class="string">'is teaching'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="title">Person</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, name, age, height)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">super</span>().__init_<span class="number">_</span>(name, age, height)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">learn</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        print(<span class="keyword">self</span>.name, <span class="string">'is learning'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">'__main__'</span><span class="symbol">:</span></span><br><span class="line">    teacher = Teacher(<span class="string">'Tom'</span>, <span class="number">31</span>, <span class="number">178</span>)</span><br><span class="line">    s1 = Student(<span class="string">'Jim'</span>, <span class="number">12</span>, <span class="number">160</span>)</span><br><span class="line">    s2 = Student(<span class="string">'Kim'</span>, <span class="number">13</span>, <span class="number">162</span>)</span><br><span class="line"></span><br><span class="line">    teacher.look()</span><br><span class="line">    teacher.walk()</span><br><span class="line">    teacher.teach()</span><br><span class="line">    print(<span class="string">'==='</span>*<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    s1.look()</span><br><span class="line">    s1.walk()</span><br><span class="line">    s1.learn()</span><br><span class="line">    print(<span class="string">'==='</span>*<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    s2.look()</span><br><span class="line">    s2.walk()</span><br><span class="line">    s2.learn()</span><br></pre></td></tr></table></figure><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[学习]python类，继承&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://blog.afacode.top/categories/python/"/>
    
    
    <category term="python" scheme="https://blog.afacode.top/tags/python/"/>
    
    <category term="学习" scheme="https://blog.afacode.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>git代码分支合并(merge)，tag提交</title>
    <link href="https://blog.afacode.top/2017/08/22/git-merge-and-tag/"/>
    <id>https://blog.afacode.top/2017/08/22/git-merge-and-tag/</id>
    <published>2017-08-21T23:48:19.000Z</published>
    <updated>2023-07-13T15:06:15.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git代码分支合并，tag提交"><a href="#git代码分支合并，tag提交" class="headerlink" title="git代码分支合并，tag提交"></a>git代码分支合并，tag提交</h2><ul><li><p>将自己分支代码合并到测试分支以便测试人员测试 先切换版本到dev分支</p><blockquote><p><code>git checkout dev</code></p></blockquote></li><li><p>当前dev分支在合并afacode分支的代码,出现冲突，寻找有关开发人员，手动解决冲突</p><blockquote><p><code>git merge afacode</code></p></blockquote></li><li><p>提交dev分支合并的代码到远程dev分支上</p><blockquote><p><code>git push origin dev</code></p></blockquote></li><li><p>测试通过，上线代码需要打tag,在master分支打tag 打版本v1.0.0.0</p><blockquote><p><code>git tag -a 版本号 -m &#39;注解&#39;</code></p></blockquote></li><li><p>提交版本v1.0.0.0到仓库</p><blockquote><p><code>git push origin v1.0.0.0</code></p></blockquote></li><li><p>更改本地branch 名称 master-&gt;main</p><blockquote><p>git branch -M main</p></blockquote></li></ul><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;git代码分支合并，tag提交&quot;&gt;&lt;a href=&quot;#git代码分支合并，tag提交&quot; class=&quot;headerlink&quot; title=&quot;git代码分支合并，tag提交&quot;&gt;&lt;/a&gt;git代码分支合并，tag提交&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将自己分支代码合并</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="git" scheme="https://blog.afacode.top/tags/git/"/>
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>git 清空所有(历史)commit记录</title>
    <link href="https://blog.afacode.top/2017/05/11/git-clean-log/"/>
    <id>https://blog.afacode.top/2017/05/11/git-clean-log/</id>
    <published>2017-05-11T14:34:45.000Z</published>
    <updated>2023-07-13T15:06:15.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-清空所有-历史-commit记录"><a href="#git-清空所有-历史-commit记录" class="headerlink" title="git 清空所有(历史)commit记录"></a>git 清空所有(历史)commit记录</h2><p>例如: 将代码提交到git仓库，将一些敏感信息提交，所以需要删除提交记录以彻底清除提交信息，以得到一个干净的仓库且代码不变</p><ul><li><blockquote><p><code>git checkout --orphan tmp_branch</code> tmp_branch 临时的分支</p></blockquote></li><li><blockquote><p><code>git add -A</code> 或 <code>git add .</code> </p></blockquote></li><li><blockquote><p><code>git commit -m &quot;删除git历史，整理第一次提交&quot;</code></p></blockquote></li><li><blockquote><p><code>git branch -D master</code> 删除分支</p></blockquote></li><li><blockquote><p><code>git branch -m master</code> 重命名tmp_branch为master</p></blockquote></li><li><blockquote><p><code>git push -f origin master</code> 强制推送到远程</p></blockquote></li></ul><p>欢迎访问我的博客 &nbsp;<a href="blog.afacode.top">地址</a> &nbsp; &nbsp; &nbsp;<br><a href="https://blog.afacode.top/">https://blog.afacode.top</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;git-清空所有-历史-commit记录&quot;&gt;&lt;a href=&quot;#git-清空所有-历史-commit记录&quot; class=&quot;headerlink&quot; title=&quot;git 清空所有(历史)commit记录&quot;&gt;&lt;/a&gt;git 清空所有(历史)commit记录&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="git" scheme="https://blog.afacode.top/tags/git/"/>
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>hexo的使用</title>
    <link href="https://blog.afacode.top/2017/02/11/hexo-use/"/>
    <id>https://blog.afacode.top/2017/02/11/hexo-use/</id>
    <published>2017-02-11T08:10:53.000Z</published>
    <updated>2023-07-13T15:06:15.413Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo.io官网</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>git &amp;&amp; node</code> <br><br><code>npm install -g hexo-cli</code> <br><br><code>hexo init blog &amp;&amp; cd blog &amp;&amp; npm install</code></p><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p><code>hexo new &quot;new article&quot;</code></p><blockquote><p><code>hexo new [layout] &lt;title&gt;</code></p></blockquote><p>layout默认为 post<br>| 布局 | 路径 |<br>| —— | —— |<br>| post | source/_posts |<br>| page | source |<br>| draft | source/_drafts |</p><h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h4><p><code>hexo publish [layout] &lt;title&gt;</code></p><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2019</span><span class="string">/5/7</span> <span class="number">20</span><span class="string">:12:22</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">demo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h2><p><code>hexo g || hexo generate</code> <br><br><code>hexo s || hexo server</code> <br><br><code>localhost:4000</code> <br></p><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p><h2 id="评论插件支持"><a href="#评论插件支持" class="headerlink" title="评论插件支持"></a>评论插件支持</h2><blockquote><p>多说</p></blockquote><blockquote><p>畅言</p></blockquote><blockquote><p>来必力</p></blockquote><h2 id="增加搜索功能"><a href="#增加搜索功能" class="headerlink" title="增加搜索功能"></a>增加搜索功能</h2><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="字数统计-次数统计"><a href="#字数统计-次数统计" class="headerlink" title="字数统计,次数统计"></a>字数统计,次数统计</h3><p><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">显示站点访问量</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo.io官网&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="tools" scheme="https://blog.afacode.top/categories/tools/"/>
    
    
    <category term="tool" scheme="https://blog.afacode.top/tags/tool/"/>
    
    <category term="hexo" scheme="https://blog.afacode.top/tags/hexo/"/>
    
  </entry>
  
</feed>
